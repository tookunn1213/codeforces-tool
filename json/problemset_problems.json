[
    {
        "type": "PROGRAMMING",
        "name": "Bear and Finding Criminals",
        "tags": [
            "constructive algorithms",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 680,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bear and Five Cards",
        "tags": [
            "constructive algorithms",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 680,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bear and Bad Powers of 42",
        "tags": [],
        "points": 2500.0,
        "contestId": 679,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bear and Chase",
        "tags": [
            "brute force",
            "dfs and similar",
            "implementation"
        ],
        "points": 2000.0,
        "contestId": 679,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bear and Square Grid",
        "tags": [
            "dfs and similar",
            "dsu",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 679,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bear and Tower of Cubes",
        "tags": [
            "greedy"
        ],
        "points": 1250.0,
        "contestId": 679,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bear and Prime 100",
        "tags": [
            "constructive algorithms"
        ],
        "points": 750.0,
        "contestId": 679,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vanya and Balloons",
        "tags": [
            "binary search",
            "brute force",
            "dp",
            "implementation"
        ],
        "points": 2250.0,
        "contestId": 677,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vanya and Treasure",
        "tags": [
            "data structures",
            "graphs"
        ],
        "points": 2250.0,
        "contestId": 677,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vanya and Label",
        "tags": [
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 677,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vanya and Food Processor",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 1000.0,
        "contestId": 677,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vanya and Fence",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 677,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Last Fight Between Human and AI",
        "tags": [
            "math"
        ],
        "points": 2250.0,
        "contestId": 676,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Theseus and labyrinth",
        "tags": [
            "implementation",
            "shortest paths"
        ],
        "points": 2250.0,
        "contestId": 676,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vasya and String",
        "tags": [
            "binary search",
            "dp",
            "two pointers"
        ],
        "points": 1500.0,
        "contestId": 676,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Pyramid of Glasses",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 676,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Nicholas and Permutation",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 676,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Trains and Statistic",
        "tags": [
            "data structures",
            "dp",
            "greedy"
        ],
        "points": 2500.0,
        "contestId": 675,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tree Construction",
        "tags": [
            "data structures",
            "trees"
        ],
        "points": 2000.0,
        "contestId": 675,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Money Transfers",
        "tags": [
            "data structures",
            "greedy",
            "sortings"
        ],
        "points": 1500.0,
        "contestId": 675,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Restoring Painting",
        "tags": [
            "brute force",
            "constructive algorithms",
            "math"
        ],
        "points": 1000.0,
        "contestId": 675,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Infinite Sequence",
        "tags": [
            "math"
        ],
        "points": 500.0,
        "contestId": 675,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Problems for Round",
        "tags": [
            "greedy",
            "implementation"
        ],
        "points": 750.0,
        "contestId": 673,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bear and Game",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 673,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Different is Good",
        "tags": [
            "constructive algorithms",
            "implementation",
            "strings"
        ],
        "points": 1000.0,
        "contestId": 672,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Summer Camp",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 672,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Organizing a Race",
        "tags": [
            "data structures",
            "greedy"
        ],
        "points": 3000.0,
        "contestId": 671,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Roads in Yusland",
        "tags": [
            "data structures",
            "dp",
            "greedy"
        ],
        "points": 2000.0,
        "contestId": 671,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ultimate Weirdness of an Array",
        "tags": [
            "data structures",
            "number theory"
        ],
        "points": 1500.0,
        "contestId": 671,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Robin Hood",
        "tags": [
            "binary search",
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 671,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Recycling Bottles",
        "tags": [
            "dp",
            "greedy"
        ],
        "points": 500.0,
        "contestId": 671,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Restore a Number",
        "tags": [
            "constructive algorithms",
            "strings"
        ],
        "points": 2500.0,
        "contestId": 670,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "Correct Bracket Sequence Editor",
        "tags": [
            "data structures",
            "dsu"
        ],
        "points": 2000.0,
        "contestId": 670,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Magic Powder - 2",
        "tags": [
            "binary search"
        ],
        "points": 500.0,
        "contestId": 670,
        "index": "D2"
    },
    {
        "type": "PROGRAMMING",
        "name": "Magic Powder - 1",
        "tags": [
            "binary search",
            "brute force"
        ],
        "points": 1000.0,
        "contestId": 670,
        "index": "D1"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cinema",
        "tags": [
            "implementation",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 670,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Game of Robots",
        "tags": [
            "implementation"
        ],
        "points": 750.0,
        "contestId": 670,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Holidays",
        "tags": [
            "brute force",
            "constructive algorithms"
        ],
        "points": 500.0,
        "contestId": 670,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Artem and Presents",
        "tags": [
            "math"
        ],
        "points": 500.0,
        "contestId": 669,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Coat of Anticubism",
        "tags": [
            "constructive algorithms",
            "geometry"
        ],
        "points": 1000.0,
        "contestId": 667,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Pouring Rain",
        "tags": [
            "geometry",
            "math"
        ],
        "points": 500.0,
        "contestId": 667,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Forensic Examination",
        "tags": [
            "data structures",
            "string suffix structures"
        ],
        "points": 3000.0,
        "contestId": 666,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Chain Reaction",
        "tags": [
            "brute force"
        ],
        "points": 2000.0,
        "contestId": 666,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Codeword",
        "tags": [
            "combinatorics"
        ],
        "points": 2000.0,
        "contestId": 666,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "World Tour",
        "tags": [
            "graphs",
            "shortest paths"
        ],
        "points": 1000.0,
        "contestId": 666,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Reberland Linguistics",
        "tags": [
            "dp",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 666,
        "index": "A"
    },
    {
        "contestId": 665,
        "name": "Four Divisors",
        "tags": [
            "dp",
            "math",
            "number theory"
        ],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 665,
        "name": "Beautiful Subarrays",
        "tags": [
            "data structures",
            "divide and conquer"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 665,
        "name": "Simple Subset",
        "tags": [
            "constructive algorithms",
            "greedy"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 665,
        "name": "Simple Strings",
        "tags": [
            "dp",
            "greedy",
            "strings"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 665,
        "name": "Shopping",
        "tags": [
            "brute force"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 665,
        "name": "Buses Between Cities",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Complicated GCD",
        "tags": [
            "math"
        ],
        "points": 500.0,
        "contestId": 664,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Rebus",
        "tags": [
            "constructive algorithms",
            "expression parsing",
            "greedy",
            "math"
        ],
        "points": 500.0,
        "contestId": 663,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "To Hack or not to Hack",
        "tags": [
            "brute force",
            "dp",
            "greedy"
        ],
        "points": 2250.0,
        "contestId": 662,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "International Olympiad",
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "math"
        ],
        "points": 250.0,
        "contestId": 662,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Binary Table",
        "tags": [
            "bitmasks",
            "brute force",
            "divide and conquer",
            "dp",
            "fft",
            "math"
        ],
        "points": 2250.0,
        "contestId": 662,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Graph Coloring",
        "tags": [
            "dfs and similar"
        ],
        "points": 250.0,
        "contestId": 662,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Gambling Nim",
        "tags": [
            "bitmasks",
            "math",
            "matrices",
            "probabilities"
        ],
        "points": 500.0,
        "contestId": 662,
        "index": "A"
    },
    {
        "contestId": 661,
        "name": "Rotate Matrix",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "H"
    },
    {
        "contestId": 661,
        "name": "Hungarian Notation",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "G"
    },
    {
        "contestId": 661,
        "name": "Primes in Interval",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 661,
        "name": "Divisibility Check",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 661,
        "name": "Maximal Difference",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 661,
        "name": "Array Sum",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 661,
        "name": "Seasons",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 661,
        "name": "Lazy Caterer Sequence",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "contestId": 660,
        "name": "Bear and Bowling 4",
        "tags": [
            "binary search",
            "data structures",
            "geometry",
            "ternary search"
        ],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 660,
        "name": "Different Subsets For All Tuples",
        "tags": [
            "combinatorics"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 660,
        "name": "Number of Parallelograms",
        "tags": [
            "geometry"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 660,
        "name": "Hard Process",
        "tags": [
            "binary search",
            "dp",
            "two pointers"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 660,
        "name": "Seating On Bus",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 660,
        "name": "Co-prime Array",
        "tags": [
            "greedy",
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fence Divercity",
        "tags": [
            "combinatorics",
            "dp"
        ],
        "points": 2500.0,
        "contestId": 659,
        "index": "G"
    },
    {
        "type": "PROGRAMMING",
        "name": "Polycarp and Hay",
        "tags": [
            "dfs and similar",
            "dsu",
            "graphs",
            "sortings"
        ],
        "points": 2000.0,
        "contestId": 659,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "New Reform",
        "tags": [
            "data structures",
            "dfs and similar",
            "dsu",
            "graphs",
            "greedy"
        ],
        "points": 1500.0,
        "contestId": 659,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bicycle Race",
        "tags": [
            "geometry",
            "implementation",
            "math"
        ],
        "points": 1250.0,
        "contestId": 659,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tanya and Toys",
        "tags": [
            "greedy",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 659,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Qualifying Contest",
        "tags": [
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 659,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Round House",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 659,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bear and Reverse Radewoosh",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 658,
        "index": "A"
    },
    {
        "contestId": 656,
        "name": "You're a Professional",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "G"
    },
    {
        "contestId": 656,
        "name": "Ace It!",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 656,
        "name": "Out of Controls",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 656,
        "name": "Rosetta Problem",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 656,
        "name": "Without Text",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 656,
        "name": "Scrambled",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 656,
        "name": "Da Vinci Powers",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Move by Prime",
        "tags": [
            "combinatorics"
        ],
        "points": 3500.0,
        "contestId": 653,
        "index": "G"
    },
    {
        "type": "PROGRAMMING",
        "name": "Paper task",
        "tags": [
            "data structures",
            "string suffix structures"
        ],
        "points": 3500.0,
        "contestId": 653,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bear and Forgotten Tree 2",
        "tags": [
            "dfs and similar",
            "dsu",
            "graphs"
        ],
        "points": 2500.0,
        "contestId": 653,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Delivery Bears",
        "tags": [
            "binary search",
            "flows"
        ],
        "points": 2000.0,
        "contestId": 653,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bear and Up-Down",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 653,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bear and Compressing",
        "tags": [
            "brute force",
            "dfs and similar",
            "dp",
            "strings"
        ],
        "points": 1000.0,
        "contestId": 653,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bear and Three Balls",
        "tags": [
            "brute force",
            "implementation",
            "sortings"
        ],
        "points": 500.0,
        "contestId": 653,
        "index": "A"
    },
    {
        "contestId": 652,
        "name": "Ants on a Circle",
        "tags": [
            "constructive algorithms",
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 652,
        "name": "Pursuit For Artifacts",
        "tags": [
            "dfs and similar",
            "dsu",
            "graphs",
            "trees"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 652,
        "name": "Nested Segments",
        "tags": [
            "data structures",
            "sortings"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 652,
        "name": "Foe Pairs",
        "tags": [
            "two pointers"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 652,
        "name": "z-sort",
        "tags": [
            "sortings"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 652,
        "name": "Gabriel and Caterpillar",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Beautiful Paintings",
        "tags": [
            "greedy",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 651,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Joysticks",
        "tags": [
            "dp",
            "greedy"
        ],
        "points": 500.0,
        "contestId": 651,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Clockwork Bomb",
        "tags": [
            "data structures",
            "dfs and similar",
            "dsu",
            "trees"
        ],
        "points": 2500.0,
        "contestId": 650,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Zip-line",
        "tags": [
            "binary search",
            "data structures",
            "dp"
        ],
        "points": 2000.0,
        "contestId": 650,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Table Compression",
        "tags": [
            "dfs and similar",
            "dp",
            "dsu",
            "graphs",
            "greedy"
        ],
        "points": 1500.0,
        "contestId": 650,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Image Preview",
        "tags": [
            "binary search",
            "dp",
            "two pointers"
        ],
        "points": 1000.0,
        "contestId": 650,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Watchmen",
        "tags": [
            "data structures",
            "math"
        ],
        "points": 500.0,
        "contestId": 650,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Armistice Area Apportionment",
        "tags": [
            "binary search",
            "geometry"
        ],
        "points": 3500.0,
        "contestId": 645,
        "index": "G"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cowslip Collections",
        "tags": [
            "combinatorics",
            "math",
            "number theory"
        ],
        "points": 3000.0,
        "contestId": 645,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "Intellectual Inquiry",
        "tags": [
            "dp",
            "greedy",
            "strings"
        ],
        "points": 2500.0,
        "contestId": 645,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Robot Rapping Results Report",
        "tags": [
            "binary search",
            "dp",
            "graphs"
        ],
        "points": 2000.0,
        "contestId": 645,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Enduring Exodus",
        "tags": [
            "binary search",
            "two pointers"
        ],
        "points": 1500.0,
        "contestId": 645,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Mischievous Mess Makers",
        "tags": [
            "greedy",
            "math"
        ],
        "points": 1000.0,
        "contestId": 645,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Amity Assessment",
        "tags": [
            "brute force",
            "constructive algorithms",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 645,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Hostname Aliases",
        "tags": [
            "binary search",
            "data structures",
            "sortings",
            "strings"
        ],
        "points": 1500.0,
        "contestId": 644,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Processing Queries",
        "tags": [
            "data structures",
            "two pointers"
        ],
        "points": 1000.0,
        "contestId": 644,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Parliament of Berland",
        "tags": [
            "constructive algorithms"
        ],
        "points": 500.0,
        "contestId": 644,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Choosing Ads",
        "tags": [],
        "points": 3000.0,
        "contestId": 643,
        "index": "G"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bears and Juice",
        "tags": [
            "math"
        ],
        "points": 3000.0,
        "contestId": 643,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bear and Destroying Subtrees",
        "tags": [
            "dp",
            "math",
            "probabilities",
            "trees"
        ],
        "points": 2250.0,
        "contestId": 643,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bearish Fanpages",
        "tags": [],
        "points": 2250.0,
        "contestId": 643,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Levels and Regions",
        "tags": [
            "dp"
        ],
        "points": 1750.0,
        "contestId": 643,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bear and Two Paths",
        "tags": [
            "constructive algorithms"
        ],
        "points": 1000.0,
        "contestId": 643,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bear and Colors",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 643,
        "index": "A"
    },
    {
        "contestId": 642,
        "name": "Scheduler for Invokers",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Artem and Graph",
        "tags": [],
        "points": 3000.0,
        "contestId": 641,
        "index": "G"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Artem and 2-SAT",
        "tags": [],
        "points": 3000.0,
        "contestId": 641,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Artem and Time Machine",
        "tags": [
            "data structures"
        ],
        "points": 2000.0,
        "contestId": 641,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Artem and Random Variable",
        "tags": [
            "dp",
            "implementation",
            "math",
            "probabilities"
        ],
        "points": 1500.0,
        "contestId": 641,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Artem and Dance",
        "tags": [
            "brute force",
            "constructive algorithms",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 641,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Artem and Matrix",
        "tags": [
            "implementation"
        ],
        "points": 750.0,
        "contestId": 641,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Artem and Grasshopper",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 641,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bear and Chemistry",
        "tags": [
            "data structures",
            "dfs and similar",
            "graphs",
            "trees"
        ],
        "points": 3000.0,
        "contestId": 639,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bear and Paradox",
        "tags": [
            "greedy",
            "math",
            "sortings"
        ],
        "points": 2000.0,
        "contestId": 639,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bear and Contribution",
        "tags": [
            "data structures",
            "greedy",
            "sortings"
        ],
        "points": 1500.0,
        "contestId": 639,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bear and Polynomials",
        "tags": [
            "hashing",
            "implementation",
            "math"
        ],
        "points": 1000.0,
        "contestId": 639,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bear and Forgotten Tree 3",
        "tags": [
            "constructive algorithms",
            "graphs",
            "trees"
        ],
        "points": 750.0,
        "contestId": 639,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bear and Displayed Friends",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 639,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Three-dimensional Turtle Super Computer ",
        "tags": [
            "brute force",
            "dfs and similar",
            "graphs"
        ],
        "points": 2000.0,
        "contestId": 638,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Road Improvement",
        "tags": [
            "dfs and similar",
            "greedy",
            "trees"
        ],
        "points": 1500.0,
        "contestId": 638,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Making Genome in Berland",
        "tags": [
            "dfs and similar",
            "strings"
        ],
        "points": 1000.0,
        "contestId": 638,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Home Numbers",
        "tags": [
            "constructive algorithms"
        ],
        "points": 500.0,
        "contestId": 638,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Running with Obstacles",
        "tags": [
            "data structures",
            "dp",
            "greedy"
        ],
        "points": 2000.0,
        "contestId": 637,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Promocodes with Mistakes",
        "tags": [
            "brute force",
            "constructive algorithms",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 637,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Chat Order",
        "tags": [
            "binary search",
            "data structures",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 637,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Voting for Photos",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 637,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Orchestra",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 635,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Island Puzzle",
        "tags": [
            "constructive algorithms",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 634,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fibonacci-ish II",
        "tags": [
            "data structures",
            "implementation"
        ],
        "points": 3000.0,
        "contestId": 633,
        "index": "H"
    },
    {
        "type": "PROGRAMMING",
        "name": "Yash And Trees",
        "tags": [
            "bitmasks",
            "data structures",
            "dfs and similar"
        ],
        "points": 3000.0,
        "contestId": 633,
        "index": "G"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Chocolate Spree",
        "tags": [
            "dfs and similar",
            "dp",
            "trees"
        ],
        "points": 2750.0,
        "contestId": 633,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "Startup Funding",
        "tags": [
            "binary search",
            "data structures",
            "probabilities",
            "two pointers"
        ],
        "points": 2500.0,
        "contestId": 633,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fibonacci-ish",
        "tags": [
            "brute force",
            "hashing",
            "implementation",
            "math"
        ],
        "points": 1750.0,
        "contestId": 633,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Spy Syndrome 2",
        "tags": [
            "data structures",
            "dp",
            "hashing",
            "implementation",
            "sortings",
            "string suffix structures",
            "strings"
        ],
        "points": 1500.0,
        "contestId": 633,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "A Trivial Problem",
        "tags": [
            "brute force",
            "constructive algorithms",
            "math",
            "number theory"
        ],
        "points": 500.0,
        "contestId": 633,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ebony and Ivory",
        "tags": [
            "brute force",
            "math"
        ],
        "points": 250.0,
        "contestId": 633,
        "index": "A"
    },
    {
        "contestId": 632,
        "name": "Magic Matrix",
        "tags": [
            "brute force",
            "divide and conquer",
            "graphs",
            "trees"
        ],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 632,
        "name": "Thief in a Shop",
        "tags": [
            "divide and conquer",
            "dp",
            "fft"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 632,
        "name": "Longest Subsequence",
        "tags": [
            "brute force",
            "math",
            "number theory"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 632,
        "name": "The Smallest String Concatenation",
        "tags": [
            "sortings",
            "strings"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 632,
        "name": "Alice, Bob, Two Teams",
        "tags": [
            "brute force",
            "constructive algorithms"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 632,
        "name": "Grandma Laura and Apples",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Product Sum",
        "tags": [
            "data structures",
            "dp",
            "geometry"
        ],
        "points": 2500.0,
        "contestId": 631,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Messenger",
        "tags": [
            "data structures",
            "hashing",
            "string suffix structures",
            "strings"
        ],
        "points": 2000.0,
        "contestId": 631,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Report",
        "tags": [
            "data structures",
            "sortings"
        ],
        "points": 1500.0,
        "contestId": 631,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Print Check",
        "tags": [
            "constructive algorithms",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 631,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Interview",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 631,
        "index": "A"
    },
    {
        "contestId": 630,
        "name": "Game",
        "tags": [
            "games"
        ],
        "type": "PROGRAMMING",
        "index": "R"
    },
    {
        "contestId": 630,
        "name": "Pyramids",
        "tags": [
            "geometry"
        ],
        "type": "PROGRAMMING",
        "index": "Q"
    },
    {
        "contestId": 630,
        "name": "Area of a Star",
        "tags": [
            "geometry"
        ],
        "type": "PROGRAMMING",
        "index": "P"
    },
    {
        "contestId": 630,
        "name": "Arrow",
        "tags": [
            "geometry"
        ],
        "type": "PROGRAMMING",
        "index": "O"
    },
    {
        "contestId": 630,
        "name": "Forecast",
        "tags": [
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "N"
    },
    {
        "contestId": 630,
        "name": "Turn",
        "tags": [
            "geometry",
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "M"
    },
    {
        "contestId": 630,
        "name": "Cracking the Code",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "L"
    },
    {
        "contestId": 630,
        "name": "Indivisibility",
        "tags": [
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "K"
    },
    {
        "contestId": 630,
        "name": "Divisibility",
        "tags": [
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "J"
    },
    {
        "contestId": 630,
        "name": "Parking Lot",
        "tags": [
            "combinatorics"
        ],
        "type": "PROGRAMMING",
        "index": "I"
    },
    {
        "contestId": 630,
        "name": "Benches",
        "tags": [
            "combinatorics"
        ],
        "type": "PROGRAMMING",
        "index": "H"
    },
    {
        "contestId": 630,
        "name": "Challenge Pennants",
        "tags": [
            "combinatorics"
        ],
        "type": "PROGRAMMING",
        "index": "G"
    },
    {
        "contestId": 630,
        "name": "Selection of Personnel",
        "tags": [
            "combinatorics"
        ],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 630,
        "name": "A rectangle",
        "tags": [
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 630,
        "name": "Hexagons!",
        "tags": [
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 630,
        "name": "Lucky Numbers",
        "tags": [
            "combinatorics",
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 630,
        "name": "Moore's Law",
        "tags": [
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 630,
        "name": "Again Twenty Five!",
        "tags": [
            "number theory"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Famil Door and Roads",
        "tags": [
            "dfs and similar",
            "dp",
            "probabilities",
            "trees"
        ],
        "points": 2500.0,
        "contestId": 629,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Babaei and Birthday Cake",
        "tags": [
            "data structures",
            "dp"
        ],
        "points": 2000.0,
        "contestId": 629,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Famil Door and Brackets",
        "tags": [
            "dp",
            "strings"
        ],
        "points": 1750.0,
        "contestId": 629,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Far Relative\u2019s Problem",
        "tags": [
            "brute force"
        ],
        "points": 1000.0,
        "contestId": 629,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Far Relative\u2019s Birthday Cake",
        "tags": [
            "brute force",
            "constructive algorithms",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 629,
        "index": "A"
    },
    {
        "contestId": 628,
        "name": "Bear and Fair Set",
        "tags": [
            "flows"
        ],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 628,
        "name": "Zbazi in Zeydabad",
        "tags": [
            "data structures",
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 628,
        "name": "Magic Numbers",
        "tags": [
            "dp"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 628,
        "name": "Bear and String Distance",
        "tags": [
            "greedy"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 628,
        "name": "New Skateboard",
        "tags": [
            "dp"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 628,
        "name": "Tennis Tournament",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Island Puzzle",
        "tags": [
            "dfs and similar",
            "graphs",
            "trees"
        ],
        "points": 3000.0,
        "contestId": 627,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "Orchestra",
        "tags": [
            "two pointers"
        ],
        "points": 2500.0,
        "contestId": 627,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Preorder Test",
        "tags": [
            "binary search",
            "dp",
            "trees"
        ],
        "points": 2000.0,
        "contestId": 627,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Package Delivery",
        "tags": [
            "data structures",
            "divide and conquer",
            "greedy"
        ],
        "points": 1500.0,
        "contestId": 627,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Factory Repairs",
        "tags": [
            "data structures"
        ],
        "points": 1000.0,
        "contestId": 627,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "XOR Equation",
        "tags": [
            "dp",
            "math"
        ],
        "points": 500.0,
        "contestId": 627,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Raffles",
        "tags": [
            "data structures",
            "greedy"
        ],
        "points": 3000.0,
        "contestId": 626,
        "index": "G"
    },
    {
        "type": "PROGRAMMING",
        "name": "Group Projects",
        "tags": [
            "dp"
        ],
        "points": 2500.0,
        "contestId": 626,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "Simple Skewness",
        "tags": [
            "binary search",
            "math",
            "ternary search"
        ],
        "points": 2000.0,
        "contestId": 626,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Jerry's Protest",
        "tags": [
            "brute force",
            "combinatorics",
            "probabilities"
        ],
        "points": 1500.0,
        "contestId": 626,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Block Towers",
        "tags": [
            "brute force",
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 626,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cards",
        "tags": [
            "constructive algorithms",
            "dp"
        ],
        "points": 750.0,
        "contestId": 626,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Robot Sequence",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 626,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Frog Fights",
        "tags": [
            "data structures",
            "greedy"
        ],
        "points": 3000.0,
        "contestId": 625,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Finals in arithmetic",
        "tags": [
            "constructive algorithms",
            "implementation"
        ],
        "points": 2000.0,
        "contestId": 625,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "K-special Tables",
        "tags": [
            "constructive algorithms",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 625,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "War of the Corporations",
        "tags": [
            "constructive algorithms",
            "strings"
        ],
        "points": 750.0,
        "contestId": 625,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Guest From the Past",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 750.0,
        "contestId": 625,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Making a String",
        "tags": [
            "greedy",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 624,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Save Luke",
        "tags": [
            "math"
        ],
        "points": 500.0,
        "contestId": 624,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Transforming Sequence",
        "tags": [
            "combinatorics",
            "dp",
            "fft"
        ],
        "points": 2250.0,
        "contestId": 623,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Birthday",
        "tags": [
            "greedy",
            "probabilities"
        ],
        "points": 2000.0,
        "contestId": 623,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Electric Charges",
        "tags": [
            "binary search"
        ],
        "points": 1750.0,
        "contestId": 623,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Array GCD",
        "tags": [
            "dp",
            "greedy",
            "number theory"
        ],
        "points": 1000.0,
        "contestId": 623,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Graph and String",
        "tags": [
            "constructive algorithms",
            "graphs"
        ],
        "points": 500.0,
        "contestId": 623,
        "index": "A"
    },
    {
        "contestId": 622,
        "name": "The Sum of the k-th Powers",
        "tags": [
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 622,
        "name": "Ants in Leaves",
        "tags": [
            "dfs and similar",
            "greedy",
            "trees"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 622,
        "name": "Optimal Number Permutation",
        "tags": [
            "constructive algorithms"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 622,
        "name": "Not Equal on a Segment",
        "tags": [
            "data structures",
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 622,
        "name": "The Time",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 622,
        "name": "Infinite Sequence",
        "tags": [
            "implementation",
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Wet Shark and Blocks",
        "tags": [
            "dp",
            "matrices"
        ],
        "points": 2500.0,
        "contestId": 621,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Rat Kwesh and Cheese",
        "tags": [
            "brute force",
            "math"
        ],
        "points": 2000.0,
        "contestId": 621,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Wet Shark and Flowers",
        "tags": [
            "probabilities"
        ],
        "points": 1500.0,
        "contestId": 621,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Wet Shark and Bishops",
        "tags": [
            "combinatorics"
        ],
        "points": 1000.0,
        "contestId": 621,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Wet Shark and Odd and Even",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 621,
        "index": "A"
    },
    {
        "contestId": 620,
        "name": "Xors on Segments",
        "tags": [
            "data structures"
        ],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 620,
        "name": "New Year Tree",
        "tags": [
            "bitmasks",
            "data structures"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 620,
        "name": "Professor GukiZ and Two Arrays",
        "tags": [
            "binary search",
            "two pointers"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 620,
        "name": "Pearls in a Row",
        "tags": [
            "greedy"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 620,
        "name": "Grandfather Dovlet\u2019s calculator",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 620,
        "name": "Professor GukiZ's Robot",
        "tags": [
            "implementation",
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Combining Slimes",
        "tags": [
            "dp",
            "matrices",
            "probabilities"
        ],
        "points": 3500.0,
        "contestId": 618,
        "index": "G"
    },
    {
        "type": "PROGRAMMING",
        "name": "Double Knapsack",
        "tags": [
            "constructive algorithms",
            "two pointers"
        ],
        "points": 2750.0,
        "contestId": 618,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "Robot Arm",
        "tags": [
            "data structures"
        ],
        "points": 2500.0,
        "contestId": 618,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Hamiltonian Spanning Tree",
        "tags": [
            "dfs and similar",
            "dp",
            "graph matchings",
            "trees"
        ],
        "points": 1750.0,
        "contestId": 618,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Constellation",
        "tags": [
            "geometry",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 618,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Guess the Permutation",
        "tags": [
            "constructive algorithms"
        ],
        "points": 1000.0,
        "contestId": 618,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Slime Combining",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 618,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "XOR and Favorite Number",
        "tags": [
            "data structures"
        ],
        "points": 2750.0,
        "contestId": 617,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Polyline",
        "tags": [
            "constructive algorithms"
        ],
        "points": 1750.0,
        "contestId": 617,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Watering Flowers",
        "tags": [
            "implementation"
        ],
        "points": 1250.0,
        "contestId": 617,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Chocolate",
        "tags": [
            "combinatorics"
        ],
        "points": 1000.0,
        "contestId": 617,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Elephant",
        "tags": [
            "math"
        ],
        "points": 500.0,
        "contestId": 617,
        "index": "A"
    },
    {
        "contestId": 616,
        "name": "Expensive Strings",
        "tags": [
            "string suffix structures",
            "strings"
        ],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 616,
        "name": "Sum of Remainders",
        "tags": [
            "implementation",
            "math",
            "number theory"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 616,
        "name": "Longest k-Good Segment",
        "tags": [
            "binary search",
            "data structures",
            "two pointers"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 616,
        "name": "The Labyrinth",
        "tags": [
            "dfs and similar"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 616,
        "name": "Dinner with Emma",
        "tags": [
            "games",
            "greedy"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 616,
        "name": "Comparing Two Long Integers",
        "tags": [
            "implementation",
            "strings"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Hexagons",
        "tags": [
            "binary search",
            "implementation",
            "math"
        ],
        "points": 2500.0,
        "contestId": 615,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Multipliers",
        "tags": [
            "math",
            "number theory"
        ],
        "points": 2000.0,
        "contestId": 615,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Running Track",
        "tags": [
            "dp",
            "greedy",
            "strings",
            "trees"
        ],
        "points": 1750.0,
        "contestId": 615,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Longtail Hedgehog",
        "tags": [
            "dp",
            "graphs"
        ],
        "points": 1250.0,
        "contestId": 615,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bulbs",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 615,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Gena's Code",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 614,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Link/Cut Tree",
        "tags": [
            "brute force"
        ],
        "points": 500.0,
        "contestId": 614,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Puzzle Lover",
        "tags": [
            "dp",
            "hashing",
            "strings"
        ],
        "points": 2500.0,
        "contestId": 613,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Kingdom and its Cities",
        "tags": [
            "dfs and similar",
            "divide and conquer",
            "graphs",
            "sortings",
            "trees"
        ],
        "points": 2000.0,
        "contestId": 613,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Necklace",
        "tags": [
            "constructive algorithms"
        ],
        "points": 1250.0,
        "contestId": 613,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Skills",
        "tags": [
            "binary search",
            "brute force",
            "two pointers"
        ],
        "points": 1250.0,
        "contestId": 613,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Peter and Snow Blower",
        "tags": [
            "binary search",
            "geometry",
            "ternary search"
        ],
        "points": 750.0,
        "contestId": 613,
        "index": "A"
    },
    {
        "contestId": 612,
        "name": "Simba on the Circle",
        "tags": [
            "dp"
        ],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 612,
        "name": "Square Root of Permutation",
        "tags": [
            "combinatorics",
            "constructive algorithms",
            "dfs and similar",
            "graphs"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 612,
        "name": "The Union of k-Segments",
        "tags": [
            "sortings"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 612,
        "name": "Replace To Make Regular Bracket Sequence",
        "tags": [
            "data structures",
            "expression parsing",
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 612,
        "name": "HDD is Outdated Technology",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 612,
        "name": "The Text Splitting",
        "tags": [
            "brute force",
            "implementation",
            "strings"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "New Year  and Forgotten Tree",
        "tags": [
            "constructive algorithms",
            "flows"
        ],
        "points": 3500.0,
        "contestId": 611,
        "index": "H"
    },
    {
        "type": "PROGRAMMING",
        "name": "New Year and Cake",
        "tags": [
            "geometry",
            "two pointers"
        ],
        "points": 3000.0,
        "contestId": 611,
        "index": "G"
    },
    {
        "type": "PROGRAMMING",
        "name": "New Year and Cleaning",
        "tags": [
            "binary search",
            "implementation"
        ],
        "points": 2500.0,
        "contestId": 611,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "New Year and Three Musketeers",
        "tags": [
            "data structures",
            "greedy"
        ],
        "points": 2500.0,
        "contestId": 611,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "New Year and Ancient Prophecy",
        "tags": [
            "hashing",
            "strings"
        ],
        "points": 1750.0,
        "contestId": 611,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "New Year and Domino",
        "tags": [
            "dp",
            "implementation"
        ],
        "points": 1250.0,
        "contestId": 611,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "New Year and Old Property",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 750.0,
        "contestId": 611,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "New Year and Days",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 611,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Alphabet Permutations",
        "tags": [
            "data structures",
            "strings"
        ],
        "points": 2500.0,
        "contestId": 610,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vika and Segments",
        "tags": [
            "data structures",
            "geometry",
            "two pointers"
        ],
        "points": 2500.0,
        "contestId": 610,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Harmony Analysis",
        "tags": [
            "constructive algorithms"
        ],
        "points": 1500.0,
        "contestId": 610,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vika and Squares",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 610,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Pasha and Stick",
        "tags": [
            "combinatorics",
            "math"
        ],
        "points": 500.0,
        "contestId": 610,
        "index": "A"
    },
    {
        "contestId": 609,
        "name": "Frogs and mosquitoes",
        "tags": [
            "data structures"
        ],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 609,
        "name": "Minimum spanning tree for each edge",
        "tags": [
            "data structures",
            "dfs and similar",
            "dsu",
            "graphs",
            "trees"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 609,
        "name": "Gadgets for dollars and pounds",
        "tags": [
            "binary search",
            "two pointers"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 609,
        "name": "Load Balancing",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 609,
        "name": "The Best Gift",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 609,
        "name": "USB Flash Drives",
        "tags": [
            "greedy",
            "implementation",
            "sortings"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Hamming Distance Sum",
        "tags": [
            "combinatorics"
        ],
        "points": 1000.0,
        "contestId": 608,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Saitama Destroys Hotel",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 608,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cross Sum",
        "tags": [
            "binary search",
            "geometry"
        ],
        "points": 3000.0,
        "contestId": 607,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Power Tree",
        "tags": [
            "data structures"
        ],
        "points": 2000.0,
        "contestId": 607,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Marbles",
        "tags": [
            "hashing",
            "strings"
        ],
        "points": 1500.0,
        "contestId": 607,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Zuma",
        "tags": [
            "dp"
        ],
        "points": 1250.0,
        "contestId": 607,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Chain Reaction",
        "tags": [
            "binary search",
            "dp"
        ],
        "points": 500.0,
        "contestId": 607,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Testing Robots",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 606,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Magic Spheres",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 606,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Intergalaxy Trips",
        "tags": [
            "probabilities",
            "shortest paths"
        ],
        "points": 2500.0,
        "contestId": 605,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Board Game",
        "tags": [
            "data structures",
            "dfs and similar"
        ],
        "points": 2000.0,
        "contestId": 605,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Freelancer's Dreams",
        "tags": [
            "geometry"
        ],
        "points": 1500.0,
        "contestId": 605,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lazy Student",
        "tags": [
            "constructive algorithms",
            "data structures",
            "graphs"
        ],
        "points": 1000.0,
        "contestId": 605,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sorting Railway Cars",
        "tags": [
            "constructive algorithms",
            "greedy"
        ],
        "points": 500.0,
        "contestId": 605,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "More Cowbell",
        "tags": [
            "binary search",
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 604,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Uncowed Forces",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 604,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Pastoral Oddities",
        "tags": [
            "data structures",
            "divide and conquer",
            "dsu",
            "trees"
        ],
        "points": 3000.0,
        "contestId": 603,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ruminations on Ruminants",
        "tags": [
            "geometry",
            "math"
        ],
        "points": 2000.0,
        "contestId": 603,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lieges of Legendre",
        "tags": [
            "games"
        ],
        "points": 1500.0,
        "contestId": 603,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Moodular Arithmetic",
        "tags": [
            "dfs and similar",
            "dsu",
            "math",
            "number theory"
        ],
        "points": 1000.0,
        "contestId": 603,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Alternative Thinking",
        "tags": [
            "dp",
            "greedy"
        ],
        "points": 500.0,
        "contestId": 603,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Approximating a Constant Range",
        "tags": [
            "dp",
            "two pointers"
        ],
        "points": 1000.0,
        "contestId": 602,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Two Bases",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 602,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "A Museum Robbery",
        "tags": [
            "data structures",
            "dp"
        ],
        "points": 2500.0,
        "contestId": 601,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Acyclic Organic Compounds",
        "tags": [
            "data structures",
            "dfs and similar",
            "dsu",
            "hashing",
            "trees"
        ],
        "points": 2000.0,
        "contestId": 601,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Kleof\u00e1\u0161 and the n-thlon",
        "tags": [
            "dp",
            "probabilities"
        ],
        "points": 1250.0,
        "contestId": 601,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lipshitz Sequence",
        "tags": [
            "data structures"
        ],
        "points": 1250.0,
        "contestId": 601,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Two Routes",
        "tags": [
            "graphs",
            "shortest paths"
        ],
        "points": 500.0,
        "contestId": 601,
        "index": "A"
    },
    {
        "contestId": 600,
        "name": "Edge coloring of bipartite graph",
        "tags": [
            "graphs"
        ],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 600,
        "name": "Lomsat gelral",
        "tags": [
            "dfs and similar",
            "dsu",
            "trees"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 600,
        "name": "Area of Two Circles' Intersection",
        "tags": [
            "geometry"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 600,
        "name": "Make Palindrome",
        "tags": [
            "greedy"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 600,
        "name": "Queries about less or equal elements",
        "tags": [
            "binary search",
            "sortings",
            "two pointers"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 600,
        "name": "Extract Numbers",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sandy and Nuts",
        "tags": [
            "bitmasks",
            "dp"
        ],
        "points": 3000.0,
        "contestId": 599,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Spongebob and Squares",
        "tags": [
            "brute force",
            "math"
        ],
        "points": 2000.0,
        "contestId": 599,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Day at the Beach",
        "tags": [
            "sortings"
        ],
        "points": 1500.0,
        "contestId": 599,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Spongebob and Joke",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 599,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Patrick and Shopping",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 599,
        "index": "A"
    },
    {
        "contestId": 598,
        "name": "Cut Length",
        "tags": [
            "geometry"
        ],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 598,
        "name": "Chocolate Bar",
        "tags": [
            "brute force",
            "dp"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 598,
        "name": "Igor In the Museum",
        "tags": [
            "dfs and similar"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 598,
        "name": "Nearest vectors",
        "tags": [
            "geometry",
            "sortings"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 598,
        "name": "Queries on a String",
        "tags": [
            "implementation",
            "strings"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 598,
        "name": "Tricky Sum",
        "tags": [
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Subsequences",
        "tags": [
            "data structures",
            "dp"
        ],
        "points": 1500.0,
        "contestId": 597,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Restaurant",
        "tags": [
            "dp",
            "greedy",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 597,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Divisibility",
        "tags": [
            "math"
        ],
        "points": 500.0,
        "contestId": 597,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Wilbur and Strings",
        "tags": [
            "dfs and similar",
            "dp",
            "graphs"
        ],
        "points": 2500.0,
        "contestId": 596,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Wilbur and Trees",
        "tags": [
            "dp",
            "probabilities",
            "sortings"
        ],
        "points": 2250.0,
        "contestId": 596,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Wilbur and Points",
        "tags": [
            "greedy",
            "sortings"
        ],
        "points": 1500.0,
        "contestId": 596,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Wilbur and Array",
        "tags": [
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 596,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Wilbur and Swimming Pool",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 596,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Pasha and Phone",
        "tags": [
            "binary search",
            "math"
        ],
        "points": 1000.0,
        "contestId": 595,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vitaly and Night",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 595,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cutting the Line",
        "tags": [
            "string suffix structures",
            "strings"
        ],
        "points": 3000.0,
        "contestId": 594,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "REQ",
        "tags": [
            "data structures",
            "number theory"
        ],
        "points": 2000.0,
        "contestId": 594,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Edo and Magnets",
        "tags": [
            "brute force",
            "two pointers"
        ],
        "points": 1500.0,
        "contestId": 594,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Max and Bike",
        "tags": [
            "binary search",
            "geometry"
        ],
        "points": 1000.0,
        "contestId": 594,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Warrior and Archer",
        "tags": [
            "games"
        ],
        "points": 500.0,
        "contestId": 594,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Strange Calculation and Cats",
        "tags": [
            "dp",
            "matrices"
        ],
        "points": 3000.0,
        "contestId": 593,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Happy Tree Party",
        "tags": [
            "data structures",
            "trees"
        ],
        "points": 3000.0,
        "contestId": 593,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Beautiful Function",
        "tags": [
            "constructive algorithms",
            "math"
        ],
        "points": 3000.0,
        "contestId": 593,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Anton and Lines",
        "tags": [
            "geometry",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 593,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "2Char",
        "tags": [
            "brute force"
        ],
        "points": 250.0,
        "contestId": 593,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "BCPC",
        "tags": [
            "binary search",
            "geometry",
            "two pointers"
        ],
        "points": 3000.0,
        "contestId": 592,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Super M",
        "tags": [
            "dfs and similar",
            "dp",
            "trees"
        ],
        "points": 2000.0,
        "contestId": 592,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Big Race",
        "tags": [
            "math"
        ],
        "points": 1500.0,
        "contestId": 592,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Monster and the Squirrel",
        "tags": [
            "math"
        ],
        "points": 1000.0,
        "contestId": 592,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "PawnChess",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 592,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Rebranding",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 591,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Wizards' Duel",
        "tags": [
            "math"
        ],
        "points": 500.0,
        "contestId": 591,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Birthday",
        "tags": [
            "graph matchings",
            "strings"
        ],
        "points": 2500.0,
        "contestId": 590,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Top Secret Task",
        "tags": [
            "dp"
        ],
        "points": 1750.0,
        "contestId": 590,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Three States",
        "tags": [
            "dfs and similar",
            "graphs",
            "shortest paths"
        ],
        "points": 1250.0,
        "contestId": 590,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Chip 'n Dale Rescue Rangers",
        "tags": [
            "binary search",
            "geometry",
            "math"
        ],
        "points": 1000.0,
        "contestId": 590,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Median Smoothing",
        "tags": [],
        "points": 750.0,
        "contestId": 590,
        "index": "A"
    },
    {
        "contestId": 589,
        "name": "Taxi in Berland",
        "tags": [
            "shortest paths"
        ],
        "type": "PROGRAMMING",
        "index": "M"
    },
    {
        "contestId": 589,
        "name": "Agricultural Archaeology",
        "tags": [
            "greedy",
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "L"
    },
    {
        "contestId": 589,
        "name": "Task processing",
        "tags": [
            "brute force",
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "K"
    },
    {
        "contestId": 589,
        "name": "Cleaner Robot",
        "tags": [
            "dfs and similar",
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "J"
    },
    {
        "contestId": 589,
        "name": "Lottery",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "I"
    },
    {
        "contestId": 589,
        "name": "Tourist Guide",
        "tags": [
            "dfs and similar"
        ],
        "type": "PROGRAMMING",
        "index": "H"
    },
    {
        "contestId": 589,
        "name": "Hiring",
        "tags": [
            "binary search",
            "data structures"
        ],
        "type": "PROGRAMMING",
        "index": "G"
    },
    {
        "contestId": 589,
        "name": "Gourmet and Banquet",
        "tags": [
            "binary search",
            "flows",
            "greedy"
        ],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 589,
        "name": "Training with Doors",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 589,
        "name": "Boulevard",
        "tags": [
            "brute force",
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 589,
        "name": "Polycarp's Masterpiece",
        "tags": [
            "data structures",
            "divide and conquer",
            "dp"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 589,
        "name": "Layer Cake",
        "tags": [
            "sortings"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 589,
        "name": "Email Aliases",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Duff in Love",
        "tags": [
            "math"
        ],
        "points": 1000.0,
        "contestId": 588,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Duff and Meat",
        "tags": [
            "greedy"
        ],
        "points": 750.0,
        "contestId": 588,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Duff is Mad",
        "tags": [
            "data structures",
            "strings"
        ],
        "points": 2750.0,
        "contestId": 587,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "Duff as a Queen",
        "tags": [
            "data structures"
        ],
        "points": 2750.0,
        "contestId": 587,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Duff in Mafia",
        "tags": [
            "2-sat",
            "binary search"
        ],
        "points": 2000.0,
        "contestId": 587,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Duff in the Army",
        "tags": [
            "data structures",
            "trees"
        ],
        "points": 1500.0,
        "contestId": 587,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Duff in Beach",
        "tags": [
            "dp"
        ],
        "points": 1000.0,
        "contestId": 587,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Duff and Weight Lifting",
        "tags": [
            "greedy"
        ],
        "points": 500.0,
        "contestId": 587,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Laurenty and Shop",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 586,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Alena's Schedule",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 586,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Digits of Number Pi",
        "tags": [
            "dp",
            "implementation",
            "strings"
        ],
        "points": 3000.0,
        "contestId": 585,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "Present for Vitalik the Philatelist ",
        "tags": [
            "combinatorics",
            "math",
            "number theory"
        ],
        "points": 2250.0,
        "contestId": 585,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lizard Era: Beginning",
        "tags": [
            "meet-in-the-middle"
        ],
        "points": 1750.0,
        "contestId": 585,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Alice, Bob, Oranges and Apples",
        "tags": [
            "number theory"
        ],
        "points": 1250.0,
        "contestId": 585,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Phillip and Trains",
        "tags": [
            "dfs and similar"
        ],
        "points": 750.0,
        "contestId": 585,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Gennady the Dentist",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 585,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Anton and Ira",
        "tags": [
            "constructive algorithms",
            "greedy"
        ],
        "points": 2500.0,
        "contestId": 584,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dima and Lisa",
        "tags": [
            "number theory"
        ],
        "points": 2000.0,
        "contestId": 584,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Marina and Vasya",
        "tags": [
            "constructive algorithms",
            "greedy"
        ],
        "points": 1500.0,
        "contestId": 584,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Kolya and Tanya ",
        "tags": [
            "combinatorics"
        ],
        "points": 1000.0,
        "contestId": 584,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Olesya and Rodion",
        "tags": [
            "math"
        ],
        "points": 500.0,
        "contestId": 584,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Robot's Task",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 583,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Asphalting Roads",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 583,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Boolean Function",
        "tags": [
            "bitmasks",
            "dp",
            "expression parsing"
        ],
        "points": 2500.0,
        "contestId": 582,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Number of Binominal Coefficients",
        "tags": [
            "dp",
            "number theory"
        ],
        "points": 2250.0,
        "contestId": 582,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Superior Periodic Subarrays",
        "tags": [
            "number theory"
        ],
        "points": 1500.0,
        "contestId": 582,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Once Again...",
        "tags": [
            "dp",
            "matrices"
        ],
        "points": 1250.0,
        "contestId": 582,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "GCD Table",
        "tags": [
            "constructive algorithms",
            "greedy"
        ],
        "points": 750.0,
        "contestId": 582,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Zublicanes and Mumocrates",
        "tags": [
            "dp",
            "trees",
            "two pointers"
        ],
        "points": 3000.0,
        "contestId": 581,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "Kojiro and Furrari",
        "tags": [
            "dp",
            "greedy"
        ],
        "points": 3000.0,
        "contestId": 581,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Three Logos",
        "tags": [
            "bitmasks",
            "brute force",
            "constructive algorithms",
            "implementation",
            "math"
        ],
        "points": 2000.0,
        "contestId": 581,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Developing Skills",
        "tags": [
            "implementation",
            "sortings"
        ],
        "points": 1500.0,
        "contestId": 581,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Luxurious Houses",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 581,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vasya the Hipster",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 581,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Kefa and Watch",
        "tags": [
            "data structures",
            "hashing",
            "strings"
        ],
        "points": 2500.0,
        "contestId": 580,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Kefa and Dishes",
        "tags": [
            "bitmasks",
            "dp"
        ],
        "points": 2000.0,
        "contestId": 580,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Kefa and Park",
        "tags": [
            "dfs and similar",
            "trees"
        ],
        "points": 1500.0,
        "contestId": 580,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Kefa and Company",
        "tags": [
            "binary search",
            "sortings",
            "two pointers"
        ],
        "points": 1250.0,
        "contestId": 580,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Kefa and First Steps",
        "tags": [
            "brute force",
            "dp",
            "implementation"
        ],
        "points": 750.0,
        "contestId": 580,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Finding Team Member",
        "tags": [
            "brute force",
            "implementation",
            "sortings"
        ],
        "points": 500.0,
        "contestId": 579,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Raising Bacteria",
        "tags": [
            "bitmasks"
        ],
        "points": 250.0,
        "contestId": 579,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Mirror Box",
        "tags": [
            "matrices",
            "trees"
        ],
        "points": 3000.0,
        "contestId": 578,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "Walking!",
        "tags": [
            "constructive algorithms",
            "greedy"
        ],
        "points": 2750.0,
        "contestId": 578,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "LCS Again",
        "tags": [
            "dp",
            "greedy"
        ],
        "points": 2500.0,
        "contestId": 578,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Weakness and Poorness",
        "tags": [
            "ternary search"
        ],
        "points": 750.0,
        "contestId": 578,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "\"Or\" Game",
        "tags": [
            "brute force",
            "greedy"
        ],
        "points": 500.0,
        "contestId": 578,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "A Problem about Polyline",
        "tags": [
            "geometry",
            "math"
        ],
        "points": 250.0,
        "contestId": 578,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Modulo Sum",
        "tags": [
            "combinatorics",
            "data structures",
            "dp",
            "two pointers"
        ],
        "points": 1250.0,
        "contestId": 577,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Multiplication Table",
        "tags": [
            "implementation",
            "number theory"
        ],
        "points": 500.0,
        "contestId": 577,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Painting Edges",
        "tags": [
            "binary search",
            "data structures"
        ],
        "points": 2750.0,
        "contestId": 576,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Flights for Regular Customers",
        "tags": [
            "dp",
            "matrices"
        ],
        "points": 2000.0,
        "contestId": 576,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Points on Plane",
        "tags": [
            "constructive algorithms",
            "divide and conquer",
            "geometry",
            "greedy",
            "sortings"
        ],
        "points": 1250.0,
        "contestId": 576,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Invariance of Tree",
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "greedy",
            "trees"
        ],
        "points": 1250.0,
        "contestId": 576,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vasya and Petya's Game",
        "tags": [
            "math",
            "number theory"
        ],
        "points": 500.0,
        "contestId": 576,
        "index": "A"
    },
    {
        "contestId": 575,
        "name": "Robots protection",
        "tags": [
            "data structures"
        ],
        "type": "PROGRAMMING",
        "index": "I"
    },
    {
        "contestId": 575,
        "name": "Bots",
        "tags": [
            "combinatorics",
            "number theory"
        ],
        "type": "PROGRAMMING",
        "index": "H"
    },
    {
        "contestId": 575,
        "name": "Run for beer",
        "tags": [
            "dfs and similar",
            "shortest paths"
        ],
        "type": "PROGRAMMING",
        "index": "G"
    },
    {
        "contestId": 575,
        "name": "Bulbo",
        "tags": [
            "dp",
            "greedy"
        ],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 575,
        "name": "Spectator Riots",
        "tags": [
            "geometry"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 575,
        "name": "Tablecity",
        "tags": [
            "constructive algorithms"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 575,
        "name": "Party",
        "tags": [
            "bitmasks",
            "brute force",
            "graph matchings"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 575,
        "name": "Bribes",
        "tags": [
            "dfs and similar",
            "trees"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 575,
        "name": "Fibonotci",
        "tags": [
            "math",
            "matrices"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bear and Three Musketeers",
        "tags": [
            "brute force",
            "dfs and similar",
            "graphs",
            "hashing"
        ],
        "points": 1000.0,
        "contestId": 574,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bear and Elections",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 574,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bear and Bowling",
        "tags": [
            "greedy"
        ],
        "points": 2500.0,
        "contestId": 573,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bear and Cavalry",
        "tags": [
            "data structures",
            "divide and conquer",
            "dp"
        ],
        "points": 2000.0,
        "contestId": 573,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bear and Drawing",
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "trees"
        ],
        "points": 1750.0,
        "contestId": 573,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bear and Blocks",
        "tags": [
            "binary search",
            "data structures",
            "dp"
        ],
        "points": 1000.0,
        "contestId": 573,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bear and Poker",
        "tags": [
            "implementation",
            "number theory"
        ],
        "points": 500.0,
        "contestId": 573,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Order Book",
        "tags": [
            "data structures",
            "greedy",
            "implementation",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 572,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Arrays",
        "tags": [
            "sortings"
        ],
        "points": 500.0,
        "contestId": 572,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Geometric Progressions",
        "tags": [
            "math"
        ],
        "points": 2750.0,
        "contestId": 571,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Campus",
        "tags": [
            "binary search",
            "data structures",
            "dsu",
            "trees"
        ],
        "points": 2000.0,
        "contestId": 571,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "CNF 2",
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "graphs",
            "greedy"
        ],
        "points": 1500.0,
        "contestId": 571,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Minimization",
        "tags": [
            "dp",
            "greedy",
            "sortings"
        ],
        "points": 1250.0,
        "contestId": 571,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lengthening Sticks",
        "tags": [
            "combinatorics",
            "implementation",
            "math"
        ],
        "points": 750.0,
        "contestId": 571,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Pig and Palindromes",
        "tags": [
            "combinatorics",
            "dp"
        ],
        "points": 2500.0,
        "contestId": 570,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tree Requests",
        "tags": [
            "binary search",
            "constructive algorithms",
            "dfs and similar",
            "trees"
        ],
        "points": 2000.0,
        "contestId": 570,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Replacement",
        "tags": [
            "constructive algorithms",
            "data structures",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 570,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Simple Game",
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "math"
        ],
        "points": 1000.0,
        "contestId": 570,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Elections",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 570,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Inventory",
        "tags": [
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 569,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Music",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 569,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Longest Increasing Subsequence",
        "tags": [
            "data structures",
            "dp"
        ],
        "points": 2500.0,
        "contestId": 568,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sign Posts",
        "tags": [
            "brute force",
            "math"
        ],
        "points": 2250.0,
        "contestId": 568,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "New Language",
        "tags": [
            "2-sat",
            "greedy"
        ],
        "points": 1500.0,
        "contestId": 568,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Symmetric and Transitive",
        "tags": [
            "combinatorics",
            "dp",
            "math"
        ],
        "points": 1000.0,
        "contestId": 568,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Primes or Palindromes?",
        "tags": [
            "brute force",
            "implementation",
            "math",
            "number theory"
        ],
        "points": 500.0,
        "contestId": 568,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Mausoleum",
        "tags": [
            "dp"
        ],
        "points": 2500.0,
        "contestId": 567,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "President and Roads",
        "tags": [
            "dfs and similar",
            "graphs",
            "hashing",
            "shortest paths"
        ],
        "points": 2500.0,
        "contestId": 567,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "One-Dimensional Battle Ships",
        "tags": [
            "binary search",
            "data structures",
            "sortings"
        ],
        "points": 2000.0,
        "contestId": 567,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Geometric Progression",
        "tags": [
            "binary search",
            "data structures",
            "dp"
        ],
        "points": 1500.0,
        "contestId": 567,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Berland National Library",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 567,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lineland Mail",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 567,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Max and Min",
        "tags": [
            "geometry"
        ],
        "points": 2500.0,
        "contestId": 566,
        "index": "G"
    },
    {
        "type": "PROGRAMMING",
        "name": "Clique in the Divisibility Graph",
        "tags": [
            "dp",
            "math",
            "number theory"
        ],
        "points": 500.0,
        "contestId": 566,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "Restoring Map",
        "tags": [
            "bitmasks",
            "constructive algorithms",
            "trees"
        ],
        "points": 3000.0,
        "contestId": 566,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Restructuring Company",
        "tags": [
            "data structures",
            "dsu"
        ],
        "points": 1000.0,
        "contestId": 566,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Logistical Questions",
        "tags": [
            "dfs and similar",
            "divide and conquer",
            "trees"
        ],
        "points": 3000.0,
        "contestId": 566,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Replicating Processes",
        "tags": [
            "constructive algorithms",
            "greedy"
        ],
        "points": 2500.0,
        "contestId": 566,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Matching Names",
        "tags": [
            "dfs and similar",
            "strings",
            "trees"
        ],
        "points": 1750.0,
        "contestId": 566,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Gerald is into Art",
        "tags": [
            "constructive algorithms",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 560,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Currency System in Geraldion",
        "tags": [
            "geometry",
            "implementation",
            "sortings"
        ],
        "points": 500.0,
        "contestId": 560,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Gerald and Path",
        "tags": [
            "dp",
            "sortings"
        ],
        "points": 2250.0,
        "contestId": 559,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Randomizer",
        "tags": [
            "combinatorics",
            "geometry",
            "probabilities"
        ],
        "points": 2250.0,
        "contestId": 559,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Gerald and Giant Chess",
        "tags": [
            "combinatorics",
            "dp",
            "math",
            "number theory"
        ],
        "points": 1500.0,
        "contestId": 559,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Equivalent Strings",
        "tags": [
            "divide and conquer",
            "hashing",
            "sortings",
            "strings"
        ],
        "points": 1000.0,
        "contestId": 559,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Gerald's Hexagon",
        "tags": [
            "brute force",
            "geometry",
            "math"
        ],
        "points": 500.0,
        "contestId": 559,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "A Simple Task",
        "tags": [
            "data structures",
            "sortings",
            "strings"
        ],
        "points": 2500.0,
        "contestId": 558,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Guess Your Way Out! II",
        "tags": [
            "data structures",
            "implementation",
            "sortings"
        ],
        "points": 2250.0,
        "contestId": 558,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Amr and Chemistry",
        "tags": [
            "brute force",
            "greedy"
        ],
        "points": 1500.0,
        "contestId": 558,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Amr and The Large Array",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 558,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lala Land and Apple Trees",
        "tags": [
            "brute force",
            "implementation",
            "sortings"
        ],
        "points": 500.0,
        "contestId": 558,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ann and Half-Palindrome",
        "tags": [
            "data structures",
            "dp",
            "string suffix structures",
            "strings",
            "trees"
        ],
        "points": 2500.0,
        "contestId": 557,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vitaly and Cycle",
        "tags": [
            "combinatorics",
            "dfs and similar",
            "graphs",
            "math"
        ],
        "points": 2000.0,
        "contestId": 557,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Arthur and Table",
        "tags": [
            "brute force",
            "data structures",
            "dp",
            "greedy"
        ],
        "points": 1500.0,
        "contestId": 557,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Pasha and Tea",
        "tags": [
            "implementation",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 557,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ilya and Diplomas",
        "tags": [
            "greedy",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 557,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Case of Fake Numbers",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 250.0,
        "contestId": 556,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Case of the Zeros and Ones",
        "tags": [
            "greedy"
        ],
        "points": 250.0,
        "contestId": 556,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Case of Computer Network",
        "tags": [
            "dfs and similar",
            "graphs",
            "trees"
        ],
        "points": 3000.0,
        "contestId": 555,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Case of a Top Secret",
        "tags": [
            "binary search",
            "implementation",
            "math"
        ],
        "points": 2000.0,
        "contestId": 555,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Case of Chocolate",
        "tags": [
            "data structures"
        ],
        "points": 1250.0,
        "contestId": 555,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Case of Fugitive",
        "tags": [
            "data structures",
            "greedy",
            "sortings"
        ],
        "points": 750.0,
        "contestId": 555,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Case of Matryoshkas",
        "tags": [
            "implementation"
        ],
        "points": 250.0,
        "contestId": 555,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ohana Cleans Up",
        "tags": [
            "brute force",
            "strings"
        ],
        "points": 500.0,
        "contestId": 554,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Kyoya and Photobooks",
        "tags": [
            "brute force",
            "math"
        ],
        "points": 250.0,
        "contestId": 554,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Kyoya and Train",
        "tags": [
            "dp",
            "fft",
            "probabilities"
        ],
        "points": 3000.0,
        "contestId": 553,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Nudist Beach",
        "tags": [
            "binary search",
            "graphs",
            "greedy"
        ],
        "points": 1500.0,
        "contestId": 553,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Love Triangles",
        "tags": [
            "dfs and similar",
            "dsu",
            "graphs"
        ],
        "points": 1000.0,
        "contestId": 553,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Kyoya and Permutation",
        "tags": [
            "binary search",
            "combinatorics",
            "constructive algorithms",
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 553,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Kyoya and Colored Balls",
        "tags": [
            "combinatorics",
            "dp",
            "math"
        ],
        "points": 250.0,
        "contestId": 553,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vanya and Brackets",
        "tags": [
            "brute force",
            "dp",
            "expression parsing",
            "greedy",
            "implementation"
        ],
        "points": 2500.0,
        "contestId": 552,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vanya and Triangles",
        "tags": [
            "brute force",
            "combinatorics",
            "data structures",
            "geometry",
            "math",
            "sortings"
        ],
        "points": 2000.0,
        "contestId": 552,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vanya and Scales",
        "tags": [
            "brute force",
            "dp",
            "greedy",
            "math",
            "meet-in-the-middle"
        ],
        "points": 1500.0,
        "contestId": 552,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vanya and Books",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 1000.0,
        "contestId": 552,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vanya and Table",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 552,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "GukiZ and GukiZiana",
        "tags": [
            "binary search",
            "data structures"
        ],
        "points": 2500.0,
        "contestId": 551,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "GukiZ and Binary Operations",
        "tags": [
            "combinatorics",
            "math",
            "matrices",
            "number theory"
        ],
        "points": 2000.0,
        "contestId": 551,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "GukiZ hates Boxes",
        "tags": [
            "binary search",
            "greedy"
        ],
        "points": 1750.0,
        "contestId": 551,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "ZgukistringZ",
        "tags": [
            "brute force",
            "constructive algorithms",
            "implementation",
            "strings"
        ],
        "points": 1250.0,
        "contestId": 551,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "GukiZ and Contest",
        "tags": [
            "implementation",
            "sortings"
        ],
        "points": 500.0,
        "contestId": 551,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Brackets in Implications",
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation"
        ],
        "points": 3000.0,
        "contestId": 550,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Regular Bridge",
        "tags": [
            "constructive algorithms",
            "graphs",
            "implementation"
        ],
        "points": 2000.0,
        "contestId": 550,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Divisibility by Eight",
        "tags": [
            "brute force",
            "dp",
            "math"
        ],
        "points": 1000.0,
        "contestId": 550,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Preparing Olympiad",
        "tags": [
            "bitmasks",
            "brute force"
        ],
        "points": 750.0,
        "contestId": 550,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Two Substrings",
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "strings"
        ],
        "points": 1000.0,
        "contestId": 550,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Degenerate Matrix",
        "tags": [
            "binary search",
            "math"
        ],
        "points": 1500.0,
        "contestId": 549,
        "index": "H"
    },
    {
        "type": "PROGRAMMING",
        "name": "Happy Line",
        "tags": [
            "greedy",
            "sortings"
        ],
        "points": 1500.0,
        "contestId": 549,
        "index": "G"
    },
    {
        "type": "PROGRAMMING",
        "name": "Yura and Developers",
        "tags": [
            "data structures",
            "divide and conquer"
        ],
        "points": 3000.0,
        "contestId": 549,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sasha Circle",
        "tags": [
            "math"
        ],
        "points": 3000.0,
        "contestId": 549,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Haar Features",
        "tags": [
            "greedy",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 549,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Game Of Parity",
        "tags": [
            "games"
        ],
        "points": 2000.0,
        "contestId": 549,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Looksery Party",
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "greedy"
        ],
        "points": 1750.0,
        "contestId": 549,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Face Detection",
        "tags": [
            "implementation"
        ],
        "points": 250.0,
        "contestId": 549,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Mike and Fun",
        "tags": [
            "brute force",
            "greedy",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 548,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Mike and Fax",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 548,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Mike and Friends",
        "tags": [
            "data structures",
            "string suffix structures",
            "strings"
        ],
        "points": 2500.0,
        "contestId": 547,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Mike and Fish",
        "tags": [
            "dfs and similar",
            "graphs"
        ],
        "points": 1750.0,
        "contestId": 547,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Mike and Foam",
        "tags": [
            "bitmasks",
            "number theory"
        ],
        "points": 1750.0,
        "contestId": 547,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Mike and Feet",
        "tags": [
            "binary search",
            "data structures",
            "dp",
            "dsu"
        ],
        "points": 1000.0,
        "contestId": 547,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Mike and Frog",
        "tags": [
            "brute force",
            "implementation",
            "math"
        ],
        "points": 750.0,
        "contestId": 547,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Soldier and Traveling",
        "tags": [
            "flows",
            "math"
        ],
        "points": 2250.0,
        "contestId": 546,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Soldier and Number Game",
        "tags": [
            "constructive algorithms",
            "dp",
            "math",
            "number theory"
        ],
        "points": 1500.0,
        "contestId": 546,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Soldier and Cards",
        "tags": [
            "brute force",
            "dfs and similar"
        ],
        "points": 1250.0,
        "contestId": 546,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Soldier and Badges",
        "tags": [
            "brute force",
            "greedy",
            "implementation",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 546,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Soldier and Bananas",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 546,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Paths and Trees",
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ],
        "points": 2500.0,
        "contestId": 545,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Queue",
        "tags": [
            "greedy",
            "implementation",
            "sortings"
        ],
        "points": 1750.0,
        "contestId": 545,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Woodcutters",
        "tags": [
            "dp",
            "greedy"
        ],
        "points": 1750.0,
        "contestId": 545,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Equidistant String",
        "tags": [
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 545,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Toy Cars",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 545,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sea and Islands",
        "tags": [
            "constructive algorithms",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 544,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Set of Strings",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 544,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Listening to Music",
        "tags": [
            "constructive algorithms",
            "data structures"
        ],
        "points": 2500.0,
        "contestId": 543,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Road Improvement",
        "tags": [
            "dp",
            "trees"
        ],
        "points": 1750.0,
        "contestId": 543,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Remembering Strings",
        "tags": [
            "bitmasks",
            "dp"
        ],
        "points": 1750.0,
        "contestId": 543,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Destroying Roads",
        "tags": [
            "graphs",
            "shortest paths"
        ],
        "points": 1000.0,
        "contestId": 543,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Writing Code",
        "tags": [
            "dp"
        ],
        "points": 500.0,
        "contestId": 543,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Quest",
        "tags": [
            "dp",
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 542,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "Playing on Graph",
        "tags": [
            "graphs",
            "shortest paths"
        ],
        "points": 2250.0,
        "contestId": 542,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Superhero's Job",
        "tags": [
            "dfs and similar",
            "dp",
            "hashing",
            "math",
            "number theory"
        ],
        "points": 2250.0,
        "contestId": 542,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Idempotent functions",
        "tags": [
            "constructive algorithms",
            "graphs",
            "math"
        ],
        "points": 750.0,
        "contestId": 542,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Duck Hunt",
        "tags": [
            "data structures"
        ],
        "points": 3000.0,
        "contestId": 542,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Place Your Ad Here",
        "tags": [
            "data structures",
            "sortings"
        ],
        "points": 2000.0,
        "contestId": 542,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Infinite Inversions",
        "tags": [
            "binary search",
            "data structures",
            "implementation",
            "sortings",
            "trees"
        ],
        "points": 2500.0,
        "contestId": 540,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bad Luck Island",
        "tags": [
            "dp",
            "probabilities"
        ],
        "points": 2000.0,
        "contestId": 540,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ice Cave",
        "tags": [
            "dfs and similar"
        ],
        "points": 1500.0,
        "contestId": 540,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "School Marks",
        "tags": [
            "greedy",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 540,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Combination Lock",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 540,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Summer Dichotomy",
        "tags": [
            "2-sat",
            "data structures",
            "dfs and similar",
            "greedy"
        ],
        "points": 3000.0,
        "contestId": 538,
        "index": "H"
    },
    {
        "type": "PROGRAMMING",
        "name": "Berserk Robot ",
        "tags": [
            "constructive algorithms",
            "math",
            "sortings"
        ],
        "points": 3000.0,
        "contestId": 538,
        "index": "G"
    },
    {
        "type": "PROGRAMMING",
        "name": "A Heap of Heaps",
        "tags": [
            "brute force",
            "data structures",
            "math",
            "sortings"
        ],
        "points": 2500.0,
        "contestId": 538,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "Demiurges Play Again",
        "tags": [
            "dfs and similar",
            "dp",
            "math",
            "trees"
        ],
        "points": 2000.0,
        "contestId": 538,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Weird Chess",
        "tags": [
            "brute force",
            "constructive algorithms",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 538,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tourist's Notes",
        "tags": [
            "binary search",
            "brute force",
            "greedy",
            "implementation",
            "math"
        ],
        "points": 1500.0,
        "contestId": 538,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Quasi Binary",
        "tags": [
            "constructive algorithms",
            "dp",
            "greedy",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 538,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cutting Banner",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 538,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tavas on the Path",
        "tags": [
            "data structures",
            "divide and conquer",
            "trees"
        ],
        "points": 2500.0,
        "contestId": 536,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tavas in Kansas",
        "tags": [
            "dp",
            "games"
        ],
        "points": 2000.0,
        "contestId": 536,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tavas and Pashmaks",
        "tags": [
            "geometry"
        ],
        "points": 2500.0,
        "contestId": 535,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tavas and Malekas",
        "tags": [
            "greedy",
            "hashing",
            "string suffix structures",
            "strings"
        ],
        "points": 2000.0,
        "contestId": 535,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tavas and Karafs",
        "tags": [
            "binary search",
            "math"
        ],
        "points": 1500.0,
        "contestId": 535,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tavas and SaDDas",
        "tags": [
            "bitmasks",
            "brute force",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 535,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tavas and Nafas",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 535,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Simplified Nonogram",
        "tags": [
            "bitmasks",
            "dp",
            "hashing",
            "meet-in-the-middle"
        ],
        "points": 3000.0,
        "contestId": 534,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "Berland Local Positioning System",
        "tags": [
            "constructive algorithms",
            "greedy",
            "hashing",
            "implementation"
        ],
        "points": 2500.0,
        "contestId": 534,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Handshakes",
        "tags": [
            "binary search",
            "constructive algorithms",
            "data structures",
            "greedy"
        ],
        "points": 2000.0,
        "contestId": 534,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Polycarpus' Dice",
        "tags": [
            "math"
        ],
        "points": 1500.0,
        "contestId": 534,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Covered Path",
        "tags": [
            "dp",
            "greedy",
            "math"
        ],
        "points": 1000.0,
        "contestId": 534,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Exam",
        "tags": [
            "constructive algorithms",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 534,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Encoding",
        "tags": [
            "hashing",
            "string suffix structures",
            "strings"
        ],
        "points": 1500.0,
        "contestId": 533,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "Correcting Mistakes",
        "tags": [
            "constructive algorithms",
            "dp",
            "greedy",
            "hashing",
            "strings",
            "two pointers"
        ],
        "points": 500.0,
        "contestId": 533,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Landmarks",
        "tags": [
            "data structures"
        ],
        "points": 3000.0,
        "contestId": 533,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Board Game",
        "tags": [
            "games",
            "greedy",
            "implementation",
            "math"
        ],
        "points": 250.0,
        "contestId": 533,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Work Group",
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "strings",
            "trees"
        ],
        "points": 750.0,
        "contestId": 533,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Berland Miners",
        "tags": [
            "binary search",
            "data structures",
            "dfs and similar",
            "greedy",
            "trees"
        ],
        "points": 3000.0,
        "contestId": 533,
        "index": "A"
    },
    {
        "contestId": 530,
        "name": "Different variables",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "I"
    },
    {
        "contestId": 530,
        "name": "Points in triangle",
        "tags": [
            "geometry"
        ],
        "type": "PROGRAMMING",
        "index": "H"
    },
    {
        "contestId": 530,
        "name": "Levenshtein distance",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "G"
    },
    {
        "contestId": 530,
        "name": "Jumping frogs",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 530,
        "name": "Sum and product",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 530,
        "name": "Set subtraction",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 530,
        "name": "Diophantine equation",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 530,
        "name": "String inside out",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 530,
        "name": "Quadratic equation",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Group Photo 2 (online mirror version)",
        "tags": [
            "brute force",
            "greedy",
            "sortings"
        ],
        "points": 500.0,
        "contestId": 529,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Triangles 3000",
        "tags": [
            "geometry",
            "sortings"
        ],
        "points": 2500.0,
        "contestId": 528,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fuzzy Search",
        "tags": [
            "bitmasks",
            "brute force",
            "fft"
        ],
        "points": 2000.0,
        "contestId": 528,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Data Center Drama",
        "tags": [
            "dfs and similar",
            "graphs"
        ],
        "points": 2500.0,
        "contestId": 527,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Clique Problem",
        "tags": [
            "data structures",
            "dp",
            "greedy",
            "implementation",
            "sortings"
        ],
        "points": 2000.0,
        "contestId": 527,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Glass Carving",
        "tags": [
            "binary search",
            "data structures",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 527,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Error Correct System",
        "tags": [
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 527,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Playing with Paper",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 527,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Spiders Evil Plan",
        "tags": [
            "greedy",
            "trees"
        ],
        "points": 3000.0,
        "contestId": 526,
        "index": "G"
    },
    {
        "type": "PROGRAMMING",
        "name": "Pudding Monsters",
        "tags": [
            "data structures",
            "divide and conquer"
        ],
        "points": 3000.0,
        "contestId": 526,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "Transmitting Levels",
        "tags": [
            "dp",
            "implementation"
        ],
        "points": 2250.0,
        "contestId": 526,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Om Nom and Necklace",
        "tags": [
            "hashing",
            "string suffix structures",
            "strings"
        ],
        "points": 1750.0,
        "contestId": 526,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Om Nom and Candies",
        "tags": [
            "brute force",
            "greedy",
            "math"
        ],
        "points": 1250.0,
        "contestId": 526,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Om Nom and Dark Park",
        "tags": [
            "dfs and similar",
            "greedy",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 526,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "King of Thieves",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 526,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Anya and Cubes",
        "tags": [
            "binary search",
            "bitmasks",
            "brute force",
            "dp",
            "meet-in-the-middle"
        ],
        "points": 3000.0,
        "contestId": 525,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Arthur and Walls",
        "tags": [
            "data structures",
            "greedy"
        ],
        "points": 3000.0,
        "contestId": 525,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ilya and Sticks",
        "tags": [
            "greedy",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 525,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Pasha and String",
        "tags": [
            "greedy"
        ],
        "points": 750.0,
        "contestId": 525,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vitaliy and Pie",
        "tags": [
            "greedy",
            "hashing"
        ],
        "points": 250.0,
        "contestId": 525,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "And Yet Another Bracket Sequence",
        "tags": [
            "data structures",
            "hashing",
            "string suffix structures",
            "strings"
        ],
        "points": 3000.0,
        "contestId": 524,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "Rooks and Rectangles",
        "tags": [
            "data structures"
        ],
        "points": 1750.0,
        "contestId": 524,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Social Network",
        "tags": [
            "greedy",
            "two pointers"
        ],
        "points": 1250.0,
        "contestId": 524,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Art of Dealing with ATM",
        "tags": [
            "binary search",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 524,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "\u0424\u043e\u0442\u043e \u043d\u0430 \u043f\u0430\u043c\u044f\u0442\u044c - 2 (round version)",
        "tags": [
            "dp",
            "greedy"
        ],
        "points": 500.0,
        "contestId": 524,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "\u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0432\u044b \u0437\u043d\u0430\u0435\u0442\u0435 \u044d\u0442\u0438\u0445 \u043b\u044e\u0434\u0435\u0439?",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 524,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Statistics of Recompressing Videos",
        "tags": [
            "data structures",
            "implementation"
        ],
        "points": 2000.0,
        "contestId": 523,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Name Quest",
        "tags": [
            "greedy"
        ],
        "points": 1500.0,
        "contestId": 523,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Mean Requests",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 523,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Rotate, Flip and Zoom",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 523,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Closest Equals",
        "tags": [
            "data structures"
        ],
        "points": 2000.0,
        "contestId": 522,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Chicken or Fish?",
        "tags": [
            "greedy"
        ],
        "points": 1500.0,
        "contestId": 522,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Photo to Remember",
        "tags": [
            "data structures",
            "dp",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 522,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Reposts",
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "trees"
        ],
        "points": 500.0,
        "contestId": 522,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cycling City",
        "tags": [
            "dfs and similar",
            "graphs"
        ],
        "points": 2500.0,
        "contestId": 521,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Shop",
        "tags": [
            "greedy"
        ],
        "points": 2000.0,
        "contestId": 521,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Pluses everywhere",
        "tags": [
            "combinatorics",
            "dp",
            "math",
            "number theory"
        ],
        "points": 2500.0,
        "contestId": 520,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cubes",
        "tags": [
            "games",
            "greedy",
            "implementation"
        ],
        "points": 2000.0,
        "contestId": 520,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "DNA Alignment",
        "tags": [
            "math",
            "strings"
        ],
        "points": 1500.0,
        "contestId": 520,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Two Buttons",
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "implementation",
            "math",
            "shortest paths"
        ],
        "points": 1000.0,
        "contestId": 520,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Pangram",
        "tags": [
            "implementation",
            "strings"
        ],
        "points": 500.0,
        "contestId": 520,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "A and B and Lecture Rooms",
        "tags": [
            "binary search",
            "data structures",
            "dfs and similar",
            "dp",
            "trees"
        ],
        "points": 2500.0,
        "contestId": 519,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "A and B and Interesting Substrings",
        "tags": [
            "data structures",
            "dp",
            "two pointers"
        ],
        "points": 2000.0,
        "contestId": 519,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "A and B and Team Training",
        "tags": [
            "greedy",
            "implementation",
            "math",
            "number theory"
        ],
        "points": 1500.0,
        "contestId": 519,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "A and B and Compilation Errors",
        "tags": [
            "data structures",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 519,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "A and B and Chess",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 519,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Pasha and Pipe",
        "tags": [
            "binary search",
            "brute force",
            "combinatorics",
            "dp",
            "implementation"
        ],
        "points": 2500.0,
        "contestId": 518,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "Arthur and Questions",
        "tags": [
            "greedy",
            "implementation",
            "ternary search"
        ],
        "points": 2500.0,
        "contestId": 518,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ilya and Escalator",
        "tags": [
            "combinatorics",
            "dp",
            "probabilities"
        ],
        "points": 2000.0,
        "contestId": 518,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Anya and Smartphone",
        "tags": [
            "data structures",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 518,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tanya and Postcard",
        "tags": [
            "implementation",
            "strings"
        ],
        "points": 1000.0,
        "contestId": 518,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vitaly and Strings",
        "tags": [
            "strings"
        ],
        "points": 500.0,
        "contestId": 518,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Drazil and His Happy Friends",
        "tags": [
            "math",
            "number theory"
        ],
        "points": 3000.0,
        "contestId": 516,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Drazil and Morning Exercise",
        "tags": [
            "dfs and similar",
            "dp",
            "dsu",
            "trees",
            "two pointers"
        ],
        "points": 3000.0,
        "contestId": 516,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Drazil and Park",
        "tags": [
            "data structures"
        ],
        "points": 3000.0,
        "contestId": 515,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Drazil and Tiles",
        "tags": [
            "constructive algorithms",
            "greedy"
        ],
        "points": 3000.0,
        "contestId": 515,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Drazil and Factorial",
        "tags": [
            "greedy",
            "math",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 515,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Drazil and His Happy Friends",
        "tags": [
            "brute force",
            "dsu",
            "meet-in-the-middle",
            "number theory"
        ],
        "points": 1000.0,
        "contestId": 515,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Drazil and Date",
        "tags": [
            "math"
        ],
        "points": 500.0,
        "contestId": 515,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Darth Vader and Tree",
        "tags": [
            "dp",
            "matrices"
        ],
        "points": 2500.0,
        "contestId": 514,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "R2D2 and Droid Army",
        "tags": [
            "binary search",
            "data structures",
            "two pointers"
        ],
        "points": 2000.0,
        "contestId": 514,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Watto and Mechanism",
        "tags": [
            "binary search",
            "hashing",
            "string suffix structures",
            "strings"
        ],
        "points": 2000.0,
        "contestId": 514,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Han Solo and Lazer Gun",
        "tags": [
            "brute force",
            "data structures",
            "geometry",
            "math"
        ],
        "points": 1000.0,
        "contestId": 514,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Chewba\u0441ca and Number",
        "tags": [
            "greedy",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 514,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Inversions problem",
        "tags": [
            "dp"
        ],
        "points": 16.0,
        "contestId": 513,
        "index": "G3"
    },
    {
        "type": "PROGRAMMING",
        "name": "Inversions problem",
        "tags": [
            "dp",
            "probabilities"
        ],
        "points": 5.0,
        "contestId": 513,
        "index": "G2"
    },
    {
        "type": "PROGRAMMING",
        "name": "Inversions problem",
        "tags": [
            "brute force",
            "dfs and similar",
            "dp",
            "meet-in-the-middle"
        ],
        "points": 3.0,
        "contestId": 513,
        "index": "G1"
    },
    {
        "type": "PROGRAMMING",
        "name": "Scaygerboss",
        "tags": [
            "flows"
        ],
        "points": 6.0,
        "contestId": 513,
        "index": "F2"
    },
    {
        "type": "PROGRAMMING",
        "name": "Scaygerboss",
        "tags": [
            "flows"
        ],
        "points": 14.0,
        "contestId": 513,
        "index": "F1"
    },
    {
        "type": "PROGRAMMING",
        "name": "Subarray Cuts",
        "tags": [
            "dp"
        ],
        "points": 12.0,
        "contestId": 513,
        "index": "E2"
    },
    {
        "type": "PROGRAMMING",
        "name": "Subarray Cuts",
        "tags": [
            "dp"
        ],
        "points": 9.0,
        "contestId": 513,
        "index": "E1"
    },
    {
        "type": "PROGRAMMING",
        "name": "Constrained Tree",
        "tags": [
            "constructive algorithms",
            "data structures"
        ],
        "points": 8.0,
        "contestId": 513,
        "index": "D2"
    },
    {
        "type": "PROGRAMMING",
        "name": "Constrained Tree",
        "tags": [
            "dfs and similar"
        ],
        "points": 9.0,
        "contestId": 513,
        "index": "D1"
    },
    {
        "type": "PROGRAMMING",
        "name": "Second price auction",
        "tags": [
            "bitmasks",
            "probabilities"
        ],
        "points": 8.0,
        "contestId": 513,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Permutations",
        "tags": [
            "bitmasks",
            "divide and conquer",
            "math"
        ],
        "points": 4.0,
        "contestId": 513,
        "index": "B2"
    },
    {
        "type": "PROGRAMMING",
        "name": "Permutations",
        "tags": [
            "brute force"
        ],
        "points": 3.0,
        "contestId": 513,
        "index": "B1"
    },
    {
        "type": "PROGRAMMING",
        "name": "Game",
        "tags": [
            "constructive algorithms",
            "math"
        ],
        "points": 3.0,
        "contestId": 513,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fox And Polygon",
        "tags": [
            "constructive algorithms",
            "divide and conquer"
        ],
        "points": 2250.0,
        "contestId": 512,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fox And Travelling",
        "tags": [
            "dp",
            "trees"
        ],
        "points": 2250.0,
        "contestId": 512,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fox And Dinner",
        "tags": [
            "flows"
        ],
        "points": 2500.0,
        "contestId": 510,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fox And Jumping",
        "tags": [
            "bitmasks",
            "brute force",
            "dp",
            "math"
        ],
        "points": 2000.0,
        "contestId": 510,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fox And Names",
        "tags": [
            "dfs and similar",
            "graphs",
            "sortings"
        ],
        "points": 1500.0,
        "contestId": 510,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fox And Two Dots",
        "tags": [
            "dfs and similar"
        ],
        "points": 1000.0,
        "contestId": 510,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fox And Snake",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 510,
        "index": "A"
    },
    {
        "contestId": 509,
        "name": "Progress Monitoring",
        "tags": [
            "dp"
        ],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 509,
        "name": "Pretty Song",
        "tags": [
            "math",
            "strings"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 509,
        "name": "Restoring Numbers",
        "tags": [
            "constructive algorithms",
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 509,
        "name": "Sums of Digits",
        "tags": [
            "dp",
            "greedy",
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 509,
        "name": "Painting Pebbles",
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 509,
        "name": "Maximum in Table",
        "tags": [
            "brute force",
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Arthur and Brackets",
        "tags": [
            "dp",
            "greedy"
        ],
        "points": 2500.0,
        "contestId": 508,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tanya and Password",
        "tags": [
            "dfs and similar",
            "graphs"
        ],
        "points": 2000.0,
        "contestId": 508,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Anya and Ghosts",
        "tags": [
            "greedy"
        ],
        "points": 1500.0,
        "contestId": 508,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Anton and currency you all know",
        "tags": [
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 508,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Pasha and Pixels",
        "tags": [
            "brute force"
        ],
        "points": 500.0,
        "contestId": 508,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Breaking Good",
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "shortest paths"
        ],
        "points": 2500.0,
        "contestId": 507,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Maths Lecture",
        "tags": [
            "dp",
            "implementation"
        ],
        "points": 2000.0,
        "contestId": 507,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Guess Your Way Out!",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 1500.0,
        "contestId": 507,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Amr and Pins",
        "tags": [
            "geometry",
            "math"
        ],
        "points": 1000.0,
        "contestId": 507,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Amr and Music",
        "tags": [
            "greedy",
            "implementation",
            "sortings"
        ],
        "points": 500.0,
        "contestId": 507,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Mr. Kitayuta's Gift",
        "tags": [
            "combinatorics",
            "dp",
            "matrices",
            "strings"
        ],
        "points": 2500.0,
        "contestId": 506,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Mr. Kitayuta's Colorful Graph",
        "tags": [
            "brute force",
            "dfs and similar",
            "dsu"
        ],
        "points": 1750.0,
        "contestId": 506,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Mr. Kitayuta vs. Bamboos",
        "tags": [
            "binary search",
            "greedy"
        ],
        "points": 2750.0,
        "contestId": 505,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Mr. Kitayuta's Technology",
        "tags": [
            "dfs and similar"
        ],
        "points": 2000.0,
        "contestId": 505,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Mr. Kitayuta, the Treasure Hunter",
        "tags": [
            "dfs and similar",
            "dp",
            "two pointers"
        ],
        "points": 1500.0,
        "contestId": 505,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Mr. Kitayuta's Colorful Graph",
        "tags": [
            "dfs and similar",
            "dp",
            "dsu",
            "graphs"
        ],
        "points": 1000.0,
        "contestId": 505,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Mr. Kitayuta's Gift",
        "tags": [
            "brute force",
            "implementation",
            "strings"
        ],
        "points": 500.0,
        "contestId": 505,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Misha and LCP on Tree",
        "tags": [
            "binary search",
            "dfs and similar",
            "hashing",
            "string suffix structures",
            "trees"
        ],
        "points": 3000.0,
        "contestId": 504,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Misha and XOR",
        "tags": [
            "bitmasks"
        ],
        "points": 2500.0,
        "contestId": 504,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Misha and Palindrome Degree",
        "tags": [
            "binary search",
            "combinatorics",
            "implementation"
        ],
        "points": 3000.0,
        "contestId": 501,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Misha and Permutations Summation",
        "tags": [
            "data structures"
        ],
        "points": 3000.0,
        "contestId": 501,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Misha and Forest",
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "sortings",
            "trees"
        ],
        "points": 1500.0,
        "contestId": 501,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Misha and Changing Handles",
        "tags": [
            "data structures",
            "dsu",
            "strings"
        ],
        "points": 500.0,
        "contestId": 501,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Contest",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 501,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "New Year Running",
        "tags": [
            "number theory",
            "trees"
        ],
        "points": 3500.0,
        "contestId": 500,
        "index": "G"
    },
    {
        "type": "PROGRAMMING",
        "name": "New Year Shopping",
        "tags": [
            "divide and conquer",
            "dp"
        ],
        "points": 2750.0,
        "contestId": 500,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "New Year Domino",
        "tags": [
            "data structures",
            "dp",
            "dsu"
        ],
        "points": 2750.0,
        "contestId": 500,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "New Year Santa Network",
        "tags": [
            "combinatorics",
            "dfs and similar",
            "graphs",
            "trees"
        ],
        "points": 1500.0,
        "contestId": 500,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "New Year Book Reading",
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "math"
        ],
        "points": 1000.0,
        "contestId": 500,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "New Year Permutation",
        "tags": [
            "dfs and similar",
            "dsu",
            "graphs",
            "greedy",
            "math",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 500,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "New Year Transportation",
        "tags": [
            "dfs and similar",
            "graphs",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 500,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lecture",
        "tags": [
            "strings"
        ],
        "points": 500.0,
        "contestId": 499,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Watching a movie",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 499,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Stairs and Lines",
        "tags": [
            "dp",
            "matrices"
        ],
        "points": 2500.0,
        "contestId": 498,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Traffic Jams in the Land",
        "tags": [
            "data structures",
            "dp",
            "number theory"
        ],
        "points": 2000.0,
        "contestId": 498,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Array and Operations",
        "tags": [
            "flows",
            "graph matchings",
            "number theory"
        ],
        "points": 1000.0,
        "contestId": 498,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Name That Tune",
        "tags": [
            "dp",
            "probabilities",
            "two pointers"
        ],
        "points": 2000.0,
        "contestId": 498,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Crazy Town",
        "tags": [
            "geometry"
        ],
        "points": 500.0,
        "contestId": 498,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Subsequences Return",
        "tags": [
            "dp",
            "matrices"
        ],
        "points": 2500.0,
        "contestId": 497,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Gears",
        "tags": [
            "brute force",
            "geometry",
            "math"
        ],
        "points": 2000.0,
        "contestId": 497,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Distributing Parts ",
        "tags": [
            "greedy",
            "sortings"
        ],
        "points": 2250.0,
        "contestId": 496,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tennis Game",
        "tags": [
            "binary search"
        ],
        "points": 2250.0,
        "contestId": 496,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Removing Columns",
        "tags": [
            "brute force",
            "constructive algorithms",
            "implementation"
        ],
        "points": 1750.0,
        "contestId": 496,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Secret Combination",
        "tags": [
            "brute force",
            "constructive algorithms",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 496,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Minimum Difficulty",
        "tags": [
            "brute force",
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 496,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Modular Equations",
        "tags": [
            "math"
        ],
        "points": 1000.0,
        "contestId": 495,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Digital Counter",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 495,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sharti",
        "tags": [
            "games"
        ],
        "points": 2500.0,
        "contestId": 494,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Birthday",
        "tags": [
            "data structures",
            "dfs and similar",
            "dp",
            "trees"
        ],
        "points": 1750.0,
        "contestId": 494,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Helping People",
        "tags": [
            "dp",
            "probabilities"
        ],
        "points": 1750.0,
        "contestId": 494,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Obsessive String",
        "tags": [
            "dp",
            "strings"
        ],
        "points": 1000.0,
        "contestId": 494,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Treasure",
        "tags": [
            "greedy"
        ],
        "points": 500.0,
        "contestId": 494,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vasya and Polynomial",
        "tags": [
            "math"
        ],
        "points": 3000.0,
        "contestId": 493,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vasya and Chess",
        "tags": [
            "constructive algorithms",
            "games"
        ],
        "points": 1500.0,
        "contestId": 493,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vasya and Basketball",
        "tags": [
            "binary search",
            "brute force",
            "implementation",
            "sortings",
            "two pointers"
        ],
        "points": 2000.0,
        "contestId": 493,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vasya and Wrestling",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 493,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vasya and Football",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 493,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vanya and Field",
        "tags": [
            "math"
        ],
        "points": 2500.0,
        "contestId": 492,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vanya and Computer Game",
        "tags": [
            "binary search",
            "implementation",
            "math",
            "sortings"
        ],
        "points": 2000.0,
        "contestId": 492,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vanya and Exams",
        "tags": [
            "greedy",
            "sortings"
        ],
        "points": 1500.0,
        "contestId": 492,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vanya and Lanterns",
        "tags": [
            "binary search",
            "math",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 492,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vanya and Cubes",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 492,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Deciphering",
        "tags": [
            "flows",
            "graph matchings"
        ],
        "points": 1500.0,
        "contestId": 491,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "New York Hotel",
        "tags": [
            "greedy",
            "math"
        ],
        "points": 1000.0,
        "contestId": 491,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Up the hill",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 491,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Treeland Tour",
        "tags": [
            "data structures",
            "dfs and similar",
            "dp",
            "trees"
        ],
        "points": 2500.0,
        "contestId": 490,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "Restoring Increasing Sequence",
        "tags": [
            "binary search",
            "brute force",
            "greedy",
            "implementation"
        ],
        "points": 2000.0,
        "contestId": 490,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Chocolate",
        "tags": [
            "brute force",
            "dfs and similar",
            "math",
            "meet-in-the-middle",
            "number theory"
        ],
        "points": 2000.0,
        "contestId": 490,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Hacking Cypher",
        "tags": [
            "brute force",
            "math",
            "strings"
        ],
        "points": 1500.0,
        "contestId": 490,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Queue",
        "tags": [
            "dsu",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 490,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Team Olympiad",
        "tags": [
            "greedy",
            "implementation",
            "sortings"
        ],
        "points": 500.0,
        "contestId": 490,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Special Matrices",
        "tags": [
            "combinatorics",
            "dp"
        ],
        "points": 2500.0,
        "contestId": 489,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "Hiking",
        "tags": [
            "binary search",
            "dp"
        ],
        "points": 2500.0,
        "contestId": 489,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Unbearable Controversy of Being",
        "tags": [
            "brute force",
            "combinatorics",
            "dfs and similar",
            "graphs"
        ],
        "points": 2000.0,
        "contestId": 489,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Given Length and Sum of Digits...",
        "tags": [
            "dp",
            "greedy",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 489,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "BerSU Ball",
        "tags": [
            "dfs and similar",
            "dp",
            "graph matchings",
            "greedy",
            "sortings",
            "two pointers"
        ],
        "points": 1000.0,
        "contestId": 489,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "SwapSort",
        "tags": [
            "implementation",
            "sortings"
        ],
        "points": 500.0,
        "contestId": 489,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Candy Boxes",
        "tags": [
            "brute force",
            "constructive algorithms"
        ],
        "points": 1500.0,
        "contestId": 488,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Giga Tower",
        "tags": [
            "brute force"
        ],
        "points": 500.0,
        "contestId": 488,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tourists",
        "tags": [
            "data structures",
            "dfs and similar",
            "graphs",
            "trees"
        ],
        "points": 2500.0,
        "contestId": 487,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Conveyor Belts",
        "tags": [
            "data structures"
        ],
        "points": 2000.0,
        "contestId": 487,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Prefix Product Sequence",
        "tags": [
            "constructive algorithms",
            "number theory"
        ],
        "points": 1500.0,
        "contestId": 487,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Strip",
        "tags": [
            "binary search",
            "data structures",
            "dp",
            "two pointers"
        ],
        "points": 1500.0,
        "contestId": 487,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fight the Monster",
        "tags": [
            "binary search",
            "brute force"
        ],
        "points": 500.0,
        "contestId": 487,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "LIS of Sequence",
        "tags": [
            "data structures",
            "dp",
            "greedy",
            "hashing",
            "math"
        ],
        "points": 2500.0,
        "contestId": 486,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Valid Sets",
        "tags": [
            "dfs and similar",
            "dp",
            "math",
            "trees"
        ],
        "points": 2000.0,
        "contestId": 486,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Palindrome Transformation",
        "tags": [
            "greedy",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 486,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "OR in Matrix",
        "tags": [
            "greedy",
            "hashing",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 486,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Calculating Function",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 486,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Valuable Resources",
        "tags": [
            "brute force",
            "greedy"
        ],
        "points": 500.0,
        "contestId": 485,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Factory",
        "tags": [
            "implementation",
            "math",
            "matrices"
        ],
        "points": 1000.0,
        "contestId": 485,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sign on Fence",
        "tags": [
            "binary search",
            "constructive algorithms",
            "data structures"
        ],
        "points": 3000.0,
        "contestId": 484,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Kindergarten",
        "tags": [
            "data structures",
            "dp",
            "greedy"
        ],
        "points": 2000.0,
        "contestId": 484,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Strange Sorting",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 3000.0,
        "contestId": 484,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Maximum Value",
        "tags": [
            "binary search",
            "math",
            "sortings",
            "two pointers"
        ],
        "points": 1000.0,
        "contestId": 484,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bits",
        "tags": [
            "bitmasks",
            "constructive algorithms"
        ],
        "points": 500.0,
        "contestId": 484,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Friends and Presents",
        "tags": [
            "binary search",
            "math"
        ],
        "points": 1000.0,
        "contestId": 483,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Counterexample ",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 483,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "ELCA",
        "tags": [
            "data structures",
            "trees"
        ],
        "points": 2500.0,
        "contestId": 482,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Random Function and Tree",
        "tags": [
            "combinatorics",
            "dp",
            "trees"
        ],
        "points": 2000.0,
        "contestId": 482,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Game with Strings",
        "tags": [
            "bitmasks",
            "dp",
            "probabilities"
        ],
        "points": 1500.0,
        "contestId": 482,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Interesting Array",
        "tags": [
            "constructive algorithms",
            "data structures",
            "trees"
        ],
        "points": 1500.0,
        "contestId": 482,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Diverse Permutation",
        "tags": [
            "constructive algorithms",
            "greedy"
        ],
        "points": 500.0,
        "contestId": 482,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Parking Lot",
        "tags": [
            "data structures",
            "divide and conquer"
        ],
        "points": 2500.0,
        "contestId": 480,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Parcels",
        "tags": [
            "dp",
            "graphs"
        ],
        "points": 2000.0,
        "contestId": 480,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Riding in a Lift",
        "tags": [
            "dp"
        ],
        "points": 2500.0,
        "contestId": 479,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Long Jumps",
        "tags": [
            "binary search",
            "greedy",
            "implementation"
        ],
        "points": 2000.0,
        "contestId": 479,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Exams",
        "tags": [
            "greedy",
            "sortings"
        ],
        "points": 1500.0,
        "contestId": 479,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Towers",
        "tags": [
            "brute force",
            "greedy",
            "implementation",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 479,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Expression",
        "tags": [
            "brute force",
            "math"
        ],
        "points": 500.0,
        "contestId": 479,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Wavy numbers",
        "tags": [
            "brute force",
            "dfs and similar",
            "meet-in-the-middle",
            "sortings"
        ],
        "points": 2500.0,
        "contestId": 478,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Red-Green Towers",
        "tags": [
            "dp"
        ],
        "points": 2000.0,
        "contestId": 478,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Table Decorations",
        "tags": [
            "greedy"
        ],
        "points": 1500.0,
        "contestId": 478,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Random Teams",
        "tags": [
            "combinatorics",
            "constructive algorithms",
            "greedy",
            "math"
        ],
        "points": 1000.0,
        "contestId": 478,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Initial Bet",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 478,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dreamoon and Notepad",
        "tags": [
            "data structures"
        ],
        "points": 3000.0,
        "contestId": 477,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dreamoon and Binary",
        "tags": [
            "dp",
            "strings"
        ],
        "points": 2000.0,
        "contestId": 477,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dreamoon and Strings",
        "tags": [
            "dp",
            "strings"
        ],
        "points": 2500.0,
        "contestId": 476,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dreamoon and Sets",
        "tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ],
        "points": 2000.0,
        "contestId": 476,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dreamoon and Sums",
        "tags": [
            "math"
        ],
        "points": 1500.0,
        "contestId": 476,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dreamoon and WiFi",
        "tags": [
            "bitmasks",
            "brute force",
            "combinatorics",
            "dp",
            "math",
            "probabilities"
        ],
        "points": 1500.0,
        "contestId": 476,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dreamoon and Stairs",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 476,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Meta-universe",
        "tags": [
            "data structures"
        ],
        "points": 2500.0,
        "contestId": 475,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "Strongly Connected City 2",
        "tags": [
            "dfs and similar"
        ],
        "points": 2500.0,
        "contestId": 475,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "CGCDSSQ",
        "tags": [
            "brute force",
            "data structures",
            "math"
        ],
        "points": 2000.0,
        "contestId": 475,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Kamal-ol-molk's Painting",
        "tags": [
            "brute force",
            "constructive algorithms",
            "greedy"
        ],
        "points": 1500.0,
        "contestId": 475,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Strongly Connected City",
        "tags": [
            "brute force",
            "dfs and similar",
            "graphs",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 475,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bayan Bus",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 475,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ant colony",
        "tags": [
            "data structures",
            "number theory"
        ],
        "points": 3000.0,
        "contestId": 474,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "Pillars",
        "tags": [
            "binary search",
            "data structures",
            "dp",
            "sortings",
            "trees"
        ],
        "points": 3000.0,
        "contestId": 474,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Flowers",
        "tags": [
            "dp"
        ],
        "points": 2000.0,
        "contestId": 474,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Captain Marmot",
        "tags": [
            "brute force",
            "geometry"
        ],
        "points": 1500.0,
        "contestId": 474,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Worms",
        "tags": [
            "binary search",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 474,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Keyboard",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 474,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Design Tutorial: Increase the Constraints",
        "tags": [
            "bitmasks",
            "data structures",
            "fft"
        ],
        "points": 3500.0,
        "contestId": 472,
        "index": "G"
    },
    {
        "type": "PROGRAMMING",
        "name": "Design Tutorial: Change the Goal",
        "tags": [
            "constructive algorithms",
            "math",
            "matrices"
        ],
        "points": 3000.0,
        "contestId": 472,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "Design Tutorial: Learn from a Game",
        "tags": [
            "constructive algorithms",
            "implementation"
        ],
        "points": 3000.0,
        "contestId": 472,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Design Tutorial: Inverse the Problem",
        "tags": [
            "dfs and similar",
            "dsu",
            "shortest paths",
            "trees"
        ],
        "points": 2000.0,
        "contestId": 472,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Design Tutorial: Make It Nondeterministic",
        "tags": [
            "greedy"
        ],
        "points": 1500.0,
        "contestId": 472,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Design Tutorial: Learn from Life",
        "tags": [],
        "points": 1000.0,
        "contestId": 472,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Design Tutorial: Learn from Math",
        "tags": [
            "math",
            "number theory"
        ],
        "points": 500.0,
        "contestId": 472,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "MUH and Lots and Lots of Segments",
        "tags": [
            "data structures",
            "dsu"
        ],
        "points": 2500.0,
        "contestId": 471,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "MUH and Cube Walls",
        "tags": [
            "string suffix structures",
            "strings"
        ],
        "points": 2000.0,
        "contestId": 471,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "MUH and House of Cards",
        "tags": [
            "binary search",
            "brute force",
            "greedy",
            "math"
        ],
        "points": 2000.0,
        "contestId": 471,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "MUH and Important Things",
        "tags": [
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 471,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "MUH and Sticks",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 471,
        "index": "A"
    },
    {
        "contestId": 470,
        "name": "Array Sorting",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "H"
    },
    {
        "contestId": 470,
        "name": "Hamming Distance",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "G"
    },
    {
        "contestId": 470,
        "name": "Pairwise Sums",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 470,
        "name": "Chessboard",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 470,
        "name": "Caesar Cipher",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 470,
        "name": "Eval",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 470,
        "name": "Hexakosioihexekontahexaphobia",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 470,
        "name": "Crystal Ball Sequence",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Chat Online",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 469,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "I Wanna Be the Guy",
        "tags": [
            "greedy",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 469,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Permanent",
        "tags": [
            "dp",
            "graph matchings",
            "math",
            "meet-in-the-middle"
        ],
        "points": 2500.0,
        "contestId": 468,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tree",
        "tags": [
            "graph matchings"
        ],
        "points": 2000.0,
        "contestId": 468,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Hack it!",
        "tags": [
            "binary search",
            "constructive algorithms",
            "math"
        ],
        "points": 1500.0,
        "contestId": 468,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Two Sets",
        "tags": [
            "2-sat",
            "dfs and similar",
            "dsu",
            "graph matchings",
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 468,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "24 Game",
        "tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ],
        "points": 500.0,
        "contestId": 468,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Alex and Complicated Task",
        "tags": [
            "data structures",
            "dp",
            "greedy"
        ],
        "points": 2500.0,
        "contestId": 467,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fedor and Essay",
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "hashing",
            "strings"
        ],
        "points": 2000.0,
        "contestId": 467,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "George and Job",
        "tags": [
            "dp",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 467,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fedor and New Game",
        "tags": [
            "bitmasks",
            "brute force",
            "constructive algorithms",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 467,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "George and Accommodation",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 467,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Information Graph",
        "tags": [
            "dfs and similar",
            "dsu",
            "graphs",
            "trees"
        ],
        "points": 2500.0,
        "contestId": 466,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Increase Sequence",
        "tags": [
            "combinatorics",
            "dp"
        ],
        "points": 2000.0,
        "contestId": 466,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Number of Ways",
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dp",
            "two pointers"
        ],
        "points": 1500.0,
        "contestId": 466,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Wonder Room",
        "tags": [
            "brute force",
            "math"
        ],
        "points": 1000.0,
        "contestId": 466,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cheap Travel",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 466,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Inbox (100500)",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 465,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "inc ARG",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 465,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Classic Problem",
        "tags": [
            "data structures",
            "graphs",
            "shortest paths"
        ],
        "points": 2500.0,
        "contestId": 464,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "World of Darkraft - 2",
        "tags": [
            "dp",
            "probabilities"
        ],
        "points": 2000.0,
        "contestId": 464,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Substitutes in Number",
        "tags": [
            "dp"
        ],
        "points": 1500.0,
        "contestId": 464,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Restore Cube ",
        "tags": [
            "brute force",
            "geometry"
        ],
        "points": 1500.0,
        "contestId": 464,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "No to Palindromes!",
        "tags": [
            "greedy",
            "strings"
        ],
        "points": 500.0,
        "contestId": 464,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Caisa and Tree",
        "tags": [
            "brute force",
            "dfs and similar",
            "trees"
        ],
        "points": 2500.0,
        "contestId": 463,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Gargari and Permutations",
        "tags": [
            "dfs and similar",
            "dp",
            "graphs"
        ],
        "points": 2000.0,
        "contestId": 463,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Gargari and Bishops",
        "tags": [
            "greedy",
            "hashing",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 463,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Caisa and Pylons",
        "tags": [
            "math"
        ],
        "points": 1000.0,
        "contestId": 463,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Caisa and Sugar",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 463,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Appleman and Card Game",
        "tags": [
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 462,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Appleman and Easy Task",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 462,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Appleman and a Game",
        "tags": [
            "shortest paths"
        ],
        "points": 2500.0,
        "contestId": 461,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Appleman and Complicated Task",
        "tags": [
            "dsu",
            "math"
        ],
        "points": 2000.0,
        "contestId": 461,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Appleman and a Sheet of Paper",
        "tags": [
            "data structures",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 461,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Appleman and Tree",
        "tags": [
            "dfs and similar",
            "dp",
            "trees"
        ],
        "points": 1000.0,
        "contestId": 461,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Appleman and Toastman",
        "tags": [
            "greedy",
            "sortings"
        ],
        "points": 500.0,
        "contestId": 461,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Roland and Rose",
        "tags": [
            "brute force",
            "geometry",
            "math",
            "sortings"
        ],
        "points": 2500.0,
        "contestId": 460,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Victor and Set",
        "tags": [
            "brute force",
            "constructive algorithms"
        ],
        "points": 2000.0,
        "contestId": 460,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Present",
        "tags": [
            "binary search",
            "data structures",
            "greedy"
        ],
        "points": 1500.0,
        "contestId": 460,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Dima and Equation",
        "tags": [
            "brute force",
            "implementation",
            "math"
        ],
        "points": 1000.0,
        "contestId": 460,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vasya and Socks",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 460,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Pashmak and Graph",
        "tags": [
            "dp",
            "sortings"
        ],
        "points": 3000.0,
        "contestId": 459,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Pashmak and Parmida's problem",
        "tags": [
            "data structures",
            "divide and conquer",
            "sortings"
        ],
        "points": 2000.0,
        "contestId": 459,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Pashmak and Buses",
        "tags": [
            "combinatorics",
            "constructive algorithms",
            "math"
        ],
        "points": 2000.0,
        "contestId": 459,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Pashmak and Flowers",
        "tags": [
            "implementation",
            "sortings"
        ],
        "points": 500.0,
        "contestId": 459,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Pashmak and Garden",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 459,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "An easy problem about trees",
        "tags": [
            "dp",
            "games",
            "greedy",
            "trees"
        ],
        "points": 3000.0,
        "contestId": 457,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "Flow Optimality",
        "tags": [
            "constructive algorithms",
            "flows",
            "math"
        ],
        "points": 2500.0,
        "contestId": 457,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bingo!",
        "tags": [
            "combinatorics",
            "math",
            "probabilities"
        ],
        "points": 2000.0,
        "contestId": 457,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Elections",
        "tags": [
            "brute force"
        ],
        "points": 1500.0,
        "contestId": 457,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Distributed Join",
        "tags": [
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 457,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Golden System",
        "tags": [
            "math",
            "meet-in-the-middle"
        ],
        "points": 1000.0,
        "contestId": 457,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fedya and Maths",
        "tags": [
            "math",
            "number theory"
        ],
        "points": 1000.0,
        "contestId": 456,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Laptops",
        "tags": [
            "sortings"
        ],
        "points": 500.0,
        "contestId": 456,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Function",
        "tags": [
            "data structures"
        ],
        "points": 2500.0,
        "contestId": 455,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Serega and Fun",
        "tags": [
            "data structures"
        ],
        "points": 2000.0,
        "contestId": 455,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Civilization",
        "tags": [
            "dfs and similar",
            "dp",
            "dsu",
            "ternary search",
            "trees"
        ],
        "points": 1500.0,
        "contestId": 455,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "A Lot of Games",
        "tags": [
            "dfs and similar",
            "dp",
            "games",
            "implementation",
            "strings",
            "trees"
        ],
        "points": 1000.0,
        "contestId": 455,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Boredom",
        "tags": [
            "dp"
        ],
        "points": 500.0,
        "contestId": 455,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Pony and Sort by Shift",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 454,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Pony and Crystal Mine",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 454,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Pony and Lord Tirek",
        "tags": [
            "data structures"
        ],
        "points": 2500.0,
        "contestId": 453,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Pony and Elements of Harmony",
        "tags": [
            "dp",
            "matrices"
        ],
        "points": 2500.0,
        "contestId": 453,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Pony and Summer Sun Celebration",
        "tags": [
            "constructive algorithms",
            "dfs and similar"
        ],
        "points": 1500.0,
        "contestId": 453,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Pony and Harmony Chest",
        "tags": [
            "bitmasks",
            "brute force",
            "dp"
        ],
        "points": 1000.0,
        "contestId": 453,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Pony and Expected Maximum",
        "tags": [
            "probabilities"
        ],
        "points": 500.0,
        "contestId": 453,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Permutation",
        "tags": [
            "data structures",
            "divide and conquer",
            "hashing"
        ],
        "points": 2500.0,
        "contestId": 452,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "Three strings",
        "tags": [
            "data structures",
            "dsu",
            "string suffix structures",
            "strings"
        ],
        "points": 2500.0,
        "contestId": 452,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Washer, Dryer, Folder",
        "tags": [
            "greedy",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 452,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Magic Trick",
        "tags": [
            "combinatorics",
            "math",
            "probabilities"
        ],
        "points": 1000.0,
        "contestId": 452,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "4-point polyline",
        "tags": [
            "brute force",
            "constructive algorithms",
            "geometry",
            "trees"
        ],
        "points": 1000.0,
        "contestId": 452,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Eevee",
        "tags": [
            "implementation",
            "strings"
        ],
        "points": 500.0,
        "contestId": 452,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Devu and Flowers",
        "tags": [
            "bitmasks",
            "combinatorics",
            "number theory"
        ],
        "points": 3000.0,
        "contestId": 451,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Count Good Substrings",
        "tags": [
            "math"
        ],
        "points": 2500.0,
        "contestId": 451,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Predict Outcome of the Game",
        "tags": [
            "brute force",
            "implementation",
            "math"
        ],
        "points": 1500.0,
        "contestId": 451,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sort the Array",
        "tags": [
            "implementation",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 451,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Game With Sticks",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 451,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Jzzhu and Sequences",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 1000.0,
        "contestId": 450,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Jzzhu and Children",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 450,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Jzzhu and Squares",
        "tags": [
            "dp",
            "math",
            "number theory"
        ],
        "points": 2500.0,
        "contestId": 449,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Jzzhu and Numbers",
        "tags": [
            "bitmasks",
            "combinatorics",
            "dp"
        ],
        "points": 2000.0,
        "contestId": 449,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Jzzhu and Apples",
        "tags": [
            "constructive algorithms",
            "number theory"
        ],
        "points": 1500.0,
        "contestId": 449,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Jzzhu and Cities",
        "tags": [
            "graphs",
            "shortest paths"
        ],
        "points": 1000.0,
        "contestId": 449,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Jzzhu and Chocolate",
        "tags": [
            "math"
        ],
        "points": 500.0,
        "contestId": 449,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Divisors",
        "tags": [
            "brute force",
            "dfs and similar",
            "implementation",
            "number theory"
        ],
        "points": 3000.0,
        "contestId": 448,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Multiplication Table",
        "tags": [
            "binary search",
            "brute force"
        ],
        "points": 2000.0,
        "contestId": 448,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Painting Fence",
        "tags": [
            "divide and conquer",
            "dp",
            "greedy"
        ],
        "points": 2500.0,
        "contestId": 448,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Suffix Structures",
        "tags": [
            "implementation",
            "strings"
        ],
        "points": 1000.0,
        "contestId": 448,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Rewards",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 448,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "DZY Loves Strings",
        "tags": [
            "greedy",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 447,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "DZY Loves Hash",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 447,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "DZY Loves Bridges",
        "tags": [
            "math",
            "matrices"
        ],
        "points": 2500.0,
        "contestId": 446,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "DZY Loves Games",
        "tags": [
            "math",
            "matrices",
            "probabilities"
        ],
        "points": 2000.0,
        "contestId": 446,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "DZY Loves Fibonacci Numbers",
        "tags": [
            "data structures",
            "number theory"
        ],
        "points": 1500.0,
        "contestId": 446,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "DZY Loves Modification",
        "tags": [
            "brute force",
            "greedy"
        ],
        "points": 1500.0,
        "contestId": 446,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "DZY Loves Sequences",
        "tags": [
            "dp",
            "implementation",
            "two pointers"
        ],
        "points": 500.0,
        "contestId": 446,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "DZY Loves Chemistry",
        "tags": [
            "dfs and similar",
            "dsu",
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 445,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "DZY Loves Chessboard",
        "tags": [
            "dfs and similar",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 445,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "DZY Loves Planting",
        "tags": [
            "binary search",
            "dsu",
            "trees"
        ],
        "points": 2500.0,
        "contestId": 444,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "DZY Loves Strings",
        "tags": [
            "binary search",
            "hashing",
            "strings",
            "two pointers"
        ],
        "points": 2000.0,
        "contestId": 444,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "DZY Loves Colors",
        "tags": [
            "data structures"
        ],
        "points": 2000.0,
        "contestId": 444,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "DZY Loves FFT",
        "tags": [
            "probabilities"
        ],
        "points": 1000.0,
        "contestId": 444,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "DZY Loves Physics",
        "tags": [
            "greedy",
            "math"
        ],
        "points": 500.0,
        "contestId": 444,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Kolya and Tandem Repeat",
        "tags": [
            "brute force"
        ],
        "points": 1000.0,
        "contestId": 443,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Anton and Letters",
        "tags": [
            "constructive algorithms",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 443,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Gena and Second Distance",
        "tags": [
            "geometry"
        ],
        "points": 2500.0,
        "contestId": 442,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Adam and Tree",
        "tags": [
            "data structures",
            "trees"
        ],
        "points": 2000.0,
        "contestId": 442,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Artem and Array ",
        "tags": [
            "data structures",
            "greedy"
        ],
        "points": 1500.0,
        "contestId": 442,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Andrey and Problem",
        "tags": [
            "greedy",
            "math",
            "probabilities"
        ],
        "points": 1500.0,
        "contestId": 442,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Borya and Hanabi",
        "tags": [
            "bitmasks",
            "brute force",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 442,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Valera and Number",
        "tags": [
            "bitmasks",
            "dp"
        ],
        "points": 2500.0,
        "contestId": 441,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Valera and Swaps",
        "tags": [
            "constructive algorithms",
            "dsu",
            "graphs",
            "implementation",
            "string suffix structures"
        ],
        "points": 2000.0,
        "contestId": 441,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Valera and Tubes ",
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 441,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Valera and Fruits",
        "tags": [
            "greedy",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 441,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Valera and Antique Items",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 441,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Berland Federalization",
        "tags": [
            "dp",
            "trees"
        ],
        "points": 2000.0,
        "contestId": 440,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "One-Based Arithmetic",
        "tags": [
            "dfs and similar",
            "divide and conquer"
        ],
        "points": 1500.0,
        "contestId": 440,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Balancer",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 440,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Forgotten Episode",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 440,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Devu and Birthday Celebration",
        "tags": [
            "combinatorics",
            "dp",
            "math"
        ],
        "points": 2500.0,
        "contestId": 439,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Devu and his Brother",
        "tags": [
            "binary search",
            "sortings",
            "ternary search",
            "two pointers"
        ],
        "points": 2000.0,
        "contestId": 439,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Devu and Partitioning of the Array",
        "tags": [
            "brute force",
            "constructive algorithms",
            "implementation",
            "number theory"
        ],
        "points": 1500.0,
        "contestId": 439,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Devu, the Dumb Guy",
        "tags": [
            "implementation",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 439,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Devu, the Singer and Churu, the Joker",
        "tags": [
            "greedy",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 439,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Child and Binary Tree",
        "tags": [
            "combinatorics",
            "divide and conquer",
            "fft",
            "number theory"
        ],
        "points": 3000.0,
        "contestId": 438,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Child and Sequence",
        "tags": [
            "data structures"
        ],
        "points": 2000.0,
        "contestId": 438,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Child and Polygon",
        "tags": [],
        "points": 2500.0,
        "contestId": 437,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Child and Zoo",
        "tags": [
            "dsu",
            "sortings"
        ],
        "points": 2000.0,
        "contestId": 437,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Child and Toy",
        "tags": [
            "graphs",
            "greedy",
            "sortings"
        ],
        "points": 1500.0,
        "contestId": 437,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Child and Set",
        "tags": [
            "bitmasks",
            "greedy",
            "implementation",
            "sortings"
        ],
        "points": 1500.0,
        "contestId": 437,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Child and Homework",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 437,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Banners",
        "tags": [
            "brute force",
            "data structures",
            "dp"
        ],
        "points": 3000.0,
        "contestId": 436,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cardboard Box",
        "tags": [
            "data structures",
            "greedy"
        ],
        "points": 2500.0,
        "contestId": 436,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Pudding Monsters",
        "tags": [
            "dp"
        ],
        "points": 2500.0,
        "contestId": 436,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dungeons and Candies",
        "tags": [
            "dsu",
            "graphs",
            "greedy",
            "trees"
        ],
        "points": 1500.0,
        "contestId": 436,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Om Nom and Spiders",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 1000.0,
        "contestId": 436,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Feed with Candy",
        "tags": [
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 436,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Special Graph",
        "tags": [],
        "points": 2500.0,
        "contestId": 435,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Special Grid",
        "tags": [
            "brute force",
            "dp",
            "greedy"
        ],
        "points": 2000.0,
        "contestId": 435,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cardiogram",
        "tags": [
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 435,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Pasha Maximizes",
        "tags": [
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 435,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Queue on Bus Stop",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 435,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Furukawa Nagisa's Tree",
        "tags": [
            "binary search",
            "divide and conquer",
            "sortings",
            "trees"
        ],
        "points": 3000.0,
        "contestId": 434,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Nanami's Power Plant",
        "tags": [
            "flows"
        ],
        "points": 2000.0,
        "contestId": 434,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tachibana Kanade's Tofu",
        "tags": [
            "dp"
        ],
        "points": 2500.0,
        "contestId": 433,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Nanami's Digital Board",
        "tags": [
            "dsu",
            "implementation"
        ],
        "points": 2000.0,
        "contestId": 433,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ryouko's Memory Note",
        "tags": [
            "implementation",
            "math",
            "sortings"
        ],
        "points": 1500.0,
        "contestId": 433,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Kuriyama Mirai's Stones",
        "tags": [
            "dp",
            "implementation",
            "sortings"
        ],
        "points": 1500.0,
        "contestId": 433,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Kitahara Haruki's Gift",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 433,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Square Tiling",
        "tags": [
            "constructive algorithms",
            "greedy"
        ],
        "points": 2500.0,
        "contestId": 432,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Prefixes and Suffixes",
        "tags": [
            "dp",
            "string suffix structures",
            "strings",
            "two pointers"
        ],
        "points": 2000.0,
        "contestId": 432,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Prime Swaps",
        "tags": [
            "greedy",
            "sortings"
        ],
        "points": 1500.0,
        "contestId": 432,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Football Kit",
        "tags": [
            "brute force",
            "greedy",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 432,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Choosing Teams",
        "tags": [
            "greedy",
            "implementation",
            "sortings"
        ],
        "points": 500.0,
        "contestId": 432,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Chemistry Experiment",
        "tags": [
            "binary search",
            "data structures",
            "ternary search"
        ],
        "points": 2500.0,
        "contestId": 431,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Random Task",
        "tags": [
            "binary search",
            "bitmasks",
            "combinatorics",
            "dp",
            "math"
        ],
        "points": 2000.0,
        "contestId": 431,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "k-Tree",
        "tags": [
            "dp",
            "implementation",
            "trees"
        ],
        "points": 1500.0,
        "contestId": 431,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Shower Line",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 431,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Black Square",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 431,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Balls Game",
        "tags": [
            "brute force",
            "two pointers"
        ],
        "points": 1000.0,
        "contestId": 430,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Points and Segments (easy)",
        "tags": [
            "constructive algorithms",
            "sortings"
        ],
        "points": 500.0,
        "contestId": 430,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Points and Segments",
        "tags": [
            "graphs"
        ],
        "points": 2000.0,
        "contestId": 429,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tricky Function",
        "tags": [
            "data structures",
            "divide and conquer",
            "geometry"
        ],
        "points": 2000.0,
        "contestId": 429,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Guess the Tree",
        "tags": [
            "bitmasks",
            "constructive algorithms",
            "dp",
            "greedy",
            "trees"
        ],
        "points": 1500.0,
        "contestId": 429,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Working out",
        "tags": [
            "dp"
        ],
        "points": 1000.0,
        "contestId": 429,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Xor-tree",
        "tags": [
            "dfs and similar",
            "trees"
        ],
        "points": 500.0,
        "contestId": 429,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Police Patrol",
        "tags": [
            "greedy",
            "implementation",
            "math",
            "ternary search"
        ],
        "points": 2500.0,
        "contestId": 427,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Match & Catch",
        "tags": [
            "dp",
            "string suffix structures",
            "strings"
        ],
        "points": 2000.0,
        "contestId": 427,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Checkposts",
        "tags": [
            "dfs and similar",
            "graphs",
            "two pointers"
        ],
        "points": 1500.0,
        "contestId": 427,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Prison Transfer",
        "tags": [
            "data structures",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 427,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Police Recruits",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 427,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sereja and Mirroring",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 426,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sereja and Mugs",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 426,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sereja and Sets",
        "tags": [
            "dp"
        ],
        "points": 2000.0,
        "contestId": 425,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sereja and Squares",
        "tags": [
            "binary search",
            "data structures",
            "hashing"
        ],
        "points": 2000.0,
        "contestId": 425,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sereja and Two Sequences",
        "tags": [
            "data structures",
            "dp"
        ],
        "points": 1500.0,
        "contestId": 425,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sereja and Table ",
        "tags": [
            "bitmasks",
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 425,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sereja and Swaps",
        "tags": [
            "brute force",
            "sortings"
        ],
        "points": 500.0,
        "contestId": 425,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Colored Jenga",
        "tags": [
            "dfs and similar",
            "dp",
            "probabilities"
        ],
        "points": 3000.0,
        "contestId": 424,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Biathlon Track",
        "tags": [
            "binary search",
            "brute force",
            "constructive algorithms",
            "data structures",
            "dp"
        ],
        "points": 2500.0,
        "contestId": 424,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Magic Formulas",
        "tags": [
            "math"
        ],
        "points": 1500.0,
        "contestId": 424,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Megacity",
        "tags": [
            "binary search",
            "greedy",
            "implementation",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 424,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Squats",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 424,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bug in Code",
        "tags": [
            "binary search",
            "data structures",
            "sortings"
        ],
        "points": 2000.0,
        "contestId": 421,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Pasha and Hamsters",
        "tags": [
            "constructive algorithms",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 421,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Playing the ball",
        "tags": [
            "geometry"
        ],
        "points": 2000.0,
        "contestId": 420,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cup Trick",
        "tags": [
            "data structures"
        ],
        "points": 1500.0,
        "contestId": 420,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bug in Code",
        "tags": [
            "data structures",
            "graphs",
            "implementation",
            "two pointers"
        ],
        "points": 1500.0,
        "contestId": 420,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Online Meeting",
        "tags": [
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 420,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Start Up",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 420,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tricky Password",
        "tags": [
            "data structures"
        ],
        "points": 2500.0,
        "contestId": 418,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Big Problems for Organizers",
        "tags": [
            "data structures",
            "graphs",
            "trees"
        ],
        "points": 2500.0,
        "contestId": 418,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Square Table",
        "tags": [
            "constructive algorithms",
            "math",
            "probabilities"
        ],
        "points": 2500.0,
        "contestId": 417,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cunning Gena",
        "tags": [
            "bitmasks",
            "dp",
            "greedy",
            "sortings"
        ],
        "points": 2000.0,
        "contestId": 417,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Football",
        "tags": [
            "constructive algorithms",
            "graphs",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 417,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Crash",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 417,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Elimination",
        "tags": [
            "dp",
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 417,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "President's Path",
        "tags": [
            "dp",
            "graphs",
            "shortest paths"
        ],
        "points": 2500.0,
        "contestId": 416,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Population Size",
        "tags": [
            "greedy",
            "implementation"
        ],
        "points": 2000.0,
        "contestId": 416,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Booking System",
        "tags": [
            "binary search",
            "dp",
            "greedy",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 416,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Art Union",
        "tags": [
            "brute force",
            "dp",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 416,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Guess a number!",
        "tags": [
            "greedy",
            "implementation",
            "two pointers"
        ],
        "points": 500.0,
        "contestId": 416,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Mashmokh and Tokens",
        "tags": [
            "binary search",
            "greedy",
            "math"
        ],
        "points": 1000.0,
        "contestId": 415,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Mashmokh and Lights",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 415,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Mashmokh's Designed Problem",
        "tags": [
            "data structures"
        ],
        "points": 2500.0,
        "contestId": 414,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Mashmokh and Water Tanks",
        "tags": [
            "binary search",
            "data structures",
            "greedy",
            "two pointers"
        ],
        "points": 1500.0,
        "contestId": 414,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Mashmokh and Reverse Operation",
        "tags": [
            "combinatorics",
            "divide and conquer"
        ],
        "points": 1500.0,
        "contestId": 414,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Mashmokh and ACM",
        "tags": [
            "combinatorics",
            "dp"
        ],
        "points": 1000.0,
        "contestId": 414,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Mashmokh and Numbers",
        "tags": [
            "constructive algorithms",
            "number theory"
        ],
        "points": 500.0,
        "contestId": 414,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Maze 2D",
        "tags": [
            "data structures",
            "divide and conquer"
        ],
        "points": 2500.0,
        "contestId": 413,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "2048",
        "tags": [
            "bitmasks",
            "dp"
        ],
        "points": 2000.0,
        "contestId": 413,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Jeopardy!",
        "tags": [
            "greedy",
            "math"
        ],
        "points": 1500.0,
        "contestId": 413,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Spyke Chatting",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 413,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Data Recovery",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 413,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "E-mail Addresses",
        "tags": [
            "implementation"
        ],
        "points": 2500.0,
        "contestId": 412,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Giving Awards",
        "tags": [
            "dfs and similar"
        ],
        "points": 2000.0,
        "contestId": 412,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Pattern",
        "tags": [
            "implementation",
            "strings"
        ],
        "points": 1500.0,
        "contestId": 412,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Network Configuration",
        "tags": [
            "greedy",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 412,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Poster",
        "tags": [
            "greedy",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 412,
        "index": "A"
    },
    {
        "contestId": 411,
        "name": "Kicker",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 411,
        "name": "Multi-core Processor",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 411,
        "name": "Password Check",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "contestId": 409,
        "name": "Feed the Golorp",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "I"
    },
    {
        "contestId": 409,
        "name": "A + B Strikes Back",
        "tags": [
            "brute force",
            "constructive algorithms",
            "dsu",
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "H"
    },
    {
        "contestId": 409,
        "name": "On a plane",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "G"
    },
    {
        "contestId": 409,
        "name": "000001",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 409,
        "name": "Dome",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 409,
        "name": "Big Data",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 409,
        "name": "Magnum Opus",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 409,
        "name": "Mysterious Language",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 409,
        "name": "The Great Game",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Garland",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 408,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Line to Cashier",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 408,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "k-d-sequence",
        "tags": [
            "data structures"
        ],
        "points": 2500.0,
        "contestId": 407,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Largest Submatrix 3",
        "tags": [
            "dp",
            "hashing"
        ],
        "points": 2000.0,
        "contestId": 407,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Curious Array",
        "tags": [
            "brute force",
            "implementation",
            "math"
        ],
        "points": 2000.0,
        "contestId": 407,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Long Path",
        "tags": [
            "dp",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 407,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Triangle",
        "tags": [
            "brute force",
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 407,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Hamming Triples",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 2500.0,
        "contestId": 406,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Hill Climbing",
        "tags": [
            "dfs and similar",
            "geometry",
            "trees"
        ],
        "points": 2000.0,
        "contestId": 406,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Graph Cutting",
        "tags": [
            "dfs and similar"
        ],
        "points": 3000.0,
        "contestId": 405,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Toy Sum",
        "tags": [
            "greedy",
            "implementation",
            "math"
        ],
        "points": 2000.0,
        "contestId": 405,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Unusual Product",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 1500.0,
        "contestId": 405,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Domino Effect",
        "tags": [],
        "points": 1000.0,
        "contestId": 405,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Gravity Flip",
        "tags": [
            "greedy",
            "implementation",
            "sortings"
        ],
        "points": 500.0,
        "contestId": 405,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Maze 1D",
        "tags": [
            "binary search",
            "greedy",
            "implementation"
        ],
        "points": 2500.0,
        "contestId": 404,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Minesweeper 1D",
        "tags": [
            "dp",
            "implementation"
        ],
        "points": 2000.0,
        "contestId": 404,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Restore Graph",
        "tags": [
            "dfs and similar",
            "graphs",
            "sortings"
        ],
        "points": 1500.0,
        "contestId": 404,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Marathon",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 1000.0,
        "contestId": 404,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Valera and X",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 404,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Two Rooted Trees",
        "tags": [
            "data structures",
            "implementation"
        ],
        "points": 2000.0,
        "contestId": 403,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Beautiful Pairs of Numbers",
        "tags": [
            "combinatorics",
            "dp"
        ],
        "points": 1500.0,
        "contestId": 403,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Strictly Positive Matrix",
        "tags": [
            "graphs"
        ],
        "points": 2500.0,
        "contestId": 402,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Upgrading Array",
        "tags": [
            "dp",
            "greedy",
            "math"
        ],
        "points": 2000.0,
        "contestId": 402,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Searching for Graph",
        "tags": [
            "brute force",
            "constructive algorithms"
        ],
        "points": 1500.0,
        "contestId": 402,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Trees in a Row",
        "tags": [
            "brute force"
        ],
        "points": 1000.0,
        "contestId": 402,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Nuts",
        "tags": [
            "greedy",
            "math"
        ],
        "points": 500.0,
        "contestId": 402,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Olympic Games",
        "tags": [
            "math"
        ],
        "points": 2500.0,
        "contestId": 401,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Roman and Numbers",
        "tags": [
            "bitmasks",
            "brute force",
            "combinatorics",
            "dp",
            "number theory"
        ],
        "points": 2000.0,
        "contestId": 401,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Team",
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 401,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sereja and Contests",
        "tags": [
            "greedy",
            "implementation",
            "math"
        ],
        "points": 1000.0,
        "contestId": 401,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vanya and Cards",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 401,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Inna and Binary Logic",
        "tags": [
            "binary search",
            "bitmasks",
            "data structures"
        ],
        "points": 2500.0,
        "contestId": 400,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dima and Bacteria",
        "tags": [
            "dsu",
            "graphs",
            "shortest paths"
        ],
        "points": 2000.0,
        "contestId": 400,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Inna and Huge Candy Matrix",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 1500.0,
        "contestId": 400,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Inna and New Matrix of Candies",
        "tags": [
            "brute force",
            "implementation",
            "schedules"
        ],
        "points": 1000.0,
        "contestId": 400,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Inna and Choose Options",
        "tags": [
            "dp",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 400,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Red and Blue Balls",
        "tags": [],
        "points": 1000.0,
        "contestId": 399,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Pages",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 399,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sorting Permutations",
        "tags": [],
        "points": 2500.0,
        "contestId": 398,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Instant Messanger",
        "tags": [
            "data structures"
        ],
        "points": 2000.0,
        "contestId": 398,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tree and Array",
        "tags": [
            "constructive algorithms"
        ],
        "points": 1500.0,
        "contestId": 398,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Painting The Wall",
        "tags": [
            "dp",
            "probabilities"
        ],
        "points": 1000.0,
        "contestId": 398,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cards",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 398,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "On Corruption and Numbers",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 1000.0,
        "contestId": 397,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "On Segment's Own Points",
        "tags": [],
        "points": 500.0,
        "contestId": 397,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "On Iteration of One Well-Known Function",
        "tags": [],
        "points": 2500.0,
        "contestId": 396,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "On Sum of Number of Inversions in Permutations",
        "tags": [
            "combinatorics"
        ],
        "points": 2000.0,
        "contestId": 396,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "On Changing Tree",
        "tags": [
            "data structures",
            "trees"
        ],
        "points": 1500.0,
        "contestId": 396,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "On Sum of Fractions",
        "tags": [
            "math",
            "number theory"
        ],
        "points": 1000.0,
        "contestId": 396,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "On Number of Decompositions into Multipliers",
        "tags": [
            "combinatorics",
            "number theory"
        ],
        "points": 500.0,
        "contestId": 396,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lightbulb for Minister",
        "tags": [
            "geometry"
        ],
        "points": 2500.0,
        "contestId": 394,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Physical Education and Buns",
        "tags": [
            "brute force",
            "implementation",
            "math"
        ],
        "points": 2000.0,
        "contestId": 394,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dominoes",
        "tags": [
            "constructive algorithms",
            "greedy"
        ],
        "points": 1500.0,
        "contestId": 394,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Very Beautiful Number",
        "tags": [],
        "points": 1000.0,
        "contestId": 394,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Counting Sticks",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 394,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Three matrices",
        "tags": [],
        "points": 1000.0,
        "contestId": 393,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Nineteen",
        "tags": [],
        "points": 500.0,
        "contestId": 393,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Deleting Substrings",
        "tags": [],
        "points": 2500.0,
        "contestId": 392,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Three Arrays",
        "tags": [
            "data structures"
        ],
        "points": 2000.0,
        "contestId": 392,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Yet Another Number Sequence",
        "tags": [
            "combinatorics",
            "math",
            "matrices"
        ],
        "points": 1500.0,
        "contestId": 392,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tower of Hanoi",
        "tags": [
            "dp"
        ],
        "points": 1000.0,
        "contestId": 392,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Blocked Points",
        "tags": [
            "math"
        ],
        "points": 500.0,
        "contestId": 392,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Stock Trading",
        "tags": [],
        "points": 10.0,
        "contestId": 391,
        "index": "F3"
    },
    {
        "type": "PROGRAMMING",
        "name": "Stock Trading",
        "tags": [
            "greedy"
        ],
        "points": 15.0,
        "contestId": 391,
        "index": "F2"
    },
    {
        "type": "PROGRAMMING",
        "name": "Stock Trading",
        "tags": [
            "dp"
        ],
        "points": 8.0,
        "contestId": 391,
        "index": "F1"
    },
    {
        "type": "PROGRAMMING",
        "name": "Three Trees",
        "tags": [],
        "points": 13.0,
        "contestId": 391,
        "index": "E2"
    },
    {
        "type": "PROGRAMMING",
        "name": "Three Trees",
        "tags": [],
        "points": 11.0,
        "contestId": 391,
        "index": "E1"
    },
    {
        "type": "PROGRAMMING",
        "name": "Supercollider",
        "tags": [
            "data structures"
        ],
        "points": 16.0,
        "contestId": 391,
        "index": "D2"
    },
    {
        "type": "PROGRAMMING",
        "name": "Supercollider",
        "tags": [
            "brute force"
        ],
        "points": 3.0,
        "contestId": 391,
        "index": "D1"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Tournament",
        "tags": [],
        "points": 8.0,
        "contestId": 391,
        "index": "C3"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Tournament",
        "tags": [
            "greedy"
        ],
        "points": 4.0,
        "contestId": 391,
        "index": "C2"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Tournament",
        "tags": [
            "brute force"
        ],
        "points": 4.0,
        "contestId": 391,
        "index": "C1"
    },
    {
        "type": "PROGRAMMING",
        "name": "Word Folding",
        "tags": [
            "brute force"
        ],
        "points": 5.0,
        "contestId": 391,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Genetic Engineering",
        "tags": [
            "implementation",
            "two pointers"
        ],
        "points": 3.0,
        "contestId": 391,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Inna and Large Sweet Matrix",
        "tags": [],
        "points": 2500.0,
        "contestId": 390,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Inna and Sweet Matrix",
        "tags": [
            "constructive algorithms"
        ],
        "points": 2000.0,
        "contestId": 390,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Inna and Candy Boxes",
        "tags": [
            "data structures"
        ],
        "points": 1500.0,
        "contestId": 390,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Inna, Dima and Song",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 390,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Inna and Alarm Clock",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 390,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fox and Cross",
        "tags": [
            "greedy",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 389,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fox and Number Game",
        "tags": [
            "greedy",
            "math"
        ],
        "points": 500.0,
        "contestId": 389,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fox and Meteor Shower",
        "tags": [
            "geometry"
        ],
        "points": 2500.0,
        "contestId": 388,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fox and Perfect Sets",
        "tags": [
            "math"
        ],
        "points": 2000.0,
        "contestId": 388,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fox and Card Game",
        "tags": [
            "games",
            "greedy",
            "sortings"
        ],
        "points": 1500.0,
        "contestId": 388,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fox and Minimal path",
        "tags": [
            "bitmasks",
            "constructive algorithms",
            "graphs",
            "implementation",
            "math"
        ],
        "points": 1000.0,
        "contestId": 388,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fox and Box Accumulation",
        "tags": [
            "greedy",
            "sortings"
        ],
        "points": 500.0,
        "contestId": 388,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "George and Cards",
        "tags": [
            "binary search",
            "data structures"
        ],
        "points": 2500.0,
        "contestId": 387,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "George and Interesting Graph",
        "tags": [
            "graph matchings"
        ],
        "points": 2000.0,
        "contestId": 387,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "George and Number",
        "tags": [
            "greedy",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 387,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "George and Round",
        "tags": [
            "brute force",
            "greedy",
            "two pointers"
        ],
        "points": 1000.0,
        "contestId": 387,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "George and Sleep",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 387,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Game with Points",
        "tags": [
            "dp",
            "graphs",
            "implementation",
            "shortest paths"
        ],
        "points": 2000.0,
        "contestId": 386,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Diverse Substrings",
        "tags": [
            "dp",
            "two pointers"
        ],
        "points": 1500.0,
        "contestId": 386,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fly, freebies, fly!",
        "tags": [
            "binary search",
            "brute force",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 386,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Second-Price Auction",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 386,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bear in the Field",
        "tags": [
            "math",
            "matrices"
        ],
        "points": 2500.0,
        "contestId": 385,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bear and Floodlight",
        "tags": [
            "bitmasks",
            "dp",
            "geometry"
        ],
        "points": 2000.0,
        "contestId": 385,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bear and Prime Numbers",
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dp",
            "implementation",
            "math",
            "number theory"
        ],
        "points": 1500.0,
        "contestId": 385,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bear and Strings",
        "tags": [
            "brute force",
            "greedy",
            "implementation",
            "math",
            "strings"
        ],
        "points": 1000.0,
        "contestId": 385,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bear and Raspberry",
        "tags": [
            "brute force",
            "greedy",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 385,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Multitasking",
        "tags": [
            "greedy",
            "implementation",
            "sortings",
            "two pointers"
        ],
        "points": 1000.0,
        "contestId": 384,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Coder",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 384,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vowels",
        "tags": [
            "combinatorics",
            "divide and conquer",
            "dp"
        ],
        "points": 2500.0,
        "contestId": 383,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Antimatter",
        "tags": [
            "dp"
        ],
        "points": 2000.0,
        "contestId": 383,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Propagating tree",
        "tags": [
            "data structures",
            "dfs and similar",
            "trees"
        ],
        "points": 1500.0,
        "contestId": 383,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Volcanoes",
        "tags": [
            "binary search",
            "implementation",
            "sortings",
            "two pointers"
        ],
        "points": 1500.0,
        "contestId": 383,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Milking cows",
        "tags": [
            "data structures",
            "greedy"
        ],
        "points": 500.0,
        "contestId": 383,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ksenia and Combinatorics",
        "tags": [
            "combinatorics",
            "dp"
        ],
        "points": 3000.0,
        "contestId": 382,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ksenia and Pawns",
        "tags": [
            "dfs and similar",
            "graphs",
            "implementation",
            "trees"
        ],
        "points": 3000.0,
        "contestId": 382,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Arithmetic Progression",
        "tags": [
            "implementation",
            "sortings"
        ],
        "points": 1500.0,
        "contestId": 382,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Number Busters",
        "tags": [
            "binary search",
            "math"
        ],
        "points": 2500.0,
        "contestId": 382,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ksenia and Pan Scales",
        "tags": [
            "greedy",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 382,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sereja and Stairs",
        "tags": [
            "greedy",
            "implementation",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 381,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sereja and Dima",
        "tags": [
            "greedy",
            "implementation",
            "two pointers"
        ],
        "points": 500.0,
        "contestId": 381,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sereja and Dividing",
        "tags": [
            "data structures"
        ],
        "points": 2500.0,
        "contestId": 380,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sereja and Cinema",
        "tags": [
            "combinatorics",
            "math"
        ],
        "points": 2000.0,
        "contestId": 380,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sereja and Brackets",
        "tags": [
            "data structures",
            "schedules"
        ],
        "points": 1500.0,
        "contestId": 380,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sereja and Tree",
        "tags": [
            "graphs",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 380,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sereja and Prefixes",
        "tags": [
            "binary search",
            "brute force"
        ],
        "points": 500.0,
        "contestId": 380,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "New Year Cactus",
        "tags": [
            "dp"
        ],
        "points": 3500.0,
        "contestId": 379,
        "index": "G"
    },
    {
        "type": "PROGRAMMING",
        "name": "New Year Tree",
        "tags": [
            "data structures",
            "divide and conquer",
            "trees"
        ],
        "points": 3000.0,
        "contestId": 379,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "New Year Tree Decorations",
        "tags": [
            "geometry",
            "schedules",
            "sortings"
        ],
        "points": 2500.0,
        "contestId": 379,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "New Year Letter",
        "tags": [
            "bitmasks",
            "brute force",
            "dp"
        ],
        "points": 2000.0,
        "contestId": 379,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "New Year Ratings Change",
        "tags": [
            "greedy",
            "sortings"
        ],
        "points": 1500.0,
        "contestId": 379,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "New Year Present",
        "tags": [
            "constructive algorithms",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 379,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "New Year Candles",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 379,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Semifinals",
        "tags": [
            "implementation",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 378,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Playing with Dice",
        "tags": [
            "brute force"
        ],
        "points": 500.0,
        "contestId": 378,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cookie Clicker",
        "tags": [
            "dp",
            "geometry"
        ],
        "points": 2500.0,
        "contestId": 377,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Developing Game",
        "tags": [
            "data structures"
        ],
        "points": 2000.0,
        "contestId": 377,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Captains Mode",
        "tags": [
            "bitmasks",
            "dp",
            "games"
        ],
        "points": 1000.0,
        "contestId": 377,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Preparing for the Contest",
        "tags": [
            "binary search",
            "data structures",
            "greedy",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 377,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Maze",
        "tags": [
            "dfs and similar"
        ],
        "points": 500.0,
        "contestId": 377,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "I.O.U.",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 376,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lever",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 376,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Red and Black Tree",
        "tags": [
            "dp",
            "implementation",
            "math"
        ],
        "points": 2500.0,
        "contestId": 375,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tree and Queries",
        "tags": [
            "data structures",
            "dfs and similar",
            "trees"
        ],
        "points": 2000.0,
        "contestId": 375,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Circling Round Treasures",
        "tags": [
            "bitmasks",
            "shortest paths"
        ],
        "points": 1500.0,
        "contestId": 375,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Maximum Submatrix 2",
        "tags": [
            "data structures",
            "dp",
            "implementation",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 375,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Divisible by Seven",
        "tags": [
            "math",
            "number theory"
        ],
        "points": 500.0,
        "contestId": 375,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Inna and Babies",
        "tags": [
            "binary search",
            "data structures",
            "dsu",
            "geometry",
            "implementation"
        ],
        "points": 2500.0,
        "contestId": 374,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Inna and Sequence ",
        "tags": [
            "binary search",
            "data structures",
            "dp",
            "trees"
        ],
        "points": 2000.0,
        "contestId": 374,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Inna and Dima",
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 374,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Inna and Nine",
        "tags": [
            "combinatorics",
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 374,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Inna and Pink Pony",
        "tags": [
            "greedy",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 374,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Making Sequences is Fun",
        "tags": [
            "binary search",
            "implementation",
            "math"
        ],
        "points": 1000.0,
        "contestId": 373,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Collecting Beats is Fun",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 373,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Drawing Circles is Fun",
        "tags": [
            "combinatorics",
            "geometry"
        ],
        "points": 2500.0,
        "contestId": 372,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Choosing Subtree is Fun",
        "tags": [
            "binary search",
            "data structures",
            "dfs and similar",
            "trees",
            "two pointers"
        ],
        "points": 2000.0,
        "contestId": 372,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Watching Fireworks is Fun",
        "tags": [
            "data structures",
            "dp",
            "math"
        ],
        "points": 1500.0,
        "contestId": 372,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Counting Rectangles is Fun",
        "tags": [
            "brute force",
            "divide and conquer",
            "dp"
        ],
        "points": 1000.0,
        "contestId": 372,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Counting Kangaroos is Fun",
        "tags": [
            "binary search",
            "greedy",
            "sortings",
            "two pointers"
        ],
        "points": 500.0,
        "contestId": 372,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Subway Innovation",
        "tags": [
            "math",
            "two pointers"
        ],
        "points": 2500.0,
        "contestId": 371,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vessels",
        "tags": [
            "data structures",
            "dsu",
            "implementation",
            "trees"
        ],
        "points": 2000.0,
        "contestId": 371,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Hamburgers",
        "tags": [
            "binary search",
            "brute force"
        ],
        "points": 1500.0,
        "contestId": 371,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fox Dividing Cheese",
        "tags": [
            "math",
            "number theory"
        ],
        "points": 1000.0,
        "contestId": 371,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "K-Periodic Array",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 371,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Summer Reading",
        "tags": [
            "dp",
            "greedy"
        ],
        "points": 3000.0,
        "contestId": 370,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Broken Monitor",
        "tags": [
            "brute force",
            "constructive algorithms",
            "implementation"
        ],
        "points": 3000.0,
        "contestId": 370,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Mittens",
        "tags": [
            "constructive algorithms",
            "greedy",
            "sortings"
        ],
        "points": 1500.0,
        "contestId": 370,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Berland Bingo",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 370,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Rook, Bishop and King",
        "tags": [
            "math"
        ],
        "points": 500.0,
        "contestId": 370,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Valera and Queries",
        "tags": [
            "binary search",
            "data structures"
        ],
        "points": 2500.0,
        "contestId": 369,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Valera and Fools",
        "tags": [
            "dfs and similar",
            "dp",
            "shortest paths"
        ],
        "points": 2000.0,
        "contestId": 369,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Valera and Elections",
        "tags": [
            "dfs and similar",
            "graphs",
            "trees"
        ],
        "points": 1500.0,
        "contestId": 369,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Valera and Contest",
        "tags": [
            "constructive algorithms",
            "implementation",
            "math"
        ],
        "points": 1000.0,
        "contestId": 369,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Valera and Plates",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 369,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sereja and Suffixes",
        "tags": [
            "data structures",
            "dp"
        ],
        "points": 1000.0,
        "contestId": 368,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sereja and Coat Rack",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 368,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sereja and Intervals",
        "tags": [
            "combinatorics",
            "dp"
        ],
        "points": 2000.0,
        "contestId": 367,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sereja and Sets",
        "tags": [
            "bitmasks",
            "dfs and similar"
        ],
        "points": 2000.0,
        "contestId": 367,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sereja and the Arrangement of Numbers",
        "tags": [
            "graphs",
            "greedy",
            "sortings"
        ],
        "points": 1500.0,
        "contestId": 367,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sereja ans Anagrams",
        "tags": [
            "binary search",
            "data structures"
        ],
        "points": 1000.0,
        "contestId": 367,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sereja and Algorithm ",
        "tags": [
            "data structures",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 367,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dima and Magic Guitar",
        "tags": [
            "brute force",
            "implementation",
            "math"
        ],
        "points": 2500.0,
        "contestId": 366,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dima and Trap Graph",
        "tags": [
            "binary search",
            "data structures",
            "dfs and similar",
            "dsu",
            "shortest paths",
            "two pointers"
        ],
        "points": 2000.0,
        "contestId": 366,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dima and Salad",
        "tags": [
            "dp"
        ],
        "points": 1500.0,
        "contestId": 366,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dima and To-do List",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 366,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dima and Guards",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 366,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Fibonacci Segment",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 365,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Good Number",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 365,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Empty Rectangles",
        "tags": [
            "divide and conquer",
            "two pointers"
        ],
        "points": 2500.0,
        "contestId": 364,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ghd",
        "tags": [
            "brute force",
            "math",
            "probabilities"
        ],
        "points": 2000.0,
        "contestId": 364,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Beautiful Set",
        "tags": [
            "brute force",
            "number theory"
        ],
        "points": 1500.0,
        "contestId": 364,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Free Market",
        "tags": [
            "dp",
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 364,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Matrix",
        "tags": [
            "combinatorics",
            "data structures",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 364,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Two Circles",
        "tags": [
            "brute force",
            "data structures",
            "implementation"
        ],
        "points": 2500.0,
        "contestId": 363,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Renting Bikes",
        "tags": [
            "binary search",
            "greedy"
        ],
        "points": 2000.0,
        "contestId": 363,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fixing Typos",
        "tags": [
            "greedy",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 363,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fence",
        "tags": [
            "brute force",
            "dp"
        ],
        "points": 1000.0,
        "contestId": 363,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Soroban",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 363,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Petya and Pipes",
        "tags": [
            "flows",
            "graphs",
            "shortest paths"
        ],
        "points": 3000.0,
        "contestId": 362,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fools and Foolproof Roads",
        "tags": [
            "data structures",
            "dfs and similar",
            "dsu",
            "graphs",
            "greedy"
        ],
        "points": 3000.0,
        "contestId": 362,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Insertion Sort",
        "tags": [
            "data structures",
            "dp",
            "implementation",
            "math"
        ],
        "points": 2500.0,
        "contestId": 362,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Petya and Staircases",
        "tags": [
            "implementation",
            "sortings"
        ],
        "points": 500.0,
        "contestId": 362,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Two Semiknights Meet",
        "tags": [
            "greedy",
            "math"
        ],
        "points": 1000.0,
        "contestId": 362,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Levko and Permutation",
        "tags": [
            "constructive algorithms",
            "math",
            "number theory"
        ],
        "points": 1000.0,
        "contestId": 361,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Levko and Table",
        "tags": [
            "constructive algorithms",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 361,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Levko and Game",
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ],
        "points": 2000.0,
        "contestId": 360,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Levko and Sets",
        "tags": [
            "number theory"
        ],
        "points": 1500.0,
        "contestId": 360,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Levko and Strings",
        "tags": [
            "combinatorics",
            "dp"
        ],
        "points": 1500.0,
        "contestId": 360,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Levko and Array",
        "tags": [
            "binary search",
            "dp"
        ],
        "points": 1000.0,
        "contestId": 360,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Levko and Array Recovery",
        "tags": [
            "greedy",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 360,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Neatness",
        "tags": [
            "dfs and similar"
        ],
        "points": 2500.0,
        "contestId": 359,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Pair of Numbers",
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "math",
            "two pointers"
        ],
        "points": 2500.0,
        "contestId": 359,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Prime Number",
        "tags": [
            "math"
        ],
        "points": 1500.0,
        "contestId": 359,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Permutation",
        "tags": [
            "constructive algorithms",
            "dp",
            "math"
        ],
        "points": 1000.0,
        "contestId": 359,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Table",
        "tags": [
            "greedy",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 359,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dima and Kicks",
        "tags": [
            "brute force",
            "dsu",
            "graphs",
            "implementation"
        ],
        "points": 3000.0,
        "contestId": 358,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dima and Hares",
        "tags": [
            "dp",
            "greedy"
        ],
        "points": 2000.0,
        "contestId": 358,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dima and Containers",
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 358,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dima and Text Messages",
        "tags": [
            "brute force",
            "strings"
        ],
        "points": 1000.0,
        "contestId": 358,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dima and Continuous Line",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 358,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Flag Day",
        "tags": [
            "constructive algorithms",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 357,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Group of Students",
        "tags": [
            "brute force",
            "greedy",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 357,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Xenia and String Problem",
        "tags": [
            "dp",
            "hashing",
            "implementation",
            "string suffix structures",
            "strings"
        ],
        "points": 2500.0,
        "contestId": 356,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bags and Coins",
        "tags": [
            "bitmasks",
            "constructive algorithms",
            "dp",
            "greedy"
        ],
        "points": 2000.0,
        "contestId": 356,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Compartments",
        "tags": [
            "combinatorics",
            "constructive algorithms",
            "greedy",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 356,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Xenia and Hamming",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 1000.0,
        "contestId": 356,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Knight Tournament",
        "tags": [
            "data structures",
            "dsu"
        ],
        "points": 500.0,
        "contestId": 356,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vasya and Public Transport",
        "tags": [
            "greedy",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 355,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vasya and Digital Root",
        "tags": [
            "constructive algorithms",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 355,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lucky Number Representation",
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "dp"
        ],
        "points": 2500.0,
        "contestId": 354,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Transferring Pyramid",
        "tags": [
            "dp"
        ],
        "points": 2000.0,
        "contestId": 354,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vasya and Beautiful Arrays",
        "tags": [
            "brute force",
            "dp",
            "number theory"
        ],
        "points": 1500.0,
        "contestId": 354,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Game with Strings",
        "tags": [
            "bitmasks",
            "dp",
            "games"
        ],
        "points": 1000.0,
        "contestId": 354,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vasya and Robot",
        "tags": [
            "brute force",
            "greedy",
            "math"
        ],
        "points": 500.0,
        "contestId": 354,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Antichain",
        "tags": [
            "dp",
            "graph matchings",
            "greedy"
        ],
        "points": 3000.0,
        "contestId": 353,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Queue",
        "tags": [
            "constructive algorithms"
        ],
        "points": 2500.0,
        "contestId": 353,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Find Maximum",
        "tags": [
            "implementation",
            "math",
            "number theory"
        ],
        "points": 1000.0,
        "contestId": 353,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Two Heaps",
        "tags": [
            "combinatorics",
            "constructive algorithms",
            "greedy",
            "implementation",
            "math",
            "sortings"
        ],
        "points": 1500.0,
        "contestId": 353,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Domino",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 353,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Jeff and Periods",
        "tags": [
            "implementation",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 352,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Jeff and Digits",
        "tags": [
            "brute force",
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 352,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Jeff and Permutation",
        "tags": [
            "greedy"
        ],
        "points": 2000.0,
        "contestId": 351,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Jeff and Removing Periods",
        "tags": [
            "data structures"
        ],
        "points": 2000.0,
        "contestId": 351,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Jeff and Brackets",
        "tags": [
            "dp",
            "matrices"
        ],
        "points": 1500.0,
        "contestId": 351,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Jeff and Furik",
        "tags": [
            "combinatorics",
            "dp",
            "probabilities"
        ],
        "points": 1000.0,
        "contestId": 351,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Jeff and Rounding",
        "tags": [
            "dp",
            "greedy",
            "implementation",
            "math"
        ],
        "points": 1000.0,
        "contestId": 351,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Wrong Floyd",
        "tags": [
            "brute force",
            "constructive algorithms",
            "dfs and similar",
            "graphs"
        ],
        "points": 3000.0,
        "contestId": 350,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Looking for Owls",
        "tags": [
            "binary search",
            "geometry",
            "hashing",
            "sortings"
        ],
        "points": 3000.0,
        "contestId": 350,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bombs",
        "tags": [
            "greedy",
            "implementation",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 350,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Resort",
        "tags": [
            "brute force"
        ],
        "points": 1000.0,
        "contestId": 350,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "TL",
        "tags": [
            "brute force",
            "greedy",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 350,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Color the Fence",
        "tags": [
            "data structures",
            "dp",
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 349,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cinema Line",
        "tags": [
            "greedy",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 349,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Pilgrims",
        "tags": [
            "dfs and similar",
            "dp",
            "trees"
        ],
        "points": 2500.0,
        "contestId": 348,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Turtles",
        "tags": [
            "dp",
            "matrices"
        ],
        "points": 2000.0,
        "contestId": 348,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Subset Sums",
        "tags": [
            "brute force",
            "data structures"
        ],
        "points": 1500.0,
        "contestId": 348,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Apple Tree",
        "tags": [
            "dfs and similar",
            "number theory",
            "trees"
        ],
        "points": 1000.0,
        "contestId": 348,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Mafia",
        "tags": [
            "binary search",
            "math",
            "sortings"
        ],
        "points": 500.0,
        "contestId": 348,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fixed Points",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 1000.0,
        "contestId": 347,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Difference Row",
        "tags": [
            "implementation",
            "sortings"
        ],
        "points": 500.0,
        "contestId": 347,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Doodle Jump",
        "tags": [
            "math"
        ],
        "points": 2500.0,
        "contestId": 346,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Robot Control",
        "tags": [
            "shortest paths"
        ],
        "points": 2000.0,
        "contestId": 346,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Number Transformation II",
        "tags": [
            "greedy",
            "math"
        ],
        "points": 1500.0,
        "contestId": 346,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lucky Common Subsequence",
        "tags": [
            "dp",
            "strings"
        ],
        "points": 1000.0,
        "contestId": 346,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Alice and Bob",
        "tags": [
            "games",
            "math",
            "number theory"
        ],
        "points": 500.0,
        "contestId": 346,
        "index": "A"
    },
    {
        "contestId": 345,
        "name": "Suffix Subgroup",
        "tags": [
            "strings"
        ],
        "type": "PROGRAMMING",
        "index": "G"
    },
    {
        "contestId": 345,
        "name": "Superstitions Inspection",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 345,
        "name": "Black Cat Rush",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 345,
        "name": "Chain Letter",
        "tags": [
            "dfs and similar",
            "graphs"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 345,
        "name": "Counting Fridays",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 345,
        "name": "Triskaidekaphobia",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 345,
        "name": "Expecting Trouble",
        "tags": [
            "probabilities"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Simple Molecules",
        "tags": [
            "brute force",
            "math"
        ],
        "points": 1000.0,
        "contestId": 344,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Magnets",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 344,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Pumping Stations",
        "tags": [
            "brute force",
            "dfs and similar",
            "divide and conquer",
            "flows",
            "greedy"
        ],
        "points": 2500.0,
        "contestId": 343,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Water Tree",
        "tags": [
            "data structures",
            "dfs and similar",
            "trees"
        ],
        "points": 2000.0,
        "contestId": 343,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Read Time",
        "tags": [
            "binary search",
            "greedy",
            "two pointers"
        ],
        "points": 1500.0,
        "contestId": 343,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Alternating Current",
        "tags": [
            "data structures",
            "greedy",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 343,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Rational Resistance",
        "tags": [
            "math",
            "number theory"
        ],
        "points": 500.0,
        "contestId": 343,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Xenia and Tree",
        "tags": [
            "data structures",
            "divide and conquer",
            "trees"
        ],
        "points": 2500.0,
        "contestId": 342,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Xenia and Dominoes",
        "tags": [
            "bitmasks",
            "dfs and similar",
            "dp"
        ],
        "points": 2000.0,
        "contestId": 342,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cupboard and Balloons",
        "tags": [
            "geometry"
        ],
        "points": 1500.0,
        "contestId": 342,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Xenia and Spies",
        "tags": [
            "brute force",
            "greedy",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 342,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Xenia and Divisors",
        "tags": [
            "greedy",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 342,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Candies Game",
        "tags": [
            "constructive algorithms",
            "greedy"
        ],
        "points": 3000.0,
        "contestId": 341,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Iahub and Xors",
        "tags": [
            "data structures"
        ],
        "points": 2500.0,
        "contestId": 341,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Iahub and Permutations",
        "tags": [
            "combinatorics",
            "math"
        ],
        "points": 3000.0,
        "contestId": 340,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bubble Sort Graph",
        "tags": [
            "binary search",
            "data structures",
            "dp"
        ],
        "points": 2000.0,
        "contestId": 340,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tourist Problem",
        "tags": [
            "combinatorics",
            "implementation",
            "math"
        ],
        "points": 2000.0,
        "contestId": 340,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Maximal Area Quadrilateral",
        "tags": [
            "brute force",
            "geometry"
        ],
        "points": 3000.0,
        "contestId": 340,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Wall",
        "tags": [
            "math"
        ],
        "points": 500.0,
        "contestId": 340,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Three Swaps",
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "greedy"
        ],
        "points": 3000.0,
        "contestId": 339,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Xenia and Bit Operations",
        "tags": [
            "data structures",
            "trees"
        ],
        "points": 2000.0,
        "contestId": 339,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Xenia and Weights",
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "dp",
            "greedy"
        ],
        "points": 1500.0,
        "contestId": 339,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Xenia and Ringroad",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 339,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Helpful Maths",
        "tags": [
            "greedy",
            "implementation",
            "sortings",
            "strings"
        ],
        "points": 500.0,
        "contestId": 339,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Optimize!",
        "tags": [
            "data structures"
        ],
        "points": 2500.0,
        "contestId": 338,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "GCD Table",
        "tags": [
            "chinese remainder theorem",
            "math",
            "number theory"
        ],
        "points": 2000.0,
        "contestId": 338,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Divisor Tree",
        "tags": [
            "brute force",
            "number theory",
            "trees"
        ],
        "points": 2500.0,
        "contestId": 337,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Book of Evil",
        "tags": [
            "dfs and similar",
            "divide and conquer",
            "dp",
            "trees"
        ],
        "points": 2000.0,
        "contestId": 337,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Quiz",
        "tags": [
            "binary search",
            "greedy",
            "math",
            "matrices",
            "number theory"
        ],
        "points": 1500.0,
        "contestId": 337,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Routine Problem",
        "tags": [
            "greedy",
            "math",
            "number theory"
        ],
        "points": 1000.0,
        "contestId": 337,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Puzzles",
        "tags": [
            "dp",
            "graph matchings",
            "greedy"
        ],
        "points": 500.0,
        "contestId": 337,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vasily the Bear and Painting Square",
        "tags": [
            "bitmasks",
            "combinatorics",
            "dp",
            "implementation"
        ],
        "points": 2500.0,
        "contestId": 336,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vasily the Bear and Beautiful Strings",
        "tags": [
            "combinatorics",
            "math"
        ],
        "points": 2000.0,
        "contestId": 336,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vasily the Bear and Sequence",
        "tags": [
            "brute force",
            "greedy",
            "implementation",
            "number theory"
        ],
        "points": 1500.0,
        "contestId": 336,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vasily the Bear and Fly",
        "tags": [
            "math"
        ],
        "points": 1000.0,
        "contestId": 336,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vasily the Bear and Triangle",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 336,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Buy One, Get One Free",
        "tags": [
            "dp",
            "greedy"
        ],
        "points": 3000.0,
        "contestId": 335,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "Counting Skyscrapers",
        "tags": [
            "dp",
            "math",
            "probabilities"
        ],
        "points": 2500.0,
        "contestId": 335,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Rectangles and Square",
        "tags": [
            "brute force",
            "dp"
        ],
        "points": 2000.0,
        "contestId": 335,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "More Reclamation",
        "tags": [
            "games"
        ],
        "points": 1000.0,
        "contestId": 335,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Palindrome",
        "tags": [
            "constructive algorithms",
            "dp"
        ],
        "points": 1000.0,
        "contestId": 335,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Banana",
        "tags": [
            "binary search",
            "constructive algorithms",
            "greedy"
        ],
        "points": 500.0,
        "contestId": 335,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Eight Point Sets",
        "tags": [
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 334,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Candy Bags",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 334,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Summer Earnings",
        "tags": [
            "binary search",
            "bitmasks",
            "brute force",
            "geometry",
            "sortings"
        ],
        "points": 2500.0,
        "contestId": 333,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Characteristics of Rectangles",
        "tags": [
            "binary search",
            "bitmasks",
            "brute force",
            "implementation",
            "sortings"
        ],
        "points": 2000.0,
        "contestId": 333,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lucky Tickets",
        "tags": [
            "brute force",
            "constructive algorithms"
        ],
        "points": 1500.0,
        "contestId": 333,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Chips",
        "tags": [
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 333,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Secrets",
        "tags": [
            "greedy"
        ],
        "points": 500.0,
        "contestId": 333,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Binary Key",
        "tags": [
            "dp",
            "greedy",
            "implementation"
        ],
        "points": 3000.0,
        "contestId": 332,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Theft of Blueprints",
        "tags": [
            "graphs",
            "math"
        ],
        "points": 3000.0,
        "contestId": 332,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Students' Revenge",
        "tags": [
            "data structures",
            "greedy",
            "sortings"
        ],
        "points": 3000.0,
        "contestId": 332,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Maximum Absurdity",
        "tags": [
            "data structures",
            "dp",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 332,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Down the Hatch!",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 332,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Deja Vu",
        "tags": [
            "constructive algorithms",
            "dp"
        ],
        "points": 50.0,
        "contestId": 331,
        "index": "E2"
    },
    {
        "type": "PROGRAMMING",
        "name": "Deja Vu",
        "tags": [
            "constructive algorithms",
            "graphs",
            "implementation"
        ],
        "points": 50.0,
        "contestId": 331,
        "index": "E1"
    },
    {
        "type": "PROGRAMMING",
        "name": "Escaping on Beaveractor",
        "tags": [
            "data structures",
            "implementation",
            "trees"
        ],
        "points": 40.0,
        "contestId": 331,
        "index": "D3"
    },
    {
        "type": "PROGRAMMING",
        "name": "Escaping on Beaveractor",
        "tags": [
            "graphs"
        ],
        "points": 30.0,
        "contestId": 331,
        "index": "D2"
    },
    {
        "type": "PROGRAMMING",
        "name": "Escaping on Beaveractor",
        "tags": [
            "dfs and similar",
            "implementation"
        ],
        "points": 30.0,
        "contestId": 331,
        "index": "D1"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Great Julya Calendar",
        "tags": [
            "dp"
        ],
        "points": 60.0,
        "contestId": 331,
        "index": "C3"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Great Julya Calendar",
        "tags": [
            "dp"
        ],
        "points": 20.0,
        "contestId": 331,
        "index": "C2"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Great Julya Calendar",
        "tags": [
            "dp"
        ],
        "points": 20.0,
        "contestId": 331,
        "index": "C1"
    },
    {
        "type": "PROGRAMMING",
        "name": "Shave Beaver!",
        "tags": [
            "data structures"
        ],
        "points": 70.0,
        "contestId": 331,
        "index": "B2"
    },
    {
        "type": "PROGRAMMING",
        "name": "Shave Beaver!",
        "tags": [
            "implementation"
        ],
        "points": 30.0,
        "contestId": 331,
        "index": "B1"
    },
    {
        "type": "PROGRAMMING",
        "name": "Oh Sweet Beaverette",
        "tags": [
            "data structures",
            "sortings"
        ],
        "points": 70.0,
        "contestId": 331,
        "index": "A2"
    },
    {
        "type": "PROGRAMMING",
        "name": "Oh Sweet Beaverette",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 30.0,
        "contestId": 331,
        "index": "A1"
    },
    {
        "type": "PROGRAMMING",
        "name": "Road Construction",
        "tags": [
            "constructive algorithms",
            "graphs"
        ],
        "points": 1000.0,
        "contestId": 330,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cakeminator",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 330,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Evil",
        "tags": [
            "math"
        ],
        "points": 2500.0,
        "contestId": 329,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Evil Temple and the Moving Rocks",
        "tags": [
            "constructive algorithms"
        ],
        "points": 1500.0,
        "contestId": 329,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Graph Reconstruction",
        "tags": [
            "constructive algorithms"
        ],
        "points": 1500.0,
        "contestId": 329,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Biridian Forest",
        "tags": [
            "dfs and similar",
            "shortest paths"
        ],
        "points": 1000.0,
        "contestId": 329,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Purification",
        "tags": [
            "constructive algorithms",
            "greedy"
        ],
        "points": 500.0,
        "contestId": 329,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sheldon and Ice Pieces",
        "tags": [
            "greedy"
        ],
        "points": 500.0,
        "contestId": 328,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "IQ Test",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 328,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Axis Walking",
        "tags": [
            "bitmasks",
            "combinatorics",
            "constructive algorithms",
            "dp",
            "meet-in-the-middle"
        ],
        "points": 3000.0,
        "contestId": 327,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Block Tower",
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "graphs"
        ],
        "points": 2000.0,
        "contestId": 327,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Magic Five",
        "tags": [
            "combinatorics",
            "math"
        ],
        "points": 1500.0,
        "contestId": 327,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Hungry Sequence",
        "tags": [
            "math"
        ],
        "points": 500.0,
        "contestId": 327,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Flipping Game",
        "tags": [
            "brute force",
            "dp",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 327,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Red Button",
        "tags": [
            "combinatorics",
            "dfs and similar",
            "dsu",
            "greedy"
        ],
        "points": 2500.0,
        "contestId": 325,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Reclamation",
        "tags": [
            "dsu"
        ],
        "points": 2000.0,
        "contestId": 325,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Monsters and Diamonds",
        "tags": [
            "dfs and similar",
            "shortest paths"
        ],
        "points": 2000.0,
        "contestId": 325,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Stadium and Games",
        "tags": [
            "binary search",
            "math"
        ],
        "points": 1000.0,
        "contestId": 325,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Square and Rectangles",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 325,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Two permutations",
        "tags": [
            "data structures"
        ],
        "points": 1500.0,
        "contestId": 323,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tournament-graph",
        "tags": [
            "constructive algorithms"
        ],
        "points": 1000.0,
        "contestId": 323,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Black-and-White Cube",
        "tags": [
            "combinatorics",
            "constructive algorithms"
        ],
        "points": 500.0,
        "contestId": 323,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ciel and Flowers",
        "tags": [
            "combinatorics",
            "math"
        ],
        "points": 1000.0,
        "contestId": 322,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ciel and Dancing",
        "tags": [
            "greedy"
        ],
        "points": 500.0,
        "contestId": 322,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ciel and Gondolas",
        "tags": [
            "data structures",
            "divide and conquer",
            "dp"
        ],
        "points": 2500.0,
        "contestId": 321,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ciel and Flipboard",
        "tags": [
            "dp",
            "greedy",
            "math"
        ],
        "points": 2000.0,
        "contestId": 321,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ciel the Commander",
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "divide and conquer",
            "greedy",
            "trees"
        ],
        "points": 1500.0,
        "contestId": 321,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ciel and Duel",
        "tags": [
            "dp",
            "flows",
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 321,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ciel and Robot",
        "tags": [
            "binary search",
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 321,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ping-Pong (Easy Version)",
        "tags": [
            "dfs and similar",
            "graphs"
        ],
        "points": 1000.0,
        "contestId": 320,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Magic Numbers",
        "tags": [
            "brute force",
            "greedy"
        ],
        "points": 500.0,
        "contestId": 320,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ping-Pong",
        "tags": [
            "data structures"
        ],
        "points": 2500.0,
        "contestId": 319,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Have You Ever Heard About the Word?",
        "tags": [
            "greedy",
            "hashing",
            "string suffix structures",
            "strings"
        ],
        "points": 2500.0,
        "contestId": 319,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Kalila and Dimna in the Logging Industry",
        "tags": [
            "dp",
            "geometry"
        ],
        "points": 1500.0,
        "contestId": 319,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Psychos in a Line",
        "tags": [
            "data structures",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 319,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Malek Dance Club",
        "tags": [
            "combinatorics",
            "math"
        ],
        "points": 500.0,
        "contestId": 319,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Strings of Power",
        "tags": [
            "implementation",
            "strings",
            "two pointers"
        ],
        "points": 500.0,
        "contestId": 318,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Even Odds",
        "tags": [
            "math"
        ],
        "points": 500.0,
        "contestId": 318,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Princess and Her Shadow",
        "tags": [
            "constructive algorithms",
            "shortest paths"
        ],
        "points": 3000.0,
        "contestId": 317,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Game with Powers",
        "tags": [
            "dp",
            "games"
        ],
        "points": 1500.0,
        "contestId": 317,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Balance",
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "graphs",
            "trees"
        ],
        "points": 2500.0,
        "contestId": 317,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ants",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 317,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Perfect Pair",
        "tags": [
            "brute force"
        ],
        "points": 500.0,
        "contestId": 317,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Good Substrings",
        "tags": [
            "string suffix structures"
        ],
        "points": 30.0,
        "contestId": 316,
        "index": "G3"
    },
    {
        "type": "PROGRAMMING",
        "name": "Good Substrings",
        "tags": [
            "string suffix structures"
        ],
        "points": 40.0,
        "contestId": 316,
        "index": "G2"
    },
    {
        "type": "PROGRAMMING",
        "name": "Good Substrings",
        "tags": [
            "hashing",
            "strings"
        ],
        "points": 30.0,
        "contestId": 316,
        "index": "G1"
    },
    {
        "type": "PROGRAMMING",
        "name": "Suns and Rays",
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "implementation"
        ],
        "points": 30.0,
        "contestId": 316,
        "index": "F3"
    },
    {
        "type": "PROGRAMMING",
        "name": "Suns and Rays",
        "tags": [],
        "points": 40.0,
        "contestId": 316,
        "index": "F2"
    },
    {
        "type": "PROGRAMMING",
        "name": "Suns and Rays",
        "tags": [
            "dfs and similar",
            "implementation"
        ],
        "points": 30.0,
        "contestId": 316,
        "index": "F1"
    },
    {
        "type": "PROGRAMMING",
        "name": "Summer Homework",
        "tags": [
            "data structures",
            "math"
        ],
        "points": 30.0,
        "contestId": 316,
        "index": "E3"
    },
    {
        "type": "PROGRAMMING",
        "name": "Summer Homework",
        "tags": [
            "data structures",
            "math"
        ],
        "points": 40.0,
        "contestId": 316,
        "index": "E2"
    },
    {
        "type": "PROGRAMMING",
        "name": "Summer Homework",
        "tags": [
            "brute force",
            "data structures"
        ],
        "points": 30.0,
        "contestId": 316,
        "index": "E1"
    },
    {
        "type": "PROGRAMMING",
        "name": "PE Lesson",
        "tags": [
            "dp",
            "math"
        ],
        "points": 30.0,
        "contestId": 316,
        "index": "D3"
    },
    {
        "type": "PROGRAMMING",
        "name": "PE Lesson",
        "tags": [
            "dp"
        ],
        "points": 40.0,
        "contestId": 316,
        "index": "D2"
    },
    {
        "type": "PROGRAMMING",
        "name": "PE Lesson",
        "tags": [
            "brute force",
            "dp"
        ],
        "points": 30.0,
        "contestId": 316,
        "index": "D1"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tidying Up",
        "tags": [
            "flows",
            "graph matchings"
        ],
        "points": 70.0,
        "contestId": 316,
        "index": "C2"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tidying Up",
        "tags": [
            "flows"
        ],
        "points": 30.0,
        "contestId": 316,
        "index": "C1"
    },
    {
        "type": "PROGRAMMING",
        "name": "EKG",
        "tags": [
            "dfs and similar",
            "dp"
        ],
        "points": 70.0,
        "contestId": 316,
        "index": "B2"
    },
    {
        "type": "PROGRAMMING",
        "name": "EKG",
        "tags": [
            "brute force",
            "dfs and similar"
        ],
        "points": 30.0,
        "contestId": 316,
        "index": "B1"
    },
    {
        "type": "PROGRAMMING",
        "name": "Special Task",
        "tags": [
            "math"
        ],
        "points": 70.0,
        "contestId": 316,
        "index": "A2"
    },
    {
        "type": "PROGRAMMING",
        "name": "Special Task",
        "tags": [
            "greedy"
        ],
        "points": 30.0,
        "contestId": 316,
        "index": "A1"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sereja and Array",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 315,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sereja and Bottles",
        "tags": [
            "brute force"
        ],
        "points": 500.0,
        "contestId": 315,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sereja and Squares",
        "tags": [
            "dp"
        ],
        "points": 2500.0,
        "contestId": 314,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sereja and Straight Lines",
        "tags": [
            "binary search",
            "data structures",
            "geometry",
            "sortings",
            "two pointers"
        ],
        "points": 2000.0,
        "contestId": 314,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sereja and Subsequences",
        "tags": [
            "data structures",
            "dp"
        ],
        "points": 1500.0,
        "contestId": 314,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sereja and Periods",
        "tags": [
            "binary search",
            "dfs and similar",
            "strings"
        ],
        "points": 1000.0,
        "contestId": 314,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sereja and Contest",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 314,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ilya and Two Numbers",
        "tags": [
            "constructive algorithms",
            "data structures",
            "dsu",
            "greedy"
        ],
        "points": 2500.0,
        "contestId": 313,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ilya and Roads",
        "tags": [
            "dp"
        ],
        "points": 2500.0,
        "contestId": 313,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ilya and Matrix",
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "sortings"
        ],
        "points": 1500.0,
        "contestId": 313,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ilya and Queries",
        "tags": [
            "dp",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 313,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ilya and Bank Account",
        "tags": [
            "implementation",
            "number theory"
        ],
        "points": 500.0,
        "contestId": 313,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Archer",
        "tags": [
            "math",
            "probabilities"
        ],
        "points": 1000.0,
        "contestId": 312,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Whose sentence is it?",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 312,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Biologist",
        "tags": [
            "flows"
        ],
        "points": 2500.0,
        "contestId": 311,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Interval Cubing",
        "tags": [
            "data structures",
            "math"
        ],
        "points": 2000.0,
        "contestId": 311,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fetch the Treasure",
        "tags": [
            "brute force",
            "data structures",
            "shortest paths"
        ],
        "points": 1500.0,
        "contestId": 311,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cats Transport",
        "tags": [
            "data structures",
            "dp"
        ],
        "points": 1000.0,
        "contestId": 311,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Closest Pair",
        "tags": [
            "constructive algorithms",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 311,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sheep",
        "tags": [
            "binary search",
            "greedy"
        ],
        "points": 2500.0,
        "contestId": 309,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tennis Rackets",
        "tags": [
            "brute force",
            "geometry"
        ],
        "points": 2000.0,
        "contestId": 309,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Memory for Arrays",
        "tags": [
            "binary search",
            "bitmasks",
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 309,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Context Advertising",
        "tags": [
            "two pointers"
        ],
        "points": 500.0,
        "contestId": 309,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Morning run",
        "tags": [
            "binary search",
            "math",
            "two pointers"
        ],
        "points": 500.0,
        "contestId": 309,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Polygon",
        "tags": [
            "constructive algorithms",
            "geometry"
        ],
        "points": 2000.0,
        "contestId": 306,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "White, Black and White Again",
        "tags": [
            "combinatorics",
            "number theory"
        ],
        "points": 1500.0,
        "contestId": 306,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Optimizer",
        "tags": [
            "data structures",
            "greedy",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 306,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Candies",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 306,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Playing with String",
        "tags": [
            "games"
        ],
        "points": 2500.0,
        "contestId": 305,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Olya and Graph",
        "tags": [
            "combinatorics",
            "math"
        ],
        "points": 2000.0,
        "contestId": 305,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ivan and Powers of Two",
        "tags": [],
        "points": 1500.0,
        "contestId": 305,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Continued Fractions",
        "tags": [
            "brute force",
            "math"
        ],
        "points": 1000.0,
        "contestId": 305,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Strange Addition",
        "tags": [
            "brute force",
            "constructive algorithms"
        ],
        "points": 500.0,
        "contestId": 305,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Calendar",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 304,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Pythagorean Theorem II",
        "tags": [
            "brute force",
            "math"
        ],
        "points": 500.0,
        "contestId": 304,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Random Ranking",
        "tags": [
            "dp"
        ],
        "points": 3000.0,
        "contestId": 303,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Rotatable Number",
        "tags": [
            "math",
            "number theory"
        ],
        "points": 2500.0,
        "contestId": 303,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Minimum Modular",
        "tags": [
            "brute force",
            "math"
        ],
        "points": 2000.0,
        "contestId": 303,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Rectangle Puzzle II",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 303,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lucky Permutation Triple",
        "tags": [
            "constructive algorithms",
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 303,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Eugeny and Play List",
        "tags": [
            "binary search",
            "implementation",
            "two pointers"
        ],
        "points": 1000.0,
        "contestId": 302,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Eugeny and Array",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 302,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Yaroslav and Arrangements",
        "tags": [
            "dp"
        ],
        "points": 2500.0,
        "contestId": 301,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Yaroslav and Divisors",
        "tags": [
            "data structures"
        ],
        "points": 2000.0,
        "contestId": 301,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Yaroslav and Algorithm",
        "tags": [
            "constructive algorithms"
        ],
        "points": 1500.0,
        "contestId": 301,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Yaroslav and Time",
        "tags": [
            "binary search",
            "graphs",
            "shortest paths"
        ],
        "points": 1000.0,
        "contestId": 301,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Yaroslav and Sequence",
        "tags": [
            "constructive algorithms"
        ],
        "points": 500.0,
        "contestId": 301,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Empire Strikes Back",
        "tags": [
            "binary search",
            "math"
        ],
        "points": 3000.0,
        "contestId": 300,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Painting Square",
        "tags": [
            "dp",
            "fft"
        ],
        "points": 3000.0,
        "contestId": 300,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Beautiful Numbers",
        "tags": [
            "brute force",
            "combinatorics"
        ],
        "points": 2000.0,
        "contestId": 300,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Coach",
        "tags": [
            "brute force",
            "dfs and similar"
        ],
        "points": 1000.0,
        "contestId": 300,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Array",
        "tags": [
            "brute force",
            "constructive algorithms",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 300,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ksusha the Squirrel",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 299,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ksusha and Array",
        "tags": [
            "brute force",
            "number theory",
            "sortings"
        ],
        "points": 500.0,
        "contestId": 299,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sail",
        "tags": [
            "brute force",
            "greedy",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 298,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Snow Footprints",
        "tags": [
            "greedy",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 298,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Mystic Carvings",
        "tags": [
            "data structures"
        ],
        "points": 3000.0,
        "contestId": 297,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Color the Carpet",
        "tags": [
            "constructive algorithms"
        ],
        "points": 2500.0,
        "contestId": 297,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Splitting the Uniqueness",
        "tags": [
            "constructive algorithms"
        ],
        "points": 2000.0,
        "contestId": 297,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fish Weight",
        "tags": [
            "constructive algorithms",
            "greedy"
        ],
        "points": 500.0,
        "contestId": 297,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Parity Game",
        "tags": [
            "constructive algorithms"
        ],
        "points": 500.0,
        "contestId": 297,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Yaroslav and Two Strings",
        "tags": [
            "combinatorics",
            "dp"
        ],
        "points": 1500.0,
        "contestId": 296,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Yaroslav and Permutations",
        "tags": [
            "greedy",
            "math"
        ],
        "points": 500.0,
        "contestId": 296,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Yaroslav and Points",
        "tags": [
            "data structures"
        ],
        "points": 2500.0,
        "contestId": 295,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Greg and Caves",
        "tags": [
            "combinatorics",
            "dp"
        ],
        "points": 2000.0,
        "contestId": 295,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Greg and Friends",
        "tags": [
            "combinatorics",
            "dp",
            "graphs",
            "shortest paths"
        ],
        "points": 1500.0,
        "contestId": 295,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Greg and Graph",
        "tags": [
            "dp",
            "graphs",
            "shortest paths"
        ],
        "points": 1000.0,
        "contestId": 295,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Greg and Array",
        "tags": [
            "data structures",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 295,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Shaass the Great",
        "tags": [
            "dp",
            "trees"
        ],
        "points": 2500.0,
        "contestId": 294,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Shaass and Painter Robot",
        "tags": [
            "brute force",
            "implementation",
            "number theory"
        ],
        "points": 2000.0,
        "contestId": 294,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Shaass and Lights",
        "tags": [
            "combinatorics",
            "number theory"
        ],
        "points": 1500.0,
        "contestId": 294,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Shaass and Bookshelf",
        "tags": [
            "dp",
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 294,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Shaass and Oskols",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 294,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Close Vertices",
        "tags": [
            "data structures",
            "divide and conquer",
            "trees"
        ],
        "points": 2500.0,
        "contestId": 293,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ksusha and Square",
        "tags": [
            "geometry",
            "math",
            "probabilities",
            "two pointers"
        ],
        "points": 2000.0,
        "contestId": 293,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cube Problem",
        "tags": [
            "brute force",
            "math",
            "number theory"
        ],
        "points": 1500.0,
        "contestId": 293,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Distinct Paths",
        "tags": [
            "brute force",
            "combinatorics"
        ],
        "points": 1500.0,
        "contestId": 293,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Weird Game",
        "tags": [
            "games",
            "greedy"
        ],
        "points": 500.0,
        "contestId": 293,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Copying Data",
        "tags": [
            "data structures"
        ],
        "points": 2500.0,
        "contestId": 292,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Connected Components",
        "tags": [
            "data structures",
            "dfs and similar",
            "dp",
            "dsu"
        ],
        "points": 2000.0,
        "contestId": 292,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Beautiful IP Addresses",
        "tags": [
            "brute force"
        ],
        "points": 1500.0,
        "contestId": 292,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Network Topology",
        "tags": [
            "graphs",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 292,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "SMSC",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 292,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tree-String Problem",
        "tags": [
            "dfs and similar",
            "hashing",
            "strings"
        ],
        "points": 2500.0,
        "contestId": 291,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Parallel Programming",
        "tags": [
            "greedy"
        ],
        "points": 2000.0,
        "contestId": 291,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Network Mask",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 291,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Command Line Arguments",
        "tags": [
            "implementation",
            "strings"
        ],
        "points": 1000.0,
        "contestId": 291,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Spyke Talks",
        "tags": [
            "implementation",
            "sortings"
        ],
        "points": 500.0,
        "contestId": 291,
        "index": "A"
    },
    {
        "contestId": 290,
        "name": "Greedy Petya",
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy"
        ],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 290,
        "name": "HQ",
        "tags": [
            "constructive algorithms"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 290,
        "name": "Orange",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 290,
        "name": "WTF?",
        "tags": [
            "graph matchings",
            "implementation",
            "trees"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 290,
        "name": "QR code",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 290,
        "name": "Mysterious strings",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Polo the Penguin and Matrix",
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "sortings",
            "ternary search"
        ],
        "points": 1000.0,
        "contestId": 289,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Polo the Penguin and Segments ",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 289,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Polo the Penguin and Lucky Numbers",
        "tags": [
            "dp",
            "implementation",
            "math"
        ],
        "points": 2500.0,
        "contestId": 288,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Polo the Penguin and Trees ",
        "tags": [
            "combinatorics",
            "dfs and similar",
            "trees"
        ],
        "points": 2000.0,
        "contestId": 288,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Polo the Penguin and XOR operation",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 1500.0,
        "contestId": 288,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Polo the Penguin and Houses ",
        "tags": [
            "combinatorics"
        ],
        "points": 1000.0,
        "contestId": 288,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Polo the Penguin and Strings",
        "tags": [
            "greedy"
        ],
        "points": 500.0,
        "contestId": 288,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Pipeline",
        "tags": [
            "binary search",
            "math"
        ],
        "points": 1500.0,
        "contestId": 287,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "IQ Test",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 287,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ladies' Shop",
        "tags": [
            "constructive algorithms",
            "fft",
            "math"
        ],
        "points": 2500.0,
        "contestId": 286,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tourists",
        "tags": [
            "data structures",
            "sortings"
        ],
        "points": 2000.0,
        "contestId": 286,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Main Sequence",
        "tags": [
            "greedy",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 286,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Shifting",
        "tags": [
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 286,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lucky Permutation",
        "tags": [
            "constructive algorithms",
            "math"
        ],
        "points": 500.0,
        "contestId": 286,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Positions in Permutations",
        "tags": [
            "combinatorics",
            "dp",
            "math"
        ],
        "points": 2500.0,
        "contestId": 285,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Permutation Sum",
        "tags": [
            "bitmasks",
            "combinatorics",
            "dp",
            "implementation",
            "meet-in-the-middle"
        ],
        "points": 2000.0,
        "contestId": 285,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Building Permutation",
        "tags": [
            "greedy",
            "implementation",
            "sortings"
        ],
        "points": 1500.0,
        "contestId": 285,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Find Marble",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 285,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Slightly Decreasing Permutations",
        "tags": [
            "greedy",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 285,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cows and Poker Game",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 284,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cows and Primitive Roots",
        "tags": [
            "implementation",
            "math",
            "number theory"
        ],
        "points": 500.0,
        "contestId": 284,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cow Tennis Tournament",
        "tags": [
            "combinatorics",
            "data structures",
            "math"
        ],
        "points": 2500.0,
        "contestId": 283,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cows and Cool Sequences",
        "tags": [
            "dp",
            "math",
            "number theory"
        ],
        "points": 2000.0,
        "contestId": 283,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Coin Troubles",
        "tags": [
            "dp"
        ],
        "points": 1500.0,
        "contestId": 283,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cow Program",
        "tags": [
            "dfs and similar",
            "dp",
            "graphs"
        ],
        "points": 1000.0,
        "contestId": 283,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cows and Sequence",
        "tags": [
            "constructive algorithms",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 283,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sausage Maximization",
        "tags": [
            "bitmasks",
            "data structures",
            "trees"
        ],
        "points": 2500.0,
        "contestId": 282,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Yet Another Number Game",
        "tags": [
            "dp",
            "games"
        ],
        "points": 2000.0,
        "contestId": 282,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "XOR and OR",
        "tags": [
            "constructive algorithms",
            "implementation",
            "math"
        ],
        "points": 1500.0,
        "contestId": 282,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Painting Eggs",
        "tags": [
            "greedy",
            "math"
        ],
        "points": 1000.0,
        "contestId": 282,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bit++",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 282,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Nearest Fraction",
        "tags": [
            "brute force",
            "implementation",
            "two pointers"
        ],
        "points": 1000.0,
        "contestId": 281,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Word Capitalization",
        "tags": [
            "strings"
        ],
        "points": 500.0,
        "contestId": 281,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sequence Transformation",
        "tags": [
            "data structures",
            "dp",
            "implementation",
            "math"
        ],
        "points": 2500.0,
        "contestId": 280,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "k-Maximum Subsequence Sum",
        "tags": [
            "data structures",
            "flows"
        ],
        "points": 2000.0,
        "contestId": 280,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Game on Tree",
        "tags": [
            "implementation",
            "math",
            "probabilities",
            "trees"
        ],
        "points": 1500.0,
        "contestId": 280,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Maximum Xor Secondary",
        "tags": [
            "data structures",
            "implementation",
            "two pointers"
        ],
        "points": 1000.0,
        "contestId": 280,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Rectangle Puzzle",
        "tags": [
            "geometry"
        ],
        "points": 500.0,
        "contestId": 280,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Beautiful Decomposition",
        "tags": [
            "games",
            "greedy"
        ],
        "points": 2000.0,
        "contestId": 279,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Minimum Number of Variables",
        "tags": [
            "bitmasks",
            "dp"
        ],
        "points": 2000.0,
        "contestId": 279,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ladder",
        "tags": [
            "dp",
            "implementation",
            "two pointers"
        ],
        "points": 1500.0,
        "contestId": 279,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Books",
        "tags": [
            "binary search",
            "brute force",
            "implementation",
            "two pointers"
        ],
        "points": 1000.0,
        "contestId": 279,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Point on Spiral",
        "tags": [
            "brute force",
            "geometry",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 279,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "New Problem",
        "tags": [
            "brute force",
            "strings"
        ],
        "points": 1000.0,
        "contestId": 278,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Circle Line",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 278,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Binary Tree on Plane",
        "tags": [
            "flows"
        ],
        "points": 2000.0,
        "contestId": 277,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Google Code Jam",
        "tags": [
            "dp",
            "probabilities"
        ],
        "points": 3000.0,
        "contestId": 277,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Game",
        "tags": [
            "games",
            "implementation"
        ],
        "points": 2000.0,
        "contestId": 277,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Set of Points",
        "tags": [
            "constructive algorithms",
            "geometry"
        ],
        "points": 1500.0,
        "contestId": 277,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Learning Languages",
        "tags": [
            "dfs and similar",
            "dsu"
        ],
        "points": 500.0,
        "contestId": 277,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Girl and Problem on Trees",
        "tags": [
            "data structures",
            "trees"
        ],
        "points": 2500.0,
        "contestId": 276,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Girl and Maximum XOR",
        "tags": [
            "bitmasks",
            "dp",
            "greedy",
            "implementation",
            "math"
        ],
        "points": 2000.0,
        "contestId": 276,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Girl and Maximum Sum",
        "tags": [
            "data structures",
            "implementation",
            "sortings"
        ],
        "points": 1500.0,
        "contestId": 276,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Girl and Game",
        "tags": [
            "games",
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 276,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lunch Rush",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 276,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Convex Shape",
        "tags": [
            "constructive algorithms",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 275,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lights Out",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 275,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Mirror Room",
        "tags": [
            "data structures",
            "implementation"
        ],
        "points": 2000.0,
        "contestId": 274,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lovely Matrix",
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ],
        "points": 2000.0,
        "contestId": 274,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Last Hole!",
        "tags": [
            "brute force",
            "geometry"
        ],
        "points": 1500.0,
        "contestId": 274,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Zero Tree",
        "tags": [
            "dfs and similar",
            "dp",
            "greedy",
            "trees"
        ],
        "points": 1000.0,
        "contestId": 274,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "k-Multiple Free Set",
        "tags": [
            "binary search",
            "greedy",
            "sortings"
        ],
        "points": 500.0,
        "contestId": 274,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dima and Game",
        "tags": [
            "dp",
            "games"
        ],
        "points": 2500.0,
        "contestId": 273,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dima and Figure",
        "tags": [
            "dp"
        ],
        "points": 2000.0,
        "contestId": 273,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dima and Horses",
        "tags": [
            "combinatorics",
            "constructive algorithms",
            "graphs"
        ],
        "points": 2500.0,
        "contestId": 272,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dima and Two Sequences",
        "tags": [
            "combinatorics",
            "math",
            "sortings"
        ],
        "points": 2000.0,
        "contestId": 272,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dima and Staircase",
        "tags": [
            "data structures",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 272,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dima and Sequence",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 1000.0,
        "contestId": 272,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dima and Friends",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 272,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Three Horses",
        "tags": [
            "constructive algorithms",
            "math",
            "number theory"
        ],
        "points": 3000.0,
        "contestId": 271,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Good Substrings",
        "tags": [
            "data structures",
            "strings"
        ],
        "points": 2000.0,
        "contestId": 271,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Secret",
        "tags": [
            "constructive algorithms",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 271,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Prime Matrix",
        "tags": [
            "binary search",
            "brute force",
            "math",
            "number theory"
        ],
        "points": 1000.0,
        "contestId": 271,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Beautiful Year",
        "tags": [
            "brute force"
        ],
        "points": 500.0,
        "contestId": 271,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Multithreading",
        "tags": [
            "data structures",
            "greedy",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 270,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fancy Fence",
        "tags": [
            "geometry",
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 270,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "String Theory",
        "tags": [],
        "points": 2500.0,
        "contestId": 269,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Maximum Waterfall",
        "tags": [
            "data structures",
            "dp"
        ],
        "points": 2000.0,
        "contestId": 269,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Flawed Flow",
        "tags": [
            "constructive algorithms",
            "flows",
            "graphs"
        ],
        "points": 1500.0,
        "contestId": 269,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Greenhouse Effect",
        "tags": [
            "dp"
        ],
        "points": 1000.0,
        "contestId": 269,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Magical Boxes",
        "tags": [
            "greedy",
            "math"
        ],
        "points": 500.0,
        "contestId": 269,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Playlist",
        "tags": [
            "math",
            "probabilities",
            "sortings"
        ],
        "points": 2500.0,
        "contestId": 268,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Wall Bars",
        "tags": [
            "dp"
        ],
        "points": 2500.0,
        "contestId": 268,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Beautiful Sets of Points",
        "tags": [
            "constructive algorithms",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 268,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Buttons",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 1000.0,
        "contestId": 268,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Games",
        "tags": [
            "brute force"
        ],
        "points": 500.0,
        "contestId": 268,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Berland Traffic",
        "tags": [
            "math",
            "matrices"
        ],
        "points": 1500.0,
        "contestId": 267,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dominoes",
        "tags": [
            "dfs and similar",
            "graphs"
        ],
        "points": 1000.0,
        "contestId": 267,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Subtractions",
        "tags": [
            "math",
            "number theory"
        ],
        "points": 500.0,
        "contestId": 267,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "More Queries to Array...",
        "tags": [
            "data structures",
            "math"
        ],
        "points": 3000.0,
        "contestId": 266,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "BerDonalds",
        "tags": [
            "graphs",
            "math",
            "shortest paths"
        ],
        "points": 3000.0,
        "contestId": 266,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Below the Diagonal",
        "tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ],
        "points": 2500.0,
        "contestId": 266,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Queue at the School",
        "tags": [
            "constructive algorithms",
            "graph matchings",
            "implementation",
            "shortest paths"
        ],
        "points": 500.0,
        "contestId": 266,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Stones on the Table",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 266,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Roadside Trees (Simplified Edition)",
        "tags": [
            "greedy",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 265,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Colorful Stones (Simplified Edition)",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 265,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Roadside Trees",
        "tags": [
            "data structures",
            "dp"
        ],
        "points": 2500.0,
        "contestId": 264,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Colorful Stones",
        "tags": [
            "dp",
            "two pointers"
        ],
        "points": 2000.0,
        "contestId": 264,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Choosing Balls",
        "tags": [
            "dp"
        ],
        "points": 1500.0,
        "contestId": 264,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Good Sequences",
        "tags": [
            "dp",
            "number theory"
        ],
        "points": 1000.0,
        "contestId": 264,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Escape from Stones",
        "tags": [
            "constructive algorithms",
            "data structures",
            "implementation",
            "two pointers"
        ],
        "points": 500.0,
        "contestId": 264,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Rhombus",
        "tags": [
            "brute force",
            "data structures",
            "dp"
        ],
        "points": 3000.0,
        "contestId": 263,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cycle in Graph",
        "tags": [
            "dfs and similar",
            "graphs"
        ],
        "points": 2000.0,
        "contestId": 263,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Circle of Numbers",
        "tags": [
            "dfs and similar",
            "implementation"
        ],
        "points": 2500.0,
        "contestId": 263,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Squares",
        "tags": [
            "greedy",
            "implementation",
            "sortings"
        ],
        "points": 500.0,
        "contestId": 263,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Beautiful Matrix",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 263,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Roma and Changing Signs",
        "tags": [
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 262,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Roma and Lucky Numbers",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 262,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Maxim and Calculator",
        "tags": [
            "brute force",
            "dp",
            "two pointers"
        ],
        "points": 2500.0,
        "contestId": 261,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Maxim and Increasing Subsequence",
        "tags": [
            "dp"
        ],
        "points": 2000.0,
        "contestId": 261,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Maxim and Matrix",
        "tags": [
            "constructive algorithms",
            "dp",
            "math"
        ],
        "points": 1500.0,
        "contestId": 261,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Maxim and Restaurant",
        "tags": [
            "dp",
            "math",
            "probabilities"
        ],
        "points": 1000.0,
        "contestId": 261,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Maxim and Discounts",
        "tags": [
            "greedy",
            "sortings"
        ],
        "points": 500.0,
        "contestId": 261,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dividing Kingdom",
        "tags": [
            "binary search",
            "brute force",
            "data structures"
        ],
        "points": 2500.0,
        "contestId": 260,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Black and White Tree",
        "tags": [
            "constructive algorithms",
            "dsu",
            "graphs",
            "greedy",
            "trees"
        ],
        "points": 2000.0,
        "contestId": 260,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Balls and Boxes",
        "tags": [
            "greedy",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 260,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ancient Prophesy",
        "tags": [
            "brute force",
            "implementation",
            "strings"
        ],
        "points": 1000.0,
        "contestId": 260,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Adding Digits",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 260,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Elephant and Magic Square",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 259,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Elephant and Chess",
        "tags": [
            "brute force",
            "strings"
        ],
        "points": 500.0,
        "contestId": 259,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Elephant and Tree",
        "tags": [
            "data structures",
            "dfs and similar",
            "trees"
        ],
        "points": 2500.0,
        "contestId": 258,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Elephant and Broken Sorting",
        "tags": [
            "dp",
            "math",
            "probabilities"
        ],
        "points": 2000.0,
        "contestId": 258,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Elephant and LCM",
        "tags": [
            "binary search",
            "combinatorics",
            "dp",
            "math"
        ],
        "points": 1500.0,
        "contestId": 258,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Elephant and Elections",
        "tags": [
            "brute force",
            "combinatorics",
            "dp"
        ],
        "points": 1000.0,
        "contestId": 258,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Elephant and Bits",
        "tags": [
            "greedy",
            "math"
        ],
        "points": 500.0,
        "contestId": 258,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Greedy Elevator",
        "tags": [
            "data structures",
            "implementation"
        ],
        "points": 3000.0,
        "contestId": 257,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sum",
        "tags": [
            "greedy",
            "math"
        ],
        "points": 2000.0,
        "contestId": 257,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "View Angle",
        "tags": [
            "brute force",
            "geometry",
            "math"
        ],
        "points": 1500.0,
        "contestId": 257,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Playing Cubes",
        "tags": [
            "games",
            "greedy",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 257,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sockets",
        "tags": [
            "greedy",
            "implementation",
            "sortings"
        ],
        "points": 500.0,
        "contestId": 257,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lucky Arrays",
        "tags": [
            "data structures"
        ],
        "points": 2500.0,
        "contestId": 256,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Liars and Serge",
        "tags": [
            "dp"
        ],
        "points": 2000.0,
        "contestId": 256,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Furlo and Rublo and Game",
        "tags": [
            "games",
            "implementation",
            "math"
        ],
        "points": 2500.0,
        "contestId": 255,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Mr. Bender and Square",
        "tags": [
            "binary search",
            "implementation",
            "math"
        ],
        "points": 2000.0,
        "contestId": 255,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Almost Arithmetical Progression",
        "tags": [
            "brute force",
            "dp"
        ],
        "points": 1500.0,
        "contestId": 255,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Code Parsing",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 255,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Greg's Workout",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 255,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dormitory",
        "tags": [
            "dp",
            "implementation"
        ],
        "points": 2500.0,
        "contestId": 254,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Rats",
        "tags": [
            "brute force",
            "dfs and similar",
            "implementation"
        ],
        "points": 2000.0,
        "contestId": 254,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Anagram",
        "tags": [
            "greedy"
        ],
        "points": 1500.0,
        "contestId": 254,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Jury Size",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 254,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cards with Numbers",
        "tags": [
            "constructive algorithms",
            "sortings"
        ],
        "points": 500.0,
        "contestId": 254,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Printer",
        "tags": [
            "binary search",
            "data structures",
            "implementation",
            "sortings"
        ],
        "points": 2500.0,
        "contestId": 253,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Table with Letters - 2",
        "tags": [
            "brute force",
            "two pointers"
        ],
        "points": 2000.0,
        "contestId": 253,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Text Editor",
        "tags": [
            "data structures",
            "dfs and similar",
            "greedy",
            "shortest paths"
        ],
        "points": 1500.0,
        "contestId": 253,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Physics Practical",
        "tags": [
            "binary search",
            "dp",
            "two pointers"
        ],
        "points": 1000.0,
        "contestId": 253,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Boys and Girls",
        "tags": [
            "greedy"
        ],
        "points": 500.0,
        "contestId": 253,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Unsorting Array",
        "tags": [
            "brute force",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 252,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Xor",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 252,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tree and Table",
        "tags": [
            "dfs and similar",
            "dp",
            "implementation",
            "trees"
        ],
        "points": 2500.0,
        "contestId": 251,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Two Sets",
        "tags": [
            "bitmasks",
            "math"
        ],
        "points": 2000.0,
        "contestId": 251,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Number Transformation",
        "tags": [
            "dp",
            "greedy",
            "number theory"
        ],
        "points": 1500.0,
        "contestId": 251,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Playing with Permutations",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 1000.0,
        "contestId": 251,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Points on Line",
        "tags": [
            "binary search",
            "combinatorics",
            "two pointers"
        ],
        "points": 500.0,
        "contestId": 251,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Mad Joe",
        "tags": [
            "brute force"
        ],
        "points": 2000.0,
        "contestId": 250,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Building Bridge",
        "tags": [
            "geometry",
            "ternary search",
            "two pointers"
        ],
        "points": 1500.0,
        "contestId": 250,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Movie Critics",
        "tags": [
            "greedy"
        ],
        "points": 1500.0,
        "contestId": 250,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Restoring IPv6",
        "tags": [
            "implementation",
            "strings"
        ],
        "points": 1000.0,
        "contestId": 250,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Paper Work",
        "tags": [
            "greedy"
        ],
        "points": 500.0,
        "contestId": 250,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Endless Matrix",
        "tags": [
            "math"
        ],
        "points": 2500.0,
        "contestId": 249,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Donkey and Stars",
        "tags": [
            "data structures",
            "dp",
            "math",
            "sortings"
        ],
        "points": 1500.0,
        "contestId": 249,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Piglet's Birthday",
        "tags": [
            "dp",
            "probabilities"
        ],
        "points": 2500.0,
        "contestId": 248,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sweets for Everyone!",
        "tags": [
            "binary search",
            "greedy",
            "implementation"
        ],
        "points": 2000.0,
        "contestId": 248,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Robo-Footballer",
        "tags": [
            "binary search",
            "geometry"
        ],
        "points": 2000.0,
        "contestId": 248,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Chilly Willy",
        "tags": [
            "math",
            "number theory"
        ],
        "points": 1000.0,
        "contestId": 248,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cupboards",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 248,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Blood Cousins Return",
        "tags": [
            "binary search",
            "data structures",
            "dfs and similar",
            "dp",
            "sortings"
        ],
        "points": 2500.0,
        "contestId": 246,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Colorful Graph",
        "tags": [
            "brute force",
            "dfs and similar",
            "graphs"
        ],
        "points": 2000.0,
        "contestId": 246,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Beauty Pageant",
        "tags": [
            "brute force",
            "constructive algorithms",
            "greedy"
        ],
        "points": 1500.0,
        "contestId": 246,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Increase and Decrease",
        "tags": [
            "greedy",
            "math"
        ],
        "points": 1000.0,
        "contestId": 246,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Buggy Sorting",
        "tags": [
            "constructive algorithms",
            "greedy",
            "sortings"
        ],
        "points": 500.0,
        "contestId": 246,
        "index": "A"
    },
    {
        "contestId": 245,
        "name": "Queries for Number of Palindromes",
        "tags": [
            "dp",
            "hashing",
            "strings"
        ],
        "type": "PROGRAMMING",
        "index": "H"
    },
    {
        "contestId": 245,
        "name": "Suggested Friends",
        "tags": [
            "brute force",
            "graphs"
        ],
        "type": "PROGRAMMING",
        "index": "G"
    },
    {
        "contestId": 245,
        "name": "Log Stream Analysis",
        "tags": [
            "binary search",
            "brute force",
            "implementation",
            "strings"
        ],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 245,
        "name": "Mishap in Club",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 245,
        "name": "Restoring Table",
        "tags": [
            "constructive algorithms",
            "greedy"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 245,
        "name": "Game with Coins",
        "tags": [
            "greedy"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 245,
        "name": "Internet Address",
        "tags": [
            "implementation",
            "strings"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 245,
        "name": "System Administrator",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Undoubtedly Lucky Numbers",
        "tags": [
            "bitmasks",
            "brute force",
            "dfs and similar"
        ],
        "points": 1000.0,
        "contestId": 244,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dividing Orange",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 244,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Matrix",
        "tags": [
            "data structures"
        ],
        "points": 2500.0,
        "contestId": 243,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cubes",
        "tags": [
            "data structures",
            "dp",
            "geometry",
            "two pointers"
        ],
        "points": 2000.0,
        "contestId": 243,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Colorado Potato Beetle",
        "tags": [
            "dfs and similar",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 243,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Hydra",
        "tags": [
            "graphs",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 243,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Brand New Function",
        "tags": [
            "bitmasks"
        ],
        "points": 500.0,
        "contestId": 243,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "XOR on Segment",
        "tags": [
            "bitmasks",
            "data structures"
        ],
        "points": 2500.0,
        "contestId": 242,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dispute",
        "tags": [
            "dfs and similar",
            "greedy"
        ],
        "points": 2000.0,
        "contestId": 242,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "King's Path",
        "tags": [
            "dfs and similar",
            "hashing",
            "shortest paths"
        ],
        "points": 1500.0,
        "contestId": 242,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Big Segment",
        "tags": [
            "implementation",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 242,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Heads or Tails",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 242,
        "index": "A"
    },
    {
        "contestId": 241,
        "name": "Challenging Balloons",
        "tags": [
            "constructive algorithms"
        ],
        "type": "PROGRAMMING",
        "index": "G"
    },
    {
        "contestId": 241,
        "name": "Race",
        "tags": [
            "brute force",
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 241,
        "name": "Flights",
        "tags": [
            "graphs",
            "shortest paths"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 241,
        "name": "Numbers",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 241,
        "name": "Mirror Box",
        "tags": [
            "geometry",
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 241,
        "name": "Friends",
        "tags": [
            "binary search",
            "bitmasks",
            "data structures",
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 241,
        "name": "Old Peykan",
        "tags": [
            "greedy"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "contestId": 240,
        "name": "TorCoder",
        "tags": [
            "data structures"
        ],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 240,
        "name": "Road Repairs",
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Easy Tape Programming",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 239,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Two Bags of Potatoes",
        "tags": [
            "greedy",
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 239,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Meeting Her",
        "tags": [
            "dp",
            "graphs",
            "shortest paths"
        ],
        "points": 2500.0,
        "contestId": 238,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tape Programming",
        "tags": [
            "data structures",
            "implementation"
        ],
        "points": 2000.0,
        "contestId": 238,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "World Eater Brothers",
        "tags": [
            "dfs and similar",
            "dp",
            "greedy",
            "trees"
        ],
        "points": 1500.0,
        "contestId": 238,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Boring Partition",
        "tags": [
            "constructive algorithms"
        ],
        "points": 1000.0,
        "contestId": 238,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Not Wool Sequences",
        "tags": [
            "constructive algorithms",
            "math"
        ],
        "points": 500.0,
        "contestId": 238,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Build String",
        "tags": [
            "flows",
            "graphs"
        ],
        "points": 2500.0,
        "contestId": 237,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "T-decomposition",
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy"
        ],
        "points": 2000.0,
        "contestId": 237,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Primes on Interval",
        "tags": [
            "binary search",
            "number theory",
            "two pointers"
        ],
        "points": 1500.0,
        "contestId": 237,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Young Table",
        "tags": [
            "implementation",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 237,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Free Cash",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 237,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Easy Number Challenge",
        "tags": [
            "implementation",
            "number theory"
        ],
        "points": 1000.0,
        "contestId": 236,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Boy or Girl",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 236,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Number Challenge",
        "tags": [
            "combinatorics",
            "dp",
            "implementation",
            "number theory"
        ],
        "points": 2500.0,
        "contestId": 235,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Graph Game",
        "tags": [
            "graphs"
        ],
        "points": 2000.0,
        "contestId": 235,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cyclical Quest",
        "tags": [
            "string suffix structures",
            "strings"
        ],
        "points": 1500.0,
        "contestId": 235,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Let's Play Osu!",
        "tags": [
            "dp",
            "math",
            "probabilities"
        ],
        "points": 1000.0,
        "contestId": 235,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "LCM Challenge",
        "tags": [
            "number theory"
        ],
        "points": 500.0,
        "contestId": 235,
        "index": "A"
    },
    {
        "contestId": 234,
        "name": "Merging Two Decks",
        "tags": [
            "constructive algorithms",
            "greedy"
        ],
        "type": "PROGRAMMING",
        "index": "H"
    },
    {
        "contestId": 234,
        "name": "Practice",
        "tags": [
            "constructive algorithms",
            "divide and conquer",
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "G"
    },
    {
        "contestId": 234,
        "name": "Fence",
        "tags": [
            "dp"
        ],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 234,
        "name": "Champions' League",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 234,
        "name": "Cinema",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 234,
        "name": "Weather",
        "tags": [
            "dp",
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 234,
        "name": "Reading",
        "tags": [
            "sortings"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 234,
        "name": "Lefthanders and Righthanders ",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Non-square Equation",
        "tags": [
            "binary search",
            "brute force",
            "math"
        ],
        "points": 1000.0,
        "contestId": 233,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Perfect Permutation",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 233,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Quick Tortoise",
        "tags": [
            "bitmasks",
            "divide and conquer",
            "dp"
        ],
        "points": 2500.0,
        "contestId": 232,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fence",
        "tags": [
            "binary search",
            "data structures",
            "string suffix structures"
        ],
        "points": 2000.0,
        "contestId": 232,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Doe Graphs",
        "tags": [
            "constructive algorithms",
            "divide and conquer",
            "dp",
            "graphs",
            "shortest paths"
        ],
        "points": 1500.0,
        "contestId": 232,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Table",
        "tags": [
            "bitmasks",
            "combinatorics",
            "dp",
            "math"
        ],
        "points": 1000.0,
        "contestId": 232,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cycles",
        "tags": [
            "binary search",
            "constructive algorithms",
            "graphs",
            "greedy"
        ],
        "points": 500.0,
        "contestId": 232,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cactus",
        "tags": [
            "data structures",
            "dfs and similar",
            "dp",
            "graphs",
            "trees"
        ],
        "points": 2500.0,
        "contestId": 231,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Magic Box",
        "tags": [
            "brute force",
            "geometry"
        ],
        "points": 2000.0,
        "contestId": 231,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "To Add or Not to Add",
        "tags": [
            "binary search",
            "sortings",
            "two pointers"
        ],
        "points": 1500.0,
        "contestId": 231,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Magic, Wizardry and Wonders",
        "tags": [
            "constructive algorithms",
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 231,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Team",
        "tags": [
            "brute force",
            "greedy"
        ],
        "points": 500.0,
        "contestId": 231,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "T-primes",
        "tags": [
            "implementation",
            "math",
            "number theory"
        ],
        "points": 500.0,
        "contestId": 230,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dragons",
        "tags": [
            "greedy",
            "sortings"
        ],
        "points": 500.0,
        "contestId": 230,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Gifts",
        "tags": [
            "combinatorics",
            "dp",
            "probabilities"
        ],
        "points": 3000.0,
        "contestId": 229,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Towers",
        "tags": [
            "dp",
            "greedy",
            "two pointers"
        ],
        "points": 1000.0,
        "contestId": 229,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Triangles",
        "tags": [
            "combinatorics",
            "graphs",
            "math"
        ],
        "points": 1000.0,
        "contestId": 229,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Planets",
        "tags": [
            "binary search",
            "data structures",
            "shortest paths"
        ],
        "points": 500.0,
        "contestId": 229,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Shifts",
        "tags": [
            "brute force",
            "two pointers"
        ],
        "points": 500.0,
        "contestId": 229,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Road to Berland is Paved With Good Intentions",
        "tags": [
            "2-sat",
            "dfs and similar",
            "dsu",
            "graphs"
        ],
        "points": 2500.0,
        "contestId": 228,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Zigzag",
        "tags": [
            "data structures"
        ],
        "points": 2000.0,
        "contestId": 228,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fractal Detector",
        "tags": [
            "dp",
            "hashing"
        ],
        "points": 1500.0,
        "contestId": 228,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Two Tables",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 228,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Is your horseshoe on the other hoof?",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 228,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Effective Approach",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 227,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Where do I Turn?",
        "tags": [
            "geometry"
        ],
        "points": 500.0,
        "contestId": 227,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Noble Knight's Path",
        "tags": [
            "data structures",
            "trees"
        ],
        "points": 2500.0,
        "contestId": 226,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "The table",
        "tags": [
            "constructive algorithms",
            "greedy"
        ],
        "points": 2000.0,
        "contestId": 226,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Anniversary",
        "tags": [
            "data structures",
            "implementation",
            "math",
            "matrices",
            "number theory"
        ],
        "points": 1500.0,
        "contestId": 226,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Naughty Stone Piles",
        "tags": [
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 226,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Flying Saucer Segments",
        "tags": [
            "math"
        ],
        "points": 500.0,
        "contestId": 226,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Unsolvable",
        "tags": [
            "math",
            "number theory"
        ],
        "points": 3000.0,
        "contestId": 225,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Snake",
        "tags": [
            "bitmasks",
            "dfs and similar",
            "graphs",
            "implementation"
        ],
        "points": 3000.0,
        "contestId": 225,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Barcode",
        "tags": [
            "dp",
            "matrices"
        ],
        "points": 1500.0,
        "contestId": 225,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Well-known Numbers",
        "tags": [
            "binary search",
            "greedy",
            "number theory"
        ],
        "points": 1000.0,
        "contestId": 225,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dice Tower",
        "tags": [
            "constructive algorithms",
            "greedy"
        ],
        "points": 500.0,
        "contestId": 225,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Array",
        "tags": [
            "bitmasks",
            "implementation",
            "two pointers"
        ],
        "points": 1000.0,
        "contestId": 224,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Parallelepiped",
        "tags": [
            "brute force",
            "math"
        ],
        "points": 500.0,
        "contestId": 224,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Planar Graph",
        "tags": [
            "flows",
            "geometry",
            "graphs"
        ],
        "points": 2500.0,
        "contestId": 223,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Spider",
        "tags": [
            "geometry",
            "graphs"
        ],
        "points": 2000.0,
        "contestId": 223,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Partial Sums",
        "tags": [
            "combinatorics",
            "math"
        ],
        "points": 1500.0,
        "contestId": 223,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Two Strings",
        "tags": [
            "data structures",
            "dp",
            "strings"
        ],
        "points": 1000.0,
        "contestId": 223,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bracket Sequence",
        "tags": [
            "data structures",
            "expression parsing",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 223,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Decoding Genome",
        "tags": [
            "matrices"
        ],
        "points": 2500.0,
        "contestId": 222,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Olympiad",
        "tags": [
            "binary search",
            "greedy",
            "sortings",
            "two pointers"
        ],
        "points": 2000.0,
        "contestId": 222,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Reducing Fractions",
        "tags": [
            "implementation",
            "number theory",
            "sortings"
        ],
        "points": 1500.0,
        "contestId": 222,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cosmic Tables",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 222,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Shooshuns and Sequence ",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 222,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Elephant and Numbers",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 221,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Elephant and Function",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 221,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Elephant and Inversions",
        "tags": [
            "data structures",
            "two pointers"
        ],
        "points": 2500.0,
        "contestId": 220,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Elephant and Triangle",
        "tags": [
            "chinese remainder theorem",
            "geometry",
            "math"
        ],
        "points": 2000.0,
        "contestId": 220,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Elephant and Shifts",
        "tags": [
            "data structures"
        ],
        "points": 1500.0,
        "contestId": 220,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Elephant and Array",
        "tags": [
            "constructive algorithms",
            "data structures"
        ],
        "points": 1000.0,
        "contestId": 220,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Elephant and Problem",
        "tags": [
            "implementation",
            "sortings"
        ],
        "points": 500.0,
        "contestId": 220,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Parking Lot",
        "tags": [
            "data structures"
        ],
        "points": 3000.0,
        "contestId": 219,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Choosing Capital for Treeland",
        "tags": [
            "dfs and similar",
            "dp",
            "trees"
        ],
        "points": 2000.0,
        "contestId": 219,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Color Stripe",
        "tags": [
            "brute force",
            "dp",
            "greedy"
        ],
        "points": 1500.0,
        "contestId": 219,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Special Offer! Super Price 999 Bourles!",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 219,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "k-String",
        "tags": [
            "implementation",
            "strings"
        ],
        "points": 500.0,
        "contestId": 219,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Airport",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 218,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Mountain Scenery",
        "tags": [
            "brute force",
            "constructive algorithms",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 218,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Alien DNA",
        "tags": [
            "data structures",
            "dsu",
            "trees"
        ],
        "points": 3000.0,
        "contestId": 217,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bitonix' Patrol",
        "tags": [
            "bitmasks",
            "brute force",
            "combinatorics",
            "dfs and similar",
            "math"
        ],
        "points": 3000.0,
        "contestId": 217,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Formurosa",
        "tags": [
            "divide and conquer",
            "dp",
            "expression parsing"
        ],
        "points": 2500.0,
        "contestId": 217,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Blackboard Fibonacci",
        "tags": [
            "brute force",
            "math"
        ],
        "points": 1000.0,
        "contestId": 217,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ice Skating",
        "tags": [
            "brute force",
            "dfs and similar",
            "dsu",
            "graphs"
        ],
        "points": 500.0,
        "contestId": 217,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Martian Luck",
        "tags": [
            "math",
            "number theory"
        ],
        "points": 3000.0,
        "contestId": 216,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Spider's Web",
        "tags": [
            "binary search",
            "sortings",
            "two pointers"
        ],
        "points": 2000.0,
        "contestId": 216,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Hiring Staff",
        "tags": [
            "greedy"
        ],
        "points": 2000.0,
        "contestId": 216,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Forming Teams",
        "tags": [
            "dfs and similar",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 216,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tiling with Hexagons",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 216,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Periodical Numbers",
        "tags": [
            "combinatorics",
            "dp",
            "number theory"
        ],
        "points": 3000.0,
        "contestId": 215,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Hot Days",
        "tags": [
            "greedy"
        ],
        "points": 2000.0,
        "contestId": 215,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Crosses",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 3000.0,
        "contestId": 215,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Olympic Medal",
        "tags": [
            "greedy",
            "math"
        ],
        "points": 500.0,
        "contestId": 215,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bicycle Chain",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 215,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Hometask",
        "tags": [
            "brute force",
            "constructive algorithms",
            "greedy",
            "math"
        ],
        "points": 1000.0,
        "contestId": 214,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "System of Equations",
        "tags": [
            "brute force"
        ],
        "points": 500.0,
        "contestId": 214,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Two Permutations",
        "tags": [
            "data structures",
            "hashing",
            "strings"
        ],
        "points": 2500.0,
        "contestId": 213,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Stars",
        "tags": [
            "constructive algorithms",
            "geometry"
        ],
        "points": 2000.0,
        "contestId": 213,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Relay Race",
        "tags": [
            "dp"
        ],
        "points": 1500.0,
        "contestId": 213,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Numbers",
        "tags": [
            "combinatorics",
            "dp"
        ],
        "points": 1000.0,
        "contestId": 213,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Game",
        "tags": [
            "dfs and similar",
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 213,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "IT Restaurants",
        "tags": [
            "dfs and similar",
            "dp",
            "trees"
        ],
        "points": 500.0,
        "contestId": 212,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cutting a Fence",
        "tags": [
            "binary search",
            "data structures",
            "dsu"
        ],
        "points": 2500.0,
        "contestId": 212,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cowboys",
        "tags": [
            "dp",
            "math"
        ],
        "points": 1500.0,
        "contestId": 212,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Polycarpus is Looking for Good Substrings",
        "tags": [
            "bitmasks",
            "hashing",
            "implementation"
        ],
        "points": 2000.0,
        "contestId": 212,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Privatization",
        "tags": [
            "flows",
            "graphs"
        ],
        "points": 3000.0,
        "contestId": 212,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Trails and Glades",
        "tags": [
            "constructive algorithms",
            "dsu",
            "graphs",
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 209,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Pixels",
        "tags": [
            "constructive algorithms",
            "math"
        ],
        "points": 500.0,
        "contestId": 209,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Multicolored Marbles",
        "tags": [
            "dp",
            "math"
        ],
        "points": 500.0,
        "contestId": 209,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Blood Cousins",
        "tags": [
            "binary search",
            "data structures",
            "dfs and similar",
            "trees"
        ],
        "points": 3000.0,
        "contestId": 208,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Prizes, Prizes, more Prizes",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 208,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Police Station",
        "tags": [
            "dp",
            "graphs",
            "shortest paths"
        ],
        "points": 2500.0,
        "contestId": 208,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Solitaire",
        "tags": [
            "dfs and similar",
            "dp"
        ],
        "points": 2000.0,
        "contestId": 208,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dubstep",
        "tags": [
            "strings"
        ],
        "points": 500.0,
        "contestId": 208,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Beaver's Problem - 3",
        "tags": [],
        "points": 10.0,
        "contestId": 207,
        "index": "D9"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Beaver's Problem - 3",
        "tags": [],
        "points": 10.0,
        "contestId": 207,
        "index": "D8"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Beaver's Problem - 3",
        "tags": [],
        "points": 10.0,
        "contestId": 207,
        "index": "D7"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Beaver's Problem - 3",
        "tags": [],
        "points": 10.0,
        "contestId": 207,
        "index": "D6"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Beaver's Problem - 3",
        "tags": [],
        "points": 10.0,
        "contestId": 207,
        "index": "D5"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Beaver's Problem - 3",
        "tags": [],
        "points": 10.0,
        "contestId": 207,
        "index": "D4"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Beaver's Problem - 3",
        "tags": [],
        "points": 10.0,
        "contestId": 207,
        "index": "D3"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Beaver's Problem - 3",
        "tags": [],
        "points": 10.0,
        "contestId": 207,
        "index": "D2"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Beaver's Problem - 3",
        "tags": [],
        "points": 10.0,
        "contestId": 207,
        "index": "D10"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Beaver's Problem - 3",
        "tags": [],
        "points": 10.0,
        "contestId": 207,
        "index": "D1"
    },
    {
        "type": "PROGRAMMING",
        "name": "Game with Two Trees",
        "tags": [
            "data structures"
        ],
        "points": 50.0,
        "contestId": 207,
        "index": "C3"
    },
    {
        "type": "PROGRAMMING",
        "name": "Game with Two Trees",
        "tags": [],
        "points": 30.0,
        "contestId": 207,
        "index": "C2"
    },
    {
        "type": "PROGRAMMING",
        "name": "Game with Two Trees",
        "tags": [],
        "points": 20.0,
        "contestId": 207,
        "index": "C1"
    },
    {
        "type": "PROGRAMMING",
        "name": "Military Trainings",
        "tags": [],
        "points": 50.0,
        "contestId": 207,
        "index": "B3"
    },
    {
        "type": "PROGRAMMING",
        "name": "Military Trainings",
        "tags": [],
        "points": 30.0,
        "contestId": 207,
        "index": "B2"
    },
    {
        "type": "PROGRAMMING",
        "name": "Military Trainings",
        "tags": [],
        "points": 20.0,
        "contestId": 207,
        "index": "B1"
    },
    {
        "type": "PROGRAMMING",
        "name": "Beaver's Calculator 1.0",
        "tags": [
            "greedy"
        ],
        "points": 50.0,
        "contestId": 207,
        "index": "A3"
    },
    {
        "type": "PROGRAMMING",
        "name": "Beaver's Calculator 1.0",
        "tags": [
            "greedy"
        ],
        "points": 30.0,
        "contestId": 207,
        "index": "A2"
    },
    {
        "type": "PROGRAMMING",
        "name": "Beaver's Calculator 1.0",
        "tags": [
            "greedy"
        ],
        "points": 20.0,
        "contestId": 207,
        "index": "A1"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Elephant and Sorting",
        "tags": [
            "brute force",
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 205,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Elephant and Rozdil",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 205,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Elephant and Strings",
        "tags": [
            "data structures",
            "implementation",
            "string suffix structures",
            "two pointers"
        ],
        "points": 2500.0,
        "contestId": 204,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Elephant and Retro Strings",
        "tags": [
            "dp"
        ],
        "points": 2000.0,
        "contestId": 204,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Elephant and Furik and Rubik",
        "tags": [
            "math",
            "probabilities"
        ],
        "points": 1500.0,
        "contestId": 204,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Elephant and Cards",
        "tags": [
            "binary search",
            "data structures"
        ],
        "points": 500.0,
        "contestId": 204,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Elephant and Interval",
        "tags": [
            "binary search",
            "combinatorics",
            "dp"
        ],
        "points": 500.0,
        "contestId": 204,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Transportation",
        "tags": [
            "greedy",
            "sortings",
            "two pointers"
        ],
        "points": 2500.0,
        "contestId": 203,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Hit Ball",
        "tags": [
            "geometry",
            "implementation",
            "math"
        ],
        "points": 2000.0,
        "contestId": 203,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Photographer",
        "tags": [
            "greedy",
            "sortings"
        ],
        "points": 1500.0,
        "contestId": 203,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Game on Paper",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 203,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Two Problems",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 203,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Brand New Easy Problem",
        "tags": [
            "brute force"
        ],
        "points": 1000.0,
        "contestId": 202,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "LLPS",
        "tags": [
            "binary search",
            "bitmasks",
            "brute force",
            "greedy",
            "implementation",
            "strings"
        ],
        "points": 500.0,
        "contestId": 202,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Thoroughly Bureaucratic Organization",
        "tags": [
            "binary search",
            "combinatorics"
        ],
        "points": 2500.0,
        "contestId": 201,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Brand New Problem",
        "tags": [
            "bitmasks",
            "brute force",
            "dp"
        ],
        "points": 2000.0,
        "contestId": 201,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fragile Bridges",
        "tags": [
            "dp"
        ],
        "points": 1500.0,
        "contestId": 201,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Guess That Car!",
        "tags": [
            "math",
            "ternary search"
        ],
        "points": 1000.0,
        "contestId": 201,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Clear Symmetry",
        "tags": [
            "constructive algorithms",
            "dp",
            "math"
        ],
        "points": 1000.0,
        "contestId": 201,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tractor College",
        "tags": [
            "implementation",
            "math",
            "number theory",
            "ternary search"
        ],
        "points": 3000.0,
        "contestId": 200,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Programming Language",
        "tags": [
            "binary search",
            "brute force",
            "expression parsing",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 200,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Football Championship",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 2000.0,
        "contestId": 200,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Drinks",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 200,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cinema",
        "tags": [
            "brute force",
            "data structures"
        ],
        "points": 3000.0,
        "contestId": 200,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Special Olympics",
        "tags": [
            "geometry"
        ],
        "points": 1000.0,
        "contestId": 199,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Hexadecimal's theorem",
        "tags": [
            "brute force",
            "constructive algorithms",
            "implementation",
            "number theory"
        ],
        "points": 500.0,
        "contestId": 199,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Gripping Story",
        "tags": [
            "binary search",
            "data structures",
            "sortings"
        ],
        "points": 2500.0,
        "contestId": 198,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cube Snake",
        "tags": [
            "constructive algorithms"
        ],
        "points": 2000.0,
        "contestId": 198,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Delivering Carcinogen",
        "tags": [
            "binary search",
            "geometry"
        ],
        "points": 1500.0,
        "contestId": 198,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Jumping on Walls",
        "tags": [
            "shortest paths"
        ],
        "points": 1000.0,
        "contestId": 198,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "About Bacteria",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 198,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Limit",
        "tags": [
            "math"
        ],
        "points": 500.0,
        "contestId": 197,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Plate Game",
        "tags": [
            "constructive algorithms",
            "games",
            "math"
        ],
        "points": 1000.0,
        "contestId": 197,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Opening Portals",
        "tags": [
            "dsu",
            "graphs",
            "shortest paths"
        ],
        "points": 2500.0,
        "contestId": 196,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Next Good String",
        "tags": [
            "data structures",
            "greedy",
            "hashing",
            "strings"
        ],
        "points": 3000.0,
        "contestId": 196,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Paint Tree",
        "tags": [
            "divide and conquer",
            "geometry",
            "sortings",
            "trees"
        ],
        "points": 1500.0,
        "contestId": 196,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Infinite Maze",
        "tags": [
            "dfs and similar"
        ],
        "points": 1000.0,
        "contestId": 196,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lexicographically Maximum Subsequence",
        "tags": [
            "greedy"
        ],
        "points": 500.0,
        "contestId": 196,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Building Forest",
        "tags": [
            "data structures",
            "dsu"
        ],
        "points": 2500.0,
        "contestId": 195,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Analyzing Polyline",
        "tags": [
            "math",
            "sortings"
        ],
        "points": 2000.0,
        "contestId": 195,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Try and Catch",
        "tags": [
            "expression parsing",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 195,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "After Training",
        "tags": [
            "data structures",
            "implementation",
            "math"
        ],
        "points": 1000.0,
        "contestId": 195,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Let's Watch Football",
        "tags": [
            "binary search",
            "brute force",
            "math"
        ],
        "points": 500.0,
        "contestId": 195,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Square",
        "tags": [
            "math"
        ],
        "points": 1000.0,
        "contestId": 194,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Exams",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 194,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fibonacci Number",
        "tags": [
            "brute force",
            "math",
            "matrices"
        ],
        "points": 2500.0,
        "contestId": 193,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Two Segments",
        "tags": [
            "data structures"
        ],
        "points": 2000.0,
        "contestId": 193,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Hamming Distance",
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "matrices"
        ],
        "points": 2000.0,
        "contestId": 193,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Xor",
        "tags": [
            "brute force"
        ],
        "points": 1000.0,
        "contestId": 193,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cutting Figure",
        "tags": [
            "2-sat",
            "chinese remainder theorem",
            "trees"
        ],
        "points": 500.0,
        "contestId": 193,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Walking in the Rain",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 192,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Funky Numbers",
        "tags": [
            "binary search",
            "brute force",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 192,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Thwarting Demonstrations",
        "tags": [
            "binary search",
            "data structures",
            "trees"
        ],
        "points": 2500.0,
        "contestId": 191,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Metro Scheme",
        "tags": [
            "graphs",
            "greedy"
        ],
        "points": 2000.0,
        "contestId": 191,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fools and Roads",
        "tags": [
            "data structures",
            "dfs and similar",
            "trees"
        ],
        "points": 1500.0,
        "contestId": 191,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Demonstration",
        "tags": [
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 191,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dynasty Puzzles",
        "tags": [
            "dp"
        ],
        "points": 500.0,
        "contestId": 191,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Counter Attack",
        "tags": [
            "data structures",
            "dsu",
            "graphs",
            "hashing",
            "sortings"
        ],
        "points": 2500.0,
        "contestId": 190,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Non-Secret Cypher",
        "tags": [
            "two pointers"
        ],
        "points": 2000.0,
        "contestId": 190,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "STL",
        "tags": [
            "dfs and similar"
        ],
        "points": 1500.0,
        "contestId": 190,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Surrounded",
        "tags": [
            "geometry"
        ],
        "points": 1000.0,
        "contestId": 190,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vasya and the Bus",
        "tags": [
            "greedy",
            "math"
        ],
        "points": 500.0,
        "contestId": 190,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Counting Rhombi",
        "tags": [
            "brute force",
            "math"
        ],
        "points": 1000.0,
        "contestId": 189,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cut Ribbon",
        "tags": [
            "brute force",
            "dp"
        ],
        "points": 500.0,
        "contestId": 189,
        "index": "A"
    },
    {
        "contestId": 188,
        "name": "Stack",
        "tags": [
            "expression parsing",
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "H"
    },
    {
        "contestId": 188,
        "name": "Array Sorting",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "G"
    },
    {
        "contestId": 188,
        "name": "Binary Notation",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 188,
        "name": "HQ9+",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 188,
        "name": "Asterisks",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 188,
        "name": "LCM",
        "tags": [
            "implementation",
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 188,
        "name": "A + Reverse B",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 188,
        "name": "Hexagonal Numbers",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Heaven Tour",
        "tags": [
            "data structures",
            "greedy"
        ],
        "points": 2500.0,
        "contestId": 187,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "BRT Contract ",
        "tags": [
            "data structures"
        ],
        "points": 2000.0,
        "contestId": 187,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Weak Memory",
        "tags": [
            "dfs and similar",
            "dsu"
        ],
        "points": 1500.0,
        "contestId": 187,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "AlgoRace",
        "tags": [
            "dp",
            "shortest paths"
        ],
        "points": 1000.0,
        "contestId": 187,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Permutations",
        "tags": [
            "greedy"
        ],
        "points": 500.0,
        "contestId": 187,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Growing Mushrooms",
        "tags": [
            "greedy",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 186,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Comparing Strings",
        "tags": [
            "implementation",
            "strings"
        ],
        "points": 500.0,
        "contestId": 186,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Soap Time! - 2",
        "tags": [
            "binary search",
            "data structures"
        ],
        "points": 2500.0,
        "contestId": 185,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Visit of the Great",
        "tags": [
            "math",
            "number theory"
        ],
        "points": 2000.0,
        "contestId": 185,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Clever Fat Rat",
        "tags": [
            "dp"
        ],
        "points": 1500.0,
        "contestId": 185,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Mushroom Scientists",
        "tags": [
            "math",
            "ternary search"
        ],
        "points": 1000.0,
        "contestId": 185,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Plant",
        "tags": [
            "math"
        ],
        "points": 500.0,
        "contestId": 185,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Candy Shop",
        "tags": [
            "greedy"
        ],
        "points": 2500.0,
        "contestId": 183,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "T-shirt",
        "tags": [
            "dp",
            "greedy",
            "probabilities"
        ],
        "points": 2000.0,
        "contestId": 183,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cyclic Coloring",
        "tags": [
            "dfs and similar"
        ],
        "points": 1500.0,
        "contestId": 183,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Zoo",
        "tags": [
            "brute force",
            "geometry"
        ],
        "points": 1000.0,
        "contestId": 183,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Headquarters",
        "tags": [
            "constructive algorithms",
            "math"
        ],
        "points": 500.0,
        "contestId": 183,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Wooden Fence",
        "tags": [
            "dp"
        ],
        "points": 1500.0,
        "contestId": 182,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Common Divisors",
        "tags": [
            "brute force",
            "hashing",
            "implementation",
            "math",
            "strings"
        ],
        "points": 1000.0,
        "contestId": 182,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Optimal Sum",
        "tags": [
            "data structures",
            "greedy"
        ],
        "points": 3000.0,
        "contestId": 182,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vasya's Calendar",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 182,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Battlefield",
        "tags": [
            "geometry",
            "graphs",
            "implementation",
            "shortest paths"
        ],
        "points": 3000.0,
        "contestId": 182,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Number of Triplets",
        "tags": [
            "binary search",
            "brute force"
        ],
        "points": 1000.0,
        "contestId": 181,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Series of Crimes",
        "tags": [
            "brute force",
            "geometry",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 181,
        "index": "A"
    },
    {
        "contestId": 180,
        "name": "Mathematical Analysis Rocks!",
        "tags": [
            "constructive algorithms",
            "implementation",
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 180,
        "name": "Cubes",
        "tags": [
            "binary search",
            "dp",
            "two pointers"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 180,
        "name": "Name",
        "tags": [
            "greedy",
            "strings"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 180,
        "name": "Letter",
        "tags": [
            "dp"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 180,
        "name": "Divisibility Rules",
        "tags": [
            "math",
            "number theory"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 180,
        "name": "Defragmentation",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Representative Sampling",
        "tags": [],
        "points": 50.0,
        "contestId": 178,
        "index": "F3"
    },
    {
        "type": "PROGRAMMING",
        "name": "Representative Sampling",
        "tags": [
            "dp",
            "sortings",
            "strings"
        ],
        "points": 30.0,
        "contestId": 178,
        "index": "F2"
    },
    {
        "type": "PROGRAMMING",
        "name": "Representative Sampling",
        "tags": [],
        "points": 20.0,
        "contestId": 178,
        "index": "F1"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Beaver's Problem - 2",
        "tags": [],
        "points": 50.0,
        "contestId": 178,
        "index": "E3"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Beaver's Problem - 2",
        "tags": [],
        "points": 30.0,
        "contestId": 178,
        "index": "E2"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Beaver's Problem - 2",
        "tags": [],
        "points": 20.0,
        "contestId": 178,
        "index": "E1"
    },
    {
        "type": "PROGRAMMING",
        "name": "Magic Squares",
        "tags": [],
        "points": 50.0,
        "contestId": 178,
        "index": "D3"
    },
    {
        "type": "PROGRAMMING",
        "name": "Magic Squares",
        "tags": [],
        "points": 30.0,
        "contestId": 178,
        "index": "D2"
    },
    {
        "type": "PROGRAMMING",
        "name": "Magic Squares",
        "tags": [],
        "points": 20.0,
        "contestId": 178,
        "index": "D1"
    },
    {
        "type": "PROGRAMMING",
        "name": "Smart Beaver and Resolving Collisions",
        "tags": [],
        "points": 50.0,
        "contestId": 178,
        "index": "C3"
    },
    {
        "type": "PROGRAMMING",
        "name": "Smart Beaver and Resolving Collisions",
        "tags": [],
        "points": 30.0,
        "contestId": 178,
        "index": "C2"
    },
    {
        "type": "PROGRAMMING",
        "name": "Smart Beaver and Resolving Collisions",
        "tags": [],
        "points": 20.0,
        "contestId": 178,
        "index": "C1"
    },
    {
        "type": "PROGRAMMING",
        "name": "Greedy Merchants",
        "tags": [],
        "points": 50.0,
        "contestId": 178,
        "index": "B3"
    },
    {
        "type": "PROGRAMMING",
        "name": "Greedy Merchants",
        "tags": [],
        "points": 30.0,
        "contestId": 178,
        "index": "B2"
    },
    {
        "type": "PROGRAMMING",
        "name": "Greedy Merchants",
        "tags": [],
        "points": 20.0,
        "contestId": 178,
        "index": "B1"
    },
    {
        "type": "PROGRAMMING",
        "name": "Educational Game",
        "tags": [
            "greedy"
        ],
        "points": 50.0,
        "contestId": 178,
        "index": "A3"
    },
    {
        "type": "PROGRAMMING",
        "name": "Educational Game",
        "tags": [
            "greedy"
        ],
        "points": 30.0,
        "contestId": 178,
        "index": "A2"
    },
    {
        "type": "PROGRAMMING",
        "name": "Educational Game",
        "tags": [],
        "points": 20.0,
        "contestId": 178,
        "index": "A1"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fibonacci Strings",
        "tags": [
            "matrices",
            "strings"
        ],
        "points": 70.0,
        "contestId": 177,
        "index": "G2"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fibonacci Strings",
        "tags": [
            "strings"
        ],
        "points": 30.0,
        "contestId": 177,
        "index": "G1"
    },
    {
        "type": "PROGRAMMING",
        "name": "Script Generation",
        "tags": [],
        "points": 70.0,
        "contestId": 177,
        "index": "F2"
    },
    {
        "type": "PROGRAMMING",
        "name": "Script Generation",
        "tags": [],
        "points": 30.0,
        "contestId": 177,
        "index": "F1"
    },
    {
        "type": "PROGRAMMING",
        "name": "Space Voyage",
        "tags": [
            "binary search"
        ],
        "points": 70.0,
        "contestId": 177,
        "index": "E2"
    },
    {
        "type": "PROGRAMMING",
        "name": "Space Voyage",
        "tags": [
            "binary search"
        ],
        "points": 30.0,
        "contestId": 177,
        "index": "E1"
    },
    {
        "type": "PROGRAMMING",
        "name": "Encrypting Messages",
        "tags": [
            "data structures"
        ],
        "points": 70.0,
        "contestId": 177,
        "index": "D2"
    },
    {
        "type": "PROGRAMMING",
        "name": "Encrypting Messages",
        "tags": [
            "brute force"
        ],
        "points": 30.0,
        "contestId": 177,
        "index": "D1"
    },
    {
        "type": "PROGRAMMING",
        "name": "Party",
        "tags": [
            "brute force",
            "dfs and similar",
            "dsu",
            "graphs"
        ],
        "points": 70.0,
        "contestId": 177,
        "index": "C2"
    },
    {
        "type": "PROGRAMMING",
        "name": "Party",
        "tags": [
            "dfs and similar",
            "dsu",
            "graphs"
        ],
        "points": 30.0,
        "contestId": 177,
        "index": "C1"
    },
    {
        "type": "PROGRAMMING",
        "name": "Rectangular Game",
        "tags": [
            "number theory"
        ],
        "points": 70.0,
        "contestId": 177,
        "index": "B2"
    },
    {
        "type": "PROGRAMMING",
        "name": "Rectangular Game",
        "tags": [
            "number theory"
        ],
        "points": 30.0,
        "contestId": 177,
        "index": "B1"
    },
    {
        "type": "PROGRAMMING",
        "name": "Good Matrix Elements",
        "tags": [
            "implementation"
        ],
        "points": 70.0,
        "contestId": 177,
        "index": "A2"
    },
    {
        "type": "PROGRAMMING",
        "name": "Good Matrix Elements",
        "tags": [
            "implementation"
        ],
        "points": 30.0,
        "contestId": 177,
        "index": "A1"
    },
    {
        "type": "PROGRAMMING",
        "name": "Archaeology",
        "tags": [
            "data structures",
            "dfs and similar",
            "trees"
        ],
        "points": 2500.0,
        "contestId": 176,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Hyper String",
        "tags": [
            "dp"
        ],
        "points": 2000.0,
        "contestId": 176,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Playing with Superglue",
        "tags": [
            "combinatorics",
            "constructive algorithms"
        ],
        "points": 1500.0,
        "contestId": 176,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Word Cut",
        "tags": [
            "dp"
        ],
        "points": 1000.0,
        "contestId": 176,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Trading Business",
        "tags": [
            "greedy",
            "sortings"
        ],
        "points": 500.0,
        "contestId": 176,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Gnomes of Might and Magic",
        "tags": [
            "data structures",
            "graphs",
            "implementation",
            "shortest paths"
        ],
        "points": 3000.0,
        "contestId": 175,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "Power Defence",
        "tags": [
            "brute force",
            "dp",
            "greedy"
        ],
        "points": 3000.0,
        "contestId": 175,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Plane of Tanks: Duel",
        "tags": [
            "brute force",
            "dp",
            "probabilities"
        ],
        "points": 2500.0,
        "contestId": 175,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Geometry Horse",
        "tags": [
            "greedy",
            "implementation",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 175,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Plane of Tanks: Pro",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 175,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Robot Bicorn Attack",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 175,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Range Increments",
        "tags": [
            "data structures",
            "greedy"
        ],
        "points": 1500.0,
        "contestId": 174,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "File List",
        "tags": [
            "dp",
            "greedy",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 174,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Problem About Equation",
        "tags": [
            "math"
        ],
        "points": 500.0,
        "contestId": 174,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Camping Groups",
        "tags": [
            "data structures",
            "sortings"
        ],
        "points": 2500.0,
        "contestId": 173,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Deputies",
        "tags": [
            "constructive algorithms",
            "graphs",
            "greedy",
            "implementation"
        ],
        "points": 2000.0,
        "contestId": 173,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Spiral Maximum",
        "tags": [
            "brute force",
            "dp"
        ],
        "points": 1500.0,
        "contestId": 173,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Chamber of Secrets",
        "tags": [
            "dfs and similar",
            "shortest paths"
        ],
        "points": 1000.0,
        "contestId": 173,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Rock-Paper-Scissors",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 173,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "BHTML+BCSS",
        "tags": [
            "dfs and similar",
            "expression parsing"
        ],
        "points": 2000.0,
        "contestId": 172,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Calendar Reform",
        "tags": [
            "number theory"
        ],
        "points": 1500.0,
        "contestId": 172,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bus",
        "tags": [
            "implementation",
            "sortings"
        ],
        "points": 1500.0,
        "contestId": 172,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Pseudorandom Sequence Period",
        "tags": [
            "implementation",
            "number theory"
        ],
        "points": 1000.0,
        "contestId": 172,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Phone Code",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 172,
        "index": "A"
    },
    {
        "contestId": 171,
        "name": "A polyline",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "H"
    },
    {
        "contestId": 171,
        "name": "Mysterious numbers - 2",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "G"
    },
    {
        "contestId": 171,
        "name": "ucyhf",
        "tags": [
            "brute force",
            "implementation",
            "number theory"
        ],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 171,
        "name": "MYSTERIOUS LANGUAGE",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 171,
        "name": "Broken checker",
        "tags": [
            "brute force"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 171,
        "name": "A Piece of Cake",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 171,
        "name": "Star",
        "tags": [
            "combinatorics"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 171,
        "name": "Mysterious numbers - 1",
        "tags": [
            "constructive algorithms"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Replacing Digits",
        "tags": [
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 169,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Chores",
        "tags": [
            "sortings"
        ],
        "points": 500.0,
        "contestId": 169,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Wizards and Minimal Spell",
        "tags": [
            "implementation",
            "strings"
        ],
        "points": 1000.0,
        "contestId": 168,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Wizards and Demonstration",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 168,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Wizards and Bets",
        "tags": [
            "math",
            "matrices"
        ],
        "points": 2500.0,
        "contestId": 167,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Wizards and Roads",
        "tags": [
            "data structures",
            "divide and conquer",
            "graph matchings"
        ],
        "points": 2000.0,
        "contestId": 167,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Wizards and Numbers",
        "tags": [
            "games",
            "math"
        ],
        "points": 1500.0,
        "contestId": 167,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Wizards and Huge Prize",
        "tags": [
            "dp",
            "probabilities"
        ],
        "points": 1000.0,
        "contestId": 167,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Wizards and Trolleybuses",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 167,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tetrahedron",
        "tags": [
            "dp",
            "math",
            "matrices"
        ],
        "points": 1000.0,
        "contestId": 166,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Shoe Store",
        "tags": [
            "dp",
            "graph matchings",
            "greedy",
            "sortings",
            "two pointers"
        ],
        "points": 3000.0,
        "contestId": 166,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Median",
        "tags": [
            "greedy",
            "math",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 166,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Polygons",
        "tags": [
            "geometry",
            "sortings"
        ],
        "points": 3000.0,
        "contestId": 166,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Rank List",
        "tags": [
            "binary search",
            "implementation",
            "sortings"
        ],
        "points": 500.0,
        "contestId": 166,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Compatible Numbers",
        "tags": [
            "bitmasks",
            "brute force",
            "dfs and similar",
            "dp"
        ],
        "points": 2500.0,
        "contestId": 165,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Beard Graph",
        "tags": [
            "data structures",
            "dsu",
            "trees"
        ],
        "points": 2000.0,
        "contestId": 165,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Another Problem on Strings",
        "tags": [
            "binary search",
            "brute force",
            "dp",
            "math",
            "strings",
            "two pointers"
        ],
        "points": 1500.0,
        "contestId": 165,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Burning Midnight Oil",
        "tags": [
            "binary search",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 165,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Supercentral Point",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 165,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Polycarpus and Tasks",
        "tags": [],
        "points": 2500.0,
        "contestId": 164,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Minimum Diameter",
        "tags": [
            "binary search",
            "brute force"
        ],
        "points": 2500.0,
        "contestId": 164,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Machine Programming",
        "tags": [
            "flows"
        ],
        "points": 1500.0,
        "contestId": 164,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ancient Berland Hieroglyphs",
        "tags": [
            "two pointers"
        ],
        "points": 1000.0,
        "contestId": 164,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Variable, or There and Back Again",
        "tags": [
            "dfs and similar",
            "graphs"
        ],
        "points": 500.0,
        "contestId": 164,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "e-Government",
        "tags": [
            "data structures",
            "dfs and similar",
            "dp",
            "strings",
            "trees"
        ],
        "points": 2500.0,
        "contestId": 163,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Large Refrigerator",
        "tags": [
            "brute force"
        ],
        "points": 2000.0,
        "contestId": 163,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Conveyor",
        "tags": [
            "sortings"
        ],
        "points": 1500.0,
        "contestId": 163,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lemmings",
        "tags": [
            "binary search"
        ],
        "points": 1000.0,
        "contestId": 163,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Substring and Subsequence",
        "tags": [
            "dp"
        ],
        "points": 1000.0,
        "contestId": 163,
        "index": "A"
    },
    {
        "contestId": 162,
        "name": "Brackets",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "J"
    },
    {
        "contestId": 162,
        "name": "Truncatable primes",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "I"
    },
    {
        "contestId": 162,
        "name": "Alternating case",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "H"
    },
    {
        "contestId": 162,
        "name": "Non-decimal sum",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "G"
    },
    {
        "contestId": 162,
        "name": "Factorial zeros",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 162,
        "name": "HQ9+",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 162,
        "name": "Remove digits",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 162,
        "name": "Prime factorization",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 162,
        "name": "Binary notation",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 162,
        "name": "Pentagonal numbers",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Polycarpus the Safecracker",
        "tags": [
            "brute force",
            "dp"
        ],
        "points": 2500.0,
        "contestId": 161,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Distance in Tree",
        "tags": [
            "dfs and similar",
            "dp",
            "trees"
        ],
        "points": 2000.0,
        "contestId": 161,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Abracadabra",
        "tags": [
            "divide and conquer"
        ],
        "points": 2000.0,
        "contestId": 161,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Discounts",
        "tags": [
            "constructive algorithms",
            "greedy",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 161,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dress'em in Vests!",
        "tags": [
            "binary search",
            "brute force",
            "greedy",
            "two pointers"
        ],
        "points": 1000.0,
        "contestId": 161,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Buses and People",
        "tags": [
            "binary search",
            "data structures",
            "sortings"
        ],
        "points": 2500.0,
        "contestId": 160,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Edges in MST",
        "tags": [
            "dfs and similar",
            "dsu",
            "graphs",
            "sortings"
        ],
        "points": 2000.0,
        "contestId": 160,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Find Pair",
        "tags": [
            "implementation",
            "math",
            "sortings"
        ],
        "points": 1500.0,
        "contestId": 160,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Unlucky Ticket",
        "tags": [
            "greedy",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 160,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Twins",
        "tags": [
            "greedy",
            "sortings"
        ],
        "points": 500.0,
        "contestId": 160,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Zebra Tower",
        "tags": [
            "data structures",
            "greedy",
            "sortings"
        ],
        "points": 2500.0,
        "contestId": 159,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Palindrome pairs",
        "tags": [
            "brute force",
            "dp",
            "strings"
        ],
        "points": 2000.0,
        "contestId": 159,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "String Manipulation 1.0",
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "strings"
        ],
        "points": 1500.0,
        "contestId": 159,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Matchmaker",
        "tags": [
            "greedy",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 159,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Friends or Not",
        "tags": [
            "greedy",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 159,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Phone Talks",
        "tags": [
            "dp",
            "sortings"
        ],
        "points": 2000.0,
        "contestId": 158,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ice Sculptures",
        "tags": [
            "brute force",
            "number theory"
        ],
        "points": 1500.0,
        "contestId": 158,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cd and pwd commands",
        "tags": [
            "data structures",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 158,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Taxi",
        "tags": [
            "greedy",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 158,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Next Round",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 158,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Trace",
        "tags": [
            "geometry",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 157,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Game Outcome",
        "tags": [
            "brute force"
        ],
        "points": 500.0,
        "contestId": 157,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Mrs. Hudson's Pancakes",
        "tags": [
            "brute force",
            "dp"
        ],
        "points": 2500.0,
        "contestId": 156,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Clues",
        "tags": [
            "combinatorics",
            "graphs"
        ],
        "points": 2500.0,
        "contestId": 156,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cipher",
        "tags": [
            "combinatorics",
            "dp"
        ],
        "points": 1500.0,
        "contestId": 156,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Suspects",
        "tags": [
            "constructive algorithms",
            "data structures",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 156,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Message",
        "tags": [
            "brute force"
        ],
        "points": 500.0,
        "contestId": 156,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Combination",
        "tags": [
            "greedy",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 155,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "I_love_\\%username\\%",
        "tags": [
            "brute force"
        ],
        "points": 500.0,
        "contestId": 155,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Martian Colony",
        "tags": [
            "geometry"
        ],
        "points": 2500.0,
        "contestId": 154,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Flatland Fencing",
        "tags": [
            "games",
            "math"
        ],
        "points": 2000.0,
        "contestId": 154,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Double Profiles",
        "tags": [
            "graphs",
            "hashing",
            "sortings"
        ],
        "points": 1500.0,
        "contestId": 154,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Colliders",
        "tags": [
            "math",
            "number theory"
        ],
        "points": 1000.0,
        "contestId": 154,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Hometask",
        "tags": [
            "greedy"
        ],
        "points": 500.0,
        "contestId": 154,
        "index": "A"
    },
    {
        "contestId": 153,
        "name": "Euclidean Distance",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 153,
        "name": "Date Change",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 153,
        "name": "Caesar Cipher",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 153,
        "name": "Binary notation",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 153,
        "name": "A + B",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Garden",
        "tags": [
            "bitmasks",
            "dp",
            "graphs",
            "trees"
        ],
        "points": 2500.0,
        "contestId": 152,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Frames",
        "tags": [
            "brute force"
        ],
        "points": 2500.0,
        "contestId": 152,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Pocket Book",
        "tags": [
            "combinatorics"
        ],
        "points": 1500.0,
        "contestId": 152,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Steps",
        "tags": [
            "binary search",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 152,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Marks",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 152,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Phone Numbers",
        "tags": [
            "implementation",
            "strings"
        ],
        "points": 1000.0,
        "contestId": 151,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Soft Drinking",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 151,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Freezing with Style",
        "tags": [
            "binary search",
            "data structures",
            "divide and conquer",
            "trees"
        ],
        "points": 3000.0,
        "contestId": 150,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Mission Impassable",
        "tags": [
            "dp"
        ],
        "points": 1500.0,
        "contestId": 150,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Smart Cheater",
        "tags": [
            "data structures",
            "math",
            "probabilities"
        ],
        "points": 1000.0,
        "contestId": 150,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Quantity of Strings",
        "tags": [
            "combinatorics",
            "dfs and similar",
            "math"
        ],
        "points": 500.0,
        "contestId": 150,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Win or Freeze",
        "tags": [
            "games",
            "number theory"
        ],
        "points": 500.0,
        "contestId": 150,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Martian Strings",
        "tags": [
            "string suffix structures",
            "strings"
        ],
        "points": 2500.0,
        "contestId": 149,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Coloring Brackets",
        "tags": [
            "dp"
        ],
        "points": 2500.0,
        "contestId": 149,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Division into Teams",
        "tags": [
            "greedy",
            "math",
            "sortings"
        ],
        "points": 1500.0,
        "contestId": 149,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Martian Clock",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 149,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Business trip",
        "tags": [
            "greedy",
            "implementation",
            "sortings"
        ],
        "points": 500.0,
        "contestId": 149,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Porcelain",
        "tags": [
            "dp"
        ],
        "points": 1000.0,
        "contestId": 148,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bag of mice",
        "tags": [
            "dp",
            "games",
            "math",
            "probabilities"
        ],
        "points": 1000.0,
        "contestId": 148,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Terse princess",
        "tags": [
            "constructive algorithms",
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 148,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Escape",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 1000.0,
        "contestId": 148,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Insomnia cure",
        "tags": [
            "constructive algorithms",
            "implementation",
            "math"
        ],
        "points": 1000.0,
        "contestId": 148,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Smile House",
        "tags": [
            "binary search",
            "graphs",
            "matrices"
        ],
        "points": 1000.0,
        "contestId": 147,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Punctuation",
        "tags": [
            "implementation",
            "strings"
        ],
        "points": 500.0,
        "contestId": 147,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lucky Mask",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 146,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lucky Ticket",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 146,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lucky Queries",
        "tags": [
            "data structures"
        ],
        "points": 2500.0,
        "contestId": 145,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lucky Pair",
        "tags": [
            "combinatorics",
            "data structures",
            "implementation"
        ],
        "points": 2500.0,
        "contestId": 145,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lucky Subsequence",
        "tags": [
            "combinatorics",
            "dp",
            "math"
        ],
        "points": 1500.0,
        "contestId": 145,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lucky Number 2",
        "tags": [
            "constructive algorithms"
        ],
        "points": 1000.0,
        "contestId": 145,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lucky Conversion",
        "tags": [
            "greedy",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 145,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Competition",
        "tags": [
            "data structures",
            "greedy"
        ],
        "points": 2500.0,
        "contestId": 144,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Missile Silos",
        "tags": [
            "data structures",
            "dfs and similar",
            "graphs",
            "shortest paths"
        ],
        "points": 2000.0,
        "contestId": 144,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Anagram Search",
        "tags": [
            "implementation",
            "strings"
        ],
        "points": 1500.0,
        "contestId": 144,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Meeting",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 144,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Arrival of the General",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 144,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Help Kingdom of Far Far Away 2",
        "tags": [
            "implementation",
            "strings"
        ],
        "points": 1000.0,
        "contestId": 143,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Help Vasilisa the Wise 2",
        "tags": [
            "brute force",
            "math"
        ],
        "points": 500.0,
        "contestId": 143,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Help Greg the Dwarf 2",
        "tags": [
            "geometry"
        ],
        "points": 2500.0,
        "contestId": 142,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Help Shrek and Donkey 2",
        "tags": [
            "games"
        ],
        "points": 2000.0,
        "contestId": 142,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Help Caretaker",
        "tags": [
            "brute force",
            "dp"
        ],
        "points": 1500.0,
        "contestId": 142,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Help General",
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 142,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Help Farmer",
        "tags": [
            "brute force",
            "math"
        ],
        "points": 500.0,
        "contestId": 142,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Clearing Up",
        "tags": [
            "constructive algorithms",
            "dp",
            "dsu",
            "graphs"
        ],
        "points": 2500.0,
        "contestId": 141,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Take-off Ramps",
        "tags": [
            "graphs",
            "shortest paths"
        ],
        "points": 2000.0,
        "contestId": 141,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Queue",
        "tags": [
            "constructive algorithms",
            "greedy",
            "sortings"
        ],
        "points": 2000.0,
        "contestId": 141,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Hopscotch",
        "tags": [
            "geometry",
            "math"
        ],
        "points": 1000.0,
        "contestId": 141,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Amusing Joke",
        "tags": [
            "implementation",
            "sortings",
            "strings"
        ],
        "points": 500.0,
        "contestId": 141,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "New Year Snowflake",
        "tags": [
            "geometry",
            "sortings"
        ],
        "points": 3000.0,
        "contestId": 140,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "New Year Garland",
        "tags": [
            "combinatorics",
            "dp"
        ],
        "points": 2500.0,
        "contestId": 140,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "New Year Contest",
        "tags": [
            "greedy",
            "sortings"
        ],
        "points": 2000.0,
        "contestId": 140,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "New Year Snowmen",
        "tags": [
            "binary search",
            "data structures",
            "greedy"
        ],
        "points": 1500.0,
        "contestId": 140,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "New Year Cards",
        "tags": [
            "brute force",
            "greedy",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 140,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "New Year Table",
        "tags": [
            "geometry",
            "math"
        ],
        "points": 500.0,
        "contestId": 140,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Wallpaper",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 1000.0,
        "contestId": 139,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Petr and Book",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 139,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Hellish Constraints",
        "tags": [
            "brute force",
            "dp",
            "two pointers"
        ],
        "points": 2500.0,
        "contestId": 138,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "World of Darkraft",
        "tags": [
            "dp",
            "games"
        ],
        "points": 2000.0,
        "contestId": 138,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Mushroom Gnomes - 2",
        "tags": [
            "binary search",
            "data structures",
            "probabilities",
            "sortings"
        ],
        "points": 2000.0,
        "contestId": 138,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Digits Permutations",
        "tags": [
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 138,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Literature Lesson",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 138,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Last Chance",
        "tags": [
            "data structures",
            "implementation"
        ],
        "points": 2500.0,
        "contestId": 137,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Palindromes",
        "tags": [
            "dp"
        ],
        "points": 2000.0,
        "contestId": 137,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "History",
        "tags": [
            "sortings"
        ],
        "points": 1500.0,
        "contestId": 137,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Permutation",
        "tags": [
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 137,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Postcards and photos",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 137,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ternary Logic",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 1000.0,
        "contestId": 136,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Presents",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 136,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Weak Subsequence",
        "tags": [
            "combinatorics"
        ],
        "points": 2500.0,
        "contestId": 135,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cycle",
        "tags": [
            "brute force",
            "dfs and similar",
            "implementation"
        ],
        "points": 2000.0,
        "contestId": 135,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Zero-One",
        "tags": [
            "constructive algorithms",
            "games",
            "greedy"
        ],
        "points": 1500.0,
        "contestId": 135,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Rectangle and Square",
        "tags": [
            "brute force",
            "geometry",
            "math"
        ],
        "points": 1000.0,
        "contestId": 135,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Replacement",
        "tags": [
            "implementation",
            "sortings"
        ],
        "points": 500.0,
        "contestId": 135,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Swaps",
        "tags": [
            "constructive algorithms",
            "graphs",
            "greedy"
        ],
        "points": 1500.0,
        "contestId": 134,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Pairs of Numbers",
        "tags": [
            "brute force",
            "dfs and similar",
            "math",
            "number theory"
        ],
        "points": 1000.0,
        "contestId": 134,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Average Numbers",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 134,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Unary",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 133,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "HQ9+",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 133,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bits of merry old England",
        "tags": [
            "flows"
        ],
        "points": 2500.0,
        "contestId": 132,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Constants in the language of Shakespeare",
        "tags": [
            "constructive algorithms",
            "dp",
            "greedy"
        ],
        "points": 2000.0,
        "contestId": 132,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Logo Turtle",
        "tags": [
            "dp"
        ],
        "points": 1500.0,
        "contestId": 132,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Piet",
        "tags": [
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 132,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Turing Tape",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 132,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Present to Mom",
        "tags": [
            "binary search",
            "two pointers"
        ],
        "points": 2500.0,
        "contestId": 131,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "Yet Another Task with Queens",
        "tags": [
            "sortings"
        ],
        "points": 2500.0,
        "contestId": 131,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Subway",
        "tags": [
            "dfs and similar",
            "graphs"
        ],
        "points": 2000.0,
        "contestId": 131,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "The World is a Theatre",
        "tags": [
            "combinatorics",
            "math"
        ],
        "points": 1500.0,
        "contestId": 131,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Opposites Attract",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 1000.0,
        "contestId": 131,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "cAPS lOCK",
        "tags": [
            "implementation",
            "strings"
        ],
        "points": 500.0,
        "contestId": 131,
        "index": "A"
    },
    {
        "contestId": 130,
        "name": "Date calculation",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "J"
    },
    {
        "contestId": 130,
        "name": "Array sorting",
        "tags": [
            "sortings"
        ],
        "type": "PROGRAMMING",
        "index": "I"
    },
    {
        "contestId": 130,
        "name": "Balanced brackets",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "H"
    },
    {
        "contestId": 130,
        "name": "CAPS LOCK ON",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "G"
    },
    {
        "contestId": 130,
        "name": "Prime factorization",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 130,
        "name": "Tribonacci numbers",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 130,
        "name": "Exponentiation",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 130,
        "name": "Decimal sum",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 130,
        "name": "Gnikool Ssalg",
        "tags": [
            "implementation",
            "strings"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 130,
        "name": "Hexagonal numbers",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Students and Shoelaces",
        "tags": [
            "brute force",
            "dfs and similar",
            "graphs"
        ],
        "points": 1000.0,
        "contestId": 129,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cookies",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 129,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Birthday",
        "tags": [
            "geometry",
            "math"
        ],
        "points": 2500.0,
        "contestId": 128,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Numbers",
        "tags": [
            "constructive algorithms"
        ],
        "points": 2000.0,
        "contestId": 128,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Games with Rectangle",
        "tags": [
            "combinatorics",
            "dp"
        ],
        "points": 1500.0,
        "contestId": 128,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "String",
        "tags": [
            "brute force",
            "constructive algorithms",
            "hashing",
            "string suffix structures",
            "strings"
        ],
        "points": 1500.0,
        "contestId": 128,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Statues",
        "tags": [
            "dfs and similar"
        ],
        "points": 1000.0,
        "contestId": 128,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Canvas Frames",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 127,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Wasted Time",
        "tags": [
            "geometry"
        ],
        "points": 500.0,
        "contestId": 127,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Pills",
        "tags": [
            "brute force",
            "flows"
        ],
        "points": 2500.0,
        "contestId": 126,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fibonacci Sums",
        "tags": [
            "dp",
            "math"
        ],
        "points": 2000.0,
        "contestId": 126,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "E-reader Display",
        "tags": [
            "constructive algorithms",
            "greedy"
        ],
        "points": 1500.0,
        "contestId": 126,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Password",
        "tags": [
            "binary search",
            "dp",
            "hashing",
            "string suffix structures",
            "strings"
        ],
        "points": 1000.0,
        "contestId": 126,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Hot Bath",
        "tags": [
            "binary search",
            "brute force",
            "math"
        ],
        "points": 500.0,
        "contestId": 126,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "MST Company",
        "tags": [
            "binary search",
            "graphs"
        ],
        "points": 5000.0,
        "contestId": 125,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Two progressions",
        "tags": [
            "constructive algorithms",
            "greedy"
        ],
        "points": 3000.0,
        "contestId": 125,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Hobbits' Party",
        "tags": [
            "constructive algorithms",
            "greedy"
        ],
        "points": 2000.0,
        "contestId": 125,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Simple XML",
        "tags": [
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 125,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Measuring Lengths in Baden",
        "tags": [
            "math"
        ],
        "points": 1000.0,
        "contestId": 125,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Permutations",
        "tags": [
            "brute force",
            "combinatorics",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 124,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "The number of positions",
        "tags": [
            "math"
        ],
        "points": 500.0,
        "contestId": 124,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Maze",
        "tags": [
            "dfs and similar",
            "dp",
            "probabilities",
            "trees"
        ],
        "points": 2500.0,
        "contestId": 123,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "String",
        "tags": [
            "string suffix structures"
        ],
        "points": 2000.0,
        "contestId": 123,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Brackets",
        "tags": [
            "combinatorics",
            "dp",
            "greedy"
        ],
        "points": 1500.0,
        "contestId": 123,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Squares",
        "tags": [
            "math"
        ],
        "points": 1000.0,
        "contestId": 123,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Prime Permutation",
        "tags": [
            "implementation",
            "number theory",
            "strings"
        ],
        "points": 1000.0,
        "contestId": 123,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lucky Substring",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 122,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lucky Division",
        "tags": [
            "brute force",
            "number theory"
        ],
        "points": 500.0,
        "contestId": 122,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lucky Array",
        "tags": [
            "data structures"
        ],
        "points": 2500.0,
        "contestId": 121,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lucky Segments",
        "tags": [
            "binary search",
            "implementation",
            "two pointers"
        ],
        "points": 2000.0,
        "contestId": 121,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lucky Permutation",
        "tags": [
            "brute force",
            "combinatorics",
            "number theory"
        ],
        "points": 1500.0,
        "contestId": 121,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lucky Transformation",
        "tags": [
            "strings"
        ],
        "points": 1000.0,
        "contestId": 121,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lucky Sum",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 121,
        "index": "A"
    },
    {
        "contestId": 120,
        "name": "Minimum Sum",
        "tags": [
            "divide and conquer",
            "geometry",
            "sortings"
        ],
        "type": "PROGRAMMING",
        "index": "J"
    },
    {
        "contestId": 120,
        "name": "Luck is in Numbers",
        "tags": [
            "greedy"
        ],
        "type": "PROGRAMMING",
        "index": "I"
    },
    {
        "contestId": 120,
        "name": "Brevity is Soul of Wit",
        "tags": [
            "graph matchings"
        ],
        "type": "PROGRAMMING",
        "index": "H"
    },
    {
        "contestId": 120,
        "name": "Boom",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "G"
    },
    {
        "contestId": 120,
        "name": "Spiders",
        "tags": [
            "dp",
            "greedy",
            "trees"
        ],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 120,
        "name": "Put Knight!",
        "tags": [
            "games"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 120,
        "name": "Three Sons",
        "tags": [
            "brute force"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 120,
        "name": "Winnie-the-Pooh and honey",
        "tags": [
            "implementation",
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 120,
        "name": "Quiz League",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 120,
        "name": "Elevator",
        "tags": [
            "brute force",
            "implementation",
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Alternative Reality",
        "tags": [
            "geometry"
        ],
        "points": 2500.0,
        "contestId": 119,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "String Transformation",
        "tags": [
            "hashing",
            "strings"
        ],
        "points": 2000.0,
        "contestId": 119,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Education Reform",
        "tags": [
            "dp"
        ],
        "points": 1500.0,
        "contestId": 119,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Before Exam",
        "tags": [
            "constructive algorithms",
            "implementation",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 119,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Epic Game",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 119,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bertown roads",
        "tags": [
            "dfs and similar",
            "graphs"
        ],
        "points": 2500.0,
        "contestId": 118,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Caesar's Legions",
        "tags": [
            "dp"
        ],
        "points": 2000.0,
        "contestId": 118,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fancy Number",
        "tags": [
            "brute force",
            "greedy",
            "sortings",
            "strings"
        ],
        "points": 1500.0,
        "contestId": 118,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Present from Lena",
        "tags": [
            "constructive algorithms",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 118,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "String Task",
        "tags": [
            "implementation",
            "strings"
        ],
        "points": 500.0,
        "contestId": 118,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tree or not Tree",
        "tags": [
            "data structures",
            "divide and conquer",
            "implementation",
            "trees"
        ],
        "points": 2500.0,
        "contestId": 117,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Not Quick Transformation",
        "tags": [
            "divide and conquer",
            "math"
        ],
        "points": 2000.0,
        "contestId": 117,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cycle",
        "tags": [
            "dfs and similar",
            "graphs"
        ],
        "points": 1500.0,
        "contestId": 117,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Very Interesting Game",
        "tags": [
            "brute force",
            "number theory"
        ],
        "points": 1000.0,
        "contestId": 117,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Elevator",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 117,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Pigs and Wolves",
        "tags": [
            "greedy",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 116,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tram",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 116,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Linear Kingdom Races",
        "tags": [
            "data structures",
            "dp"
        ],
        "points": 2500.0,
        "contestId": 115,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Unambiguous Arithmetic Expression",
        "tags": [
            "dp",
            "expression parsing"
        ],
        "points": 2000.0,
        "contestId": 115,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Plumber",
        "tags": [
            "math"
        ],
        "points": 1500.0,
        "contestId": 115,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lawnmower",
        "tags": [
            "greedy",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 115,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Party",
        "tags": [
            "dfs and similar",
            "graphs",
            "trees"
        ],
        "points": 500.0,
        "contestId": 115,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "PFAST Inc.",
        "tags": [
            "bitmasks",
            "brute force"
        ],
        "points": 1000.0,
        "contestId": 114,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cifera",
        "tags": [
            "math"
        ],
        "points": 500.0,
        "contestId": 114,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sleeping",
        "tags": [
            "combinatorics",
            "implementation",
            "math"
        ],
        "points": 2500.0,
        "contestId": 113,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Museum",
        "tags": [
            "matrices",
            "probabilities"
        ],
        "points": 2000.0,
        "contestId": 113,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Double Happiness",
        "tags": [
            "brute force",
            "number theory"
        ],
        "points": 1500.0,
        "contestId": 113,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Petr#",
        "tags": [
            "brute force",
            "data structures",
            "hashing",
            "strings"
        ],
        "points": 1000.0,
        "contestId": 113,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Grammar Lessons",
        "tags": [
            "implementation",
            "strings"
        ],
        "points": 500.0,
        "contestId": 113,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Petya and Square",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 1000.0,
        "contestId": 112,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Petya and Strings",
        "tags": [
            "implementation",
            "strings"
        ],
        "points": 500.0,
        "contestId": 112,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Petya and Rectangle",
        "tags": [],
        "points": 2500.0,
        "contestId": 111,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Petya and Coloring",
        "tags": [
            "combinatorics",
            "dp"
        ],
        "points": 2000.0,
        "contestId": 111,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Petya and Spiders",
        "tags": [
            "bitmasks",
            "dp",
            "dsu"
        ],
        "points": 1500.0,
        "contestId": 111,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Petya and Divisors",
        "tags": [
            "binary search",
            "data structures",
            "number theory"
        ],
        "points": 1000.0,
        "contestId": 111,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Petya and Inequiations",
        "tags": [
            "greedy"
        ],
        "points": 500.0,
        "contestId": 111,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lucky String",
        "tags": [
            "constructive algorithms",
            "strings"
        ],
        "points": 1000.0,
        "contestId": 110,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Nearly Lucky Number",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 110,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lucky Interval",
        "tags": [
            "brute force",
            "math"
        ],
        "points": 2500.0,
        "contestId": 109,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lucky Sorting",
        "tags": [
            "constructive algorithms",
            "sortings"
        ],
        "points": 2000.0,
        "contestId": 109,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lucky Tree",
        "tags": [
            "dp",
            "dsu",
            "trees"
        ],
        "points": 1500.0,
        "contestId": 109,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lucky Probability",
        "tags": [
            "brute force",
            "probabilities"
        ],
        "points": 1000.0,
        "contestId": 109,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lucky Sum of Digits",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 109,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Datatypes",
        "tags": [
            "math",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 108,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Palindromic Times",
        "tags": [
            "implementation",
            "strings"
        ],
        "points": 500.0,
        "contestId": 108,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Darts",
        "tags": [
            "geometry",
            "probabilities"
        ],
        "points": 2500.0,
        "contestId": 107,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Crime Management",
        "tags": [
            "dp",
            "matrices"
        ],
        "points": 2000.0,
        "contestId": 107,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Arrangement",
        "tags": [
            "bitmasks",
            "dp"
        ],
        "points": 1500.0,
        "contestId": 107,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Basketball Team",
        "tags": [
            "combinatorics",
            "dp",
            "probabilities"
        ],
        "points": 1000.0,
        "contestId": 107,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dorm Water Supply",
        "tags": [
            "dfs and similar",
            "graphs"
        ],
        "points": 500.0,
        "contestId": 107,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Space Rescuers",
        "tags": [
            "geometry",
            "ternary search"
        ],
        "points": 2500.0,
        "contestId": 106,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Treasure Island",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 2000.0,
        "contestId": 106,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Buns",
        "tags": [
            "chinese remainder theorem",
            "geometry"
        ],
        "points": 1500.0,
        "contestId": 106,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Choosing Laptop",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 106,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Card Game",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 106,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lift and Throw",
        "tags": [
            "brute force"
        ],
        "points": 2500.0,
        "contestId": 105,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Entertaining Geodetics",
        "tags": [
            "brute force",
            "dsu",
            "implementation"
        ],
        "points": 2000.0,
        "contestId": 105,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Item World",
        "tags": [
            "brute force",
            "implementation",
            "sortings"
        ],
        "points": 1500.0,
        "contestId": 105,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dark Assembly",
        "tags": [
            "brute force",
            "probabilities"
        ],
        "points": 1000.0,
        "contestId": 105,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Transmigration",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 105,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Blackjack",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 104,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Buying Sets",
        "tags": [
            "flows",
            "graph matchings"
        ],
        "points": 2500.0,
        "contestId": 103,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Time to Raid Cowavans",
        "tags": [
            "brute force",
            "data structures",
            "sortings"
        ],
        "points": 2000.0,
        "contestId": 103,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Russian Roulette",
        "tags": [
            "constructive algorithms",
            "greedy"
        ],
        "points": 1500.0,
        "contestId": 103,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cthulhu",
        "tags": [
            "dfs and similar",
            "dsu",
            "graphs"
        ],
        "points": 1000.0,
        "contestId": 103,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Testing Pants for Sadness",
        "tags": [
            "greedy",
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 103,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sum of Digits",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 102,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Clothes",
        "tags": [
            "brute force"
        ],
        "points": 500.0,
        "contestId": 102,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Candies and Stones",
        "tags": [
            "divide and conquer",
            "dp"
        ],
        "points": 2500.0,
        "contestId": 101,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Castle",
        "tags": [
            "dp",
            "greedy",
            "probabilities",
            "sortings",
            "trees"
        ],
        "points": 2000.0,
        "contestId": 101,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vectors",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 1500.0,
        "contestId": 101,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Buses",
        "tags": [
            "binary search",
            "data structures",
            "dp"
        ],
        "points": 1000.0,
        "contestId": 101,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Homework",
        "tags": [
            "greedy"
        ],
        "points": 500.0,
        "contestId": 101,
        "index": "A"
    },
    {
        "contestId": 100,
        "name": "Interval Coloring",
        "tags": [
            "greedy",
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "J"
    },
    {
        "contestId": 100,
        "name": "Rotation",
        "tags": [
            "geometry",
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "I"
    },
    {
        "contestId": 100,
        "name": "Battleship",
        "tags": [
            "dfs and similar",
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "H"
    },
    {
        "contestId": 100,
        "name": "Name the album",
        "tags": [
            "data structures",
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "G"
    },
    {
        "contestId": 100,
        "name": "Polynom",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 100,
        "name": "Lamps in a Line",
        "tags": [
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 100,
        "name": "World of Mouth",
        "tags": [
            "strings"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 100,
        "name": "A+B",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 100,
        "name": "Friendly Numbers",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 100,
        "name": "Carpeting the Room",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Help Chef Gerasim",
        "tags": [
            "implementation",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 99,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Help Far Away Kingdom",
        "tags": [
            "strings"
        ],
        "points": 500.0,
        "contestId": 99,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Help Shrek and Donkey",
        "tags": [
            "dp",
            "games",
            "math",
            "probabilities"
        ],
        "points": 2500.0,
        "contestId": 98,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Help Monks",
        "tags": [
            "constructive algorithms"
        ],
        "points": 2000.0,
        "contestId": 98,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Help Greg the Dwarf",
        "tags": [
            "geometry",
            "ternary search"
        ],
        "points": 1500.0,
        "contestId": 98,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Help King",
        "tags": [
            "implementation",
            "probabilities",
            "trees"
        ],
        "points": 1000.0,
        "contestId": 98,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Help Victoria the Wise",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 98,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Leaders",
        "tags": [
            "dfs and similar",
            "dsu",
            "graphs",
            "trees"
        ],
        "points": 2500.0,
        "contestId": 97,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Robot in Basement",
        "tags": [
            "bitmasks",
            "brute force",
            "implementation"
        ],
        "points": 2000.0,
        "contestId": 97,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Winning Strategy",
        "tags": [
            "binary search",
            "graphs",
            "math",
            "shortest paths"
        ],
        "points": 2000.0,
        "contestId": 97,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Superset",
        "tags": [
            "constructive algorithms",
            "divide and conquer"
        ],
        "points": 1500.0,
        "contestId": 97,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Domino",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 97,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lucky Numbers (easy)",
        "tags": [
            "binary search",
            "bitmasks",
            "brute force"
        ],
        "points": 1000.0,
        "contestId": 96,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Football",
        "tags": [
            "implementation",
            "strings"
        ],
        "points": 500.0,
        "contestId": 96,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lucky Country",
        "tags": [
            "dp",
            "dsu",
            "graphs"
        ],
        "points": 2500.0,
        "contestId": 95,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Horse Races",
        "tags": [
            "dp",
            "math"
        ],
        "points": 2000.0,
        "contestId": 95,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Volleyball",
        "tags": [
            "shortest paths"
        ],
        "points": 1500.0,
        "contestId": 95,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lucky Numbers",
        "tags": [
            "dp",
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 95,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Hockey",
        "tags": [
            "implementation",
            "strings"
        ],
        "points": 500.0,
        "contestId": 95,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Friends",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 1000.0,
        "contestId": 94,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Restoring Password",
        "tags": [
            "implementation",
            "strings"
        ],
        "points": 500.0,
        "contestId": 94,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lostborn",
        "tags": [
            "dp",
            "math"
        ],
        "points": 2500.0,
        "contestId": 93,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Flags",
        "tags": [
            "dp",
            "math",
            "matrices"
        ],
        "points": 2000.0,
        "contestId": 93,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Azembler",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 93,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "End of Exams",
        "tags": [
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 93,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Frames",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 93,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Binary Number",
        "tags": [
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 92,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Chips",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 92,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Igloo Skyscraper",
        "tags": [
            "data structures",
            "geometry"
        ],
        "points": 2500.0,
        "contestId": 91,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Grocer's Problem",
        "tags": [
            "constructive algorithms",
            "graphs",
            "greedy"
        ],
        "points": 2500.0,
        "contestId": 91,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ski Base",
        "tags": [
            "combinatorics",
            "dsu",
            "graphs"
        ],
        "points": 1500.0,
        "contestId": 91,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Queue",
        "tags": [
            "binary search",
            "data structures"
        ],
        "points": 1000.0,
        "contestId": 91,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Newspaper Headline",
        "tags": [
            "greedy",
            "strings"
        ],
        "points": 500.0,
        "contestId": 91,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "African Crossword",
        "tags": [
            "implementation",
            "strings"
        ],
        "points": 1000.0,
        "contestId": 90,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cableway",
        "tags": [
            "greedy",
            "math"
        ],
        "points": 500.0,
        "contestId": 90,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fire and Ice",
        "tags": [
            "greedy"
        ],
        "points": 2500.0,
        "contestId": 89,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Space mines",
        "tags": [
            "geometry"
        ],
        "points": 1500.0,
        "contestId": 89,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Chip Play",
        "tags": [
            "brute force",
            "data structures",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 89,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Widget Library",
        "tags": [
            "dp",
            "expression parsing",
            "graphs",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 89,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Robbery",
        "tags": [
            "greedy"
        ],
        "points": 500.0,
        "contestId": 89,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Keyboard",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 88,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Chord",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 88,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Mogohu-Rea Idol",
        "tags": [
            "geometry"
        ],
        "points": 2500.0,
        "contestId": 87,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Beautiful Road",
        "tags": [
            "dfs and similar",
            "dp",
            "dsu",
            "implementation",
            "sortings",
            "trees"
        ],
        "points": 2000.0,
        "contestId": 87,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Interesting Game",
        "tags": [
            "dp",
            "games"
        ],
        "points": 1500.0,
        "contestId": 87,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vasya and Types",
        "tags": [
            "implementation",
            "strings"
        ],
        "points": 1000.0,
        "contestId": 87,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Trains",
        "tags": [
            "math"
        ],
        "points": 500.0,
        "contestId": 87,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Long sequence",
        "tags": [
            "brute force",
            "math",
            "matrices"
        ],
        "points": 2500.0,
        "contestId": 86,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Powerful array",
        "tags": [
            "data structures",
            "implementation",
            "math",
            "two pointers"
        ],
        "points": 2500.0,
        "contestId": 86,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Genetic engineering",
        "tags": [
            "dp",
            "string suffix structures",
            "trees"
        ],
        "points": 2000.0,
        "contestId": 86,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tetris revisited",
        "tags": [
            "constructive algorithms",
            "graph matchings",
            "greedy",
            "math"
        ],
        "points": 1000.0,
        "contestId": 86,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Reflection",
        "tags": [
            "math"
        ],
        "points": 500.0,
        "contestId": 86,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Guard Towers",
        "tags": [
            "binary search",
            "dsu",
            "geometry",
            "graphs",
            "sortings"
        ],
        "points": 2500.0,
        "contestId": 85,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sum of Medians",
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "implementation"
        ],
        "points": 2000.0,
        "contestId": 85,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Petya and Tree",
        "tags": [
            "binary search",
            "dfs and similar",
            "probabilities",
            "sortings",
            "trees"
        ],
        "points": 1500.0,
        "contestId": 85,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Embassy Queue",
        "tags": [
            "data structures"
        ],
        "points": 1000.0,
        "contestId": 85,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Domino",
        "tags": [
            "constructive algorithms",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 85,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Biathlon",
        "tags": [
            "binary search",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 84,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Toy Army",
        "tags": [
            "math",
            "number theory"
        ],
        "points": 500.0,
        "contestId": 84,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Two Subsequences",
        "tags": [
            "bitmasks",
            "dp"
        ],
        "points": 2500.0,
        "contestId": 83,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Numbers",
        "tags": [
            "dp",
            "math",
            "number theory"
        ],
        "points": 2000.0,
        "contestId": 83,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Track",
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ],
        "points": 1500.0,
        "contestId": 83,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Doctor",
        "tags": [
            "binary search",
            "math",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 83,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Magical Array",
        "tags": [
            "math"
        ],
        "points": 500.0,
        "contestId": 83,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Corridor",
        "tags": [
            "geometry"
        ],
        "points": 2500.0,
        "contestId": 82,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Two out of Three",
        "tags": [
            "dp"
        ],
        "points": 2000.0,
        "contestId": 82,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "General Mobilization",
        "tags": [
            "data structures",
            "dfs and similar",
            "sortings"
        ],
        "points": 1500.0,
        "contestId": 82,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sets",
        "tags": [
            "constructive algorithms",
            "hashing",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 82,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Double Cola",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 82,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Pairs",
        "tags": [
            "dfs and similar",
            "dp",
            "dsu",
            "graphs",
            "implementation",
            "trees"
        ],
        "points": 2500.0,
        "contestId": 81,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Polycarp's Picture Gallery",
        "tags": [
            "constructive algorithms",
            "greedy"
        ],
        "points": 2000.0,
        "contestId": 81,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Average Score",
        "tags": [
            "math",
            "sortings"
        ],
        "points": 1500.0,
        "contestId": 81,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sequence Formatting",
        "tags": [
            "implementation",
            "strings"
        ],
        "points": 1000.0,
        "contestId": 81,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Plug-in",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 81,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Depression",
        "tags": [
            "geometry",
            "math"
        ],
        "points": 1000.0,
        "contestId": 80,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Panoramix's Prediction",
        "tags": [
            "brute force"
        ],
        "points": 500.0,
        "contestId": 80,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Security System",
        "tags": [
            "math"
        ],
        "points": 2500.0,
        "contestId": 79,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Password",
        "tags": [
            "bitmasks",
            "dp",
            "shortest paths"
        ],
        "points": 2000.0,
        "contestId": 79,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Beaver",
        "tags": [
            "data structures",
            "dp",
            "greedy",
            "hashing",
            "strings",
            "two pointers"
        ],
        "points": 1500.0,
        "contestId": 79,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Colorful Field",
        "tags": [
            "implementation",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 79,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bus Game",
        "tags": [
            "greedy"
        ],
        "points": 500.0,
        "contestId": 79,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Evacuation",
        "tags": [
            "flows",
            "graphs",
            "shortest paths"
        ],
        "points": 2500.0,
        "contestId": 78,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Archer's Shot",
        "tags": [
            "binary search",
            "geometry",
            "math",
            "two pointers"
        ],
        "points": 2000.0,
        "contestId": 78,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Beaver Game",
        "tags": [
            "dp",
            "games",
            "number theory"
        ],
        "points": 1500.0,
        "contestId": 78,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Easter Eggs",
        "tags": [
            "constructive algorithms",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 78,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Haiku",
        "tags": [
            "implementation",
            "strings"
        ],
        "points": 500.0,
        "contestId": 78,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Martian Food",
        "tags": [
            "geometry"
        ],
        "points": 2000.0,
        "contestId": 77,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Domino Carpet",
        "tags": [
            "dp",
            "implementation"
        ],
        "points": 2000.0,
        "contestId": 77,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Beavermuncher-0xFF",
        "tags": [
            "dfs and similar",
            "dp",
            "dsu",
            "greedy",
            "trees"
        ],
        "points": 1500.0,
        "contestId": 77,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Falling Anvils",
        "tags": [
            "math",
            "probabilities"
        ],
        "points": 1000.0,
        "contestId": 77,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Heroes",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 77,
        "index": "A"
    },
    {
        "contestId": 76,
        "name": "Tourist",
        "tags": [
            "binary search",
            "data structures",
            "dp"
        ],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 76,
        "name": "Points",
        "tags": [
            "implementation",
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 76,
        "name": "Plus and xor",
        "tags": [
            "dp",
            "greedy",
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 76,
        "name": "Mutation",
        "tags": [
            "bitmasks",
            "dp",
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 76,
        "name": "Mice",
        "tags": [
            "greedy",
            "two pointers"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 76,
        "name": "Gift",
        "tags": [
            "dsu",
            "graphs",
            "sortings",
            "trees"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ship's Shortest Path",
        "tags": [
            "geometry",
            "shortest paths"
        ],
        "points": 2500.0,
        "contestId": 75,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Big Maximum Sum",
        "tags": [
            "data structures",
            "dp",
            "greedy",
            "implementation",
            "math",
            "trees"
        ],
        "points": 2000.0,
        "contestId": 75,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Modified GCD",
        "tags": [
            "binary search",
            "number theory"
        ],
        "points": 1500.0,
        "contestId": 75,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Facetook Priority Wall",
        "tags": [
            "expression parsing",
            "implementation",
            "strings"
        ],
        "points": 1000.0,
        "contestId": 75,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Life Without Zeros",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 75,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Shift It!",
        "tags": [
            "constructive algorithms"
        ],
        "points": 2500.0,
        "contestId": 74,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Hanger",
        "tags": [
            "data structures"
        ],
        "points": 2000.0,
        "contestId": 74,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Chessboard Billiard",
        "tags": [
            "dfs and similar",
            "dsu",
            "graphs",
            "number theory"
        ],
        "points": 1500.0,
        "contestId": 74,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Train",
        "tags": [
            "dp",
            "games",
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 74,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Room Leader",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 74,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Plane of Tanks",
        "tags": [
            "brute force",
            "geometry"
        ],
        "points": 2000.0,
        "contestId": 73,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "Morrowindows",
        "tags": [
            "math",
            "number theory"
        ],
        "points": 1500.0,
        "contestId": 73,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "FreeDiv",
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy"
        ],
        "points": 1500.0,
        "contestId": 73,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "LionAge II",
        "tags": [
            "dp"
        ],
        "points": 1000.0,
        "contestId": 73,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Need For Brake",
        "tags": [
            "binary search",
            "greedy",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 73,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "The Elder Trolls IV: Oblivon",
        "tags": [
            "greedy",
            "math"
        ],
        "points": 500.0,
        "contestId": 73,
        "index": "A"
    },
    {
        "contestId": 72,
        "name": "Goofy Numbers",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "I"
    },
    {
        "contestId": 72,
        "name": "Reverse It!",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "H"
    },
    {
        "contestId": 72,
        "name": "Fibonacci army",
        "tags": [
            "dp"
        ],
        "type": "PROGRAMMING",
        "index": "G"
    },
    {
        "contestId": 72,
        "name": "Oil",
        "tags": [
            "greedy",
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 72,
        "name": "Ali goes shopping",
        "tags": [
            "brute force",
            "strings"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 72,
        "name": "Perse-script",
        "tags": [
            "expression parsing"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 72,
        "name": "Extraordinarily Nice Numbers",
        "tags": [
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 72,
        "name": "INI-file",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 72,
        "name": "Goshtasp, Vishtasp and Eidi",
        "tags": [
            "greedy",
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Nuclear Fusion",
        "tags": [
            "bitmasks",
            "dp"
        ],
        "points": 2500.0,
        "contestId": 71,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Solitaire",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 2000.0,
        "contestId": 71,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Round Table Knights",
        "tags": [
            "dp",
            "math",
            "number theory"
        ],
        "points": 1500.0,
        "contestId": 71,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Progress Bar",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 1000.0,
        "contestId": 71,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Way Too Long Words",
        "tags": [
            "strings"
        ],
        "points": 500.0,
        "contestId": 71,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Information Reform",
        "tags": [
            "dp",
            "implementation",
            "trees"
        ],
        "points": 2500.0,
        "contestId": 70,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Professor's task",
        "tags": [
            "data structures",
            "geometry"
        ],
        "points": 2000.0,
        "contestId": 70,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lucky Tickets",
        "tags": [
            "binary search",
            "data structures",
            "sortings",
            "two pointers"
        ],
        "points": 1500.0,
        "contestId": 70,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Text Messaging",
        "tags": [
            "expression parsing",
            "greedy",
            "strings"
        ],
        "points": 1000.0,
        "contestId": 70,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cookies",
        "tags": [
            "math"
        ],
        "points": 500.0,
        "contestId": 70,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Subsegments",
        "tags": [
            "data structures",
            "implementation"
        ],
        "points": 2500.0,
        "contestId": 69,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dot",
        "tags": [
            "dp",
            "games"
        ],
        "points": 2000.0,
        "contestId": 69,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Game",
        "tags": [
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 69,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bets",
        "tags": [
            "greedy",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 69,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Young Physicist",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 69,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Contact",
        "tags": [
            "geometry"
        ],
        "points": 2500.0,
        "contestId": 68,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Half-decay tree",
        "tags": [
            "data structures",
            "divide and conquer",
            "dp",
            "probabilities"
        ],
        "points": 2000.0,
        "contestId": 68,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Synchrophasotron",
        "tags": [
            "brute force"
        ],
        "points": 1500.0,
        "contestId": 68,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Energy exchange",
        "tags": [
            "binary search"
        ],
        "points": 1000.0,
        "contestId": 68,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Irrational problem",
        "tags": [
            "implementation",
            "number theory"
        ],
        "points": 500.0,
        "contestId": 68,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Save the City!",
        "tags": [
            "geometry"
        ],
        "points": 2500.0,
        "contestId": 67,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Optical Experiment",
        "tags": [
            "binary search",
            "data structures",
            "dp"
        ],
        "points": 2000.0,
        "contestId": 67,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sequence of Balls",
        "tags": [
            "dp"
        ],
        "points": 1500.0,
        "contestId": 67,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Restoration of the Permutation",
        "tags": [
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 67,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Partial Teacher",
        "tags": [
            "dp",
            "graphs",
            "greedy",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 67,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Petya and Post",
        "tags": [
            "data structures",
            "dp"
        ],
        "points": 2500.0,
        "contestId": 66,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Petya and His Friends",
        "tags": [
            "constructive algorithms",
            "math",
            "number theory"
        ],
        "points": 2000.0,
        "contestId": 66,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Petya and File System",
        "tags": [
            "data structures",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 66,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Petya and Countryside",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 66,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Petya and Java",
        "tags": [
            "implementation",
            "strings"
        ],
        "points": 500.0,
        "contestId": 66,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Harry Potter and Moving Staircases",
        "tags": [
            "dfs and similar",
            "implementation"
        ],
        "points": 2500.0,
        "contestId": 65,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Harry Potter and the Sorting Hat",
        "tags": [
            "brute force",
            "dfs and similar",
            "hashing"
        ],
        "points": 2000.0,
        "contestId": 65,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Harry Potter and the Golden Snitch",
        "tags": [
            "binary search",
            "geometry"
        ],
        "points": 1500.0,
        "contestId": 65,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Harry Potter and the History of Magic",
        "tags": [
            "brute force",
            "greedy",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 65,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Harry Potter and Three Spells",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 65,
        "index": "A"
    },
    {
        "contestId": 64,
        "name": "Sort the Table",
        "tags": [
            "sortings"
        ],
        "type": "PROGRAMMING",
        "index": "I"
    },
    {
        "contestId": 64,
        "name": "Table Bowling",
        "tags": [
            "sortings"
        ],
        "type": "PROGRAMMING",
        "index": "H"
    },
    {
        "contestId": 64,
        "name": "Path Canonization",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "G"
    },
    {
        "contestId": 64,
        "name": "Domain",
        "tags": [
            "expression parsing"
        ],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 64,
        "name": "Prime Segment",
        "tags": [
            "brute force"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 64,
        "name": "Presents",
        "tags": [
            "greedy"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 64,
        "name": "Table",
        "tags": [
            "greedy",
            "implementation",
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 64,
        "name": "Expression",
        "tags": [
            "expression parsing"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 64,
        "name": "Factorial",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sweets Game",
        "tags": [
            "bitmasks",
            "dfs and similar",
            "dp",
            "games",
            "implementation"
        ],
        "points": 2500.0,
        "contestId": 63,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dividing Island",
        "tags": [
            "constructive algorithms"
        ],
        "points": 2000.0,
        "contestId": 63,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bulls and Cows",
        "tags": [
            "brute force",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 63,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Settlers' Training",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 63,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sinking Ship",
        "tags": [
            "implementation",
            "sortings",
            "strings"
        ],
        "points": 500.0,
        "contestId": 63,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "World Evil",
        "tags": [
            "dp",
            "flows"
        ],
        "points": 2500.0,
        "contestId": 62,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Wormhouse",
        "tags": [
            "dfs and similar",
            "graphs"
        ],
        "points": 2000.0,
        "contestId": 62,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Inquisition",
        "tags": [
            "geometry",
            "implementation",
            "sortings"
        ],
        "points": 1500.0,
        "contestId": 62,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tyndex.Brome",
        "tags": [
            "binary search",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 62,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "A Student's Dream",
        "tags": [
            "greedy",
            "math"
        ],
        "points": 500.0,
        "contestId": 62,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Enemy is weak",
        "tags": [
            "data structures",
            "trees"
        ],
        "points": 2500.0,
        "contestId": 61,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Eternal Victory",
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "shortest paths",
            "trees"
        ],
        "points": 2000.0,
        "contestId": 61,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Capture Valerian",
        "tags": [
            "math"
        ],
        "points": 1500.0,
        "contestId": 61,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Hard Work",
        "tags": [
            "strings"
        ],
        "points": 1000.0,
        "contestId": 61,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ultra-Fast Mathematician",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 61,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Mushroom Gnomes",
        "tags": [
            "math",
            "matrices"
        ],
        "points": 2500.0,
        "contestId": 60,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Savior",
        "tags": [
            "brute force",
            "dsu",
            "math"
        ],
        "points": 2000.0,
        "contestId": 60,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Mushroom Strife",
        "tags": [
            "brute force",
            "dfs and similar"
        ],
        "points": 1500.0,
        "contestId": 60,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Serial Time!",
        "tags": [
            "dfs and similar",
            "dsu"
        ],
        "points": 1000.0,
        "contestId": 60,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Where Are My Flakes?",
        "tags": [
            "implementation",
            "two pointers"
        ],
        "points": 500.0,
        "contestId": 60,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Shortest Path",
        "tags": [
            "graphs",
            "shortest paths"
        ],
        "points": 2500.0,
        "contestId": 59,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Team Arrangement",
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation"
        ],
        "points": 2000.0,
        "contestId": 59,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Title",
        "tags": [
            "expression parsing"
        ],
        "points": 1500.0,
        "contestId": 59,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fortune Telling",
        "tags": [
            "implementation",
            "number theory"
        ],
        "points": 1000.0,
        "contestId": 59,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Word",
        "tags": [
            "implementation",
            "strings"
        ],
        "points": 500.0,
        "contestId": 59,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Expression",
        "tags": [
            "dp"
        ],
        "points": 2500.0,
        "contestId": 58,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Calendar",
        "tags": [
            "greedy",
            "strings"
        ],
        "points": 2000.0,
        "contestId": 58,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Trees",
        "tags": [
            "brute force"
        ],
        "points": 1500.0,
        "contestId": 58,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Coins",
        "tags": [
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 58,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Chat room",
        "tags": [
            "greedy",
            "strings"
        ],
        "points": 500.0,
        "contestId": 58,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Chess",
        "tags": [
            "math",
            "shortest paths"
        ],
        "points": 2500.0,
        "contestId": 57,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Journey",
        "tags": [
            "dp",
            "math"
        ],
        "points": 2000.0,
        "contestId": 57,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Array",
        "tags": [
            "combinatorics",
            "math"
        ],
        "points": 1500.0,
        "contestId": 57,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Martian Architecture",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 57,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Square Earth?",
        "tags": [
            "dfs and similar",
            "greedy",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 57,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Domino Principle",
        "tags": [
            "binary search",
            "data structures",
            "sortings"
        ],
        "points": 2500.0,
        "contestId": 56,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Changing a String",
        "tags": [
            "dp"
        ],
        "points": 2000.0,
        "contestId": 56,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Corporation Mail",
        "tags": [
            "data structures",
            "expression parsing",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 56,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Spoilt Permutation",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 56,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bar",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 56,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Very simple problem",
        "tags": [
            "geometry",
            "two pointers"
        ],
        "points": 2500.0,
        "contestId": 55,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Beautiful numbers",
        "tags": [
            "dp",
            "number theory"
        ],
        "points": 2000.0,
        "contestId": 55,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Pie or die",
        "tags": [
            "games"
        ],
        "points": 1500.0,
        "contestId": 55,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Smallest number",
        "tags": [
            "brute force"
        ],
        "points": 1000.0,
        "contestId": 55,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Flea travel",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 55,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Vacuum \u0421leaner",
        "tags": [
            "geometry"
        ],
        "points": 2500.0,
        "contestId": 54,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Writing a Song",
        "tags": [
            "brute force",
            "dp"
        ],
        "points": 2000.0,
        "contestId": 54,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "First Digit Law",
        "tags": [
            "dp",
            "math",
            "probabilities"
        ],
        "points": 1500.0,
        "contestId": 54,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cutting Jigsaw Puzzle",
        "tags": [
            "hashing",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 54,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Presents",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 54,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dead Ends",
        "tags": [
            "bitmasks",
            "dp"
        ],
        "points": 2500.0,
        "contestId": 53,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Physical Education",
        "tags": [
            "sortings"
        ],
        "points": 2000.0,
        "contestId": 53,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Little Frog",
        "tags": [
            "constructive algorithms"
        ],
        "points": 1500.0,
        "contestId": 53,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Blog Photo",
        "tags": [
            "binary search",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 53,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Autocomplete",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 53,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Circular RMQ",
        "tags": [
            "data structures"
        ],
        "points": 1500.0,
        "contestId": 52,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Right Triangles",
        "tags": [
            "combinatorics"
        ],
        "points": 1000.0,
        "contestId": 52,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "123-sequence",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 52,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Caterpillar",
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "trees"
        ],
        "points": 3000.0,
        "contestId": 51,
        "index": "F"
    },
    {
        "type": "PROGRAMMING",
        "name": "Pentagon",
        "tags": [
            "combinatorics",
            "graphs",
            "matrices"
        ],
        "points": 2500.0,
        "contestId": 51,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Geometrical problem",
        "tags": [
            "implementation"
        ],
        "points": 2000.0,
        "contestId": 51,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Three Base Stations",
        "tags": [
            "binary search",
            "greedy"
        ],
        "points": 1500.0,
        "contestId": 51,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "bHTML Tables Analisys",
        "tags": [
            "expression parsing"
        ],
        "points": 1000.0,
        "contestId": 51,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cheaterius's Problem",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 51,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Square Equation Roots",
        "tags": [
            "math"
        ],
        "points": 2500.0,
        "contestId": 50,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bombing",
        "tags": [
            "binary search",
            "dp",
            "probabilities"
        ],
        "points": 2000.0,
        "contestId": 50,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Happy Farm 5",
        "tags": [
            "geometry"
        ],
        "points": 1500.0,
        "contestId": 50,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Choosing Symbol Pairs",
        "tags": [
            "strings"
        ],
        "points": 1000.0,
        "contestId": 50,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Domino piling",
        "tags": [
            "greedy",
            "math"
        ],
        "points": 500.0,
        "contestId": 50,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Common ancestor",
        "tags": [
            "dp"
        ],
        "points": 2500.0,
        "contestId": 49,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Game",
        "tags": [
            "brute force",
            "dp",
            "implementation"
        ],
        "points": 2000.0,
        "contestId": 49,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Disposition",
        "tags": [
            "constructive algorithms",
            "math"
        ],
        "points": 1500.0,
        "contestId": 49,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sum",
        "tags": [
            "math"
        ],
        "points": 1000.0,
        "contestId": 49,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sleuth",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 49,
        "index": "A"
    },
    {
        "contestId": 48,
        "name": "Black and White",
        "tags": [
            "constructive algorithms"
        ],
        "type": "PROGRAMMING",
        "index": "H"
    },
    {
        "contestId": 48,
        "name": "Galaxy Union",
        "tags": [
            "dp",
            "trees",
            "two pointers"
        ],
        "type": "PROGRAMMING",
        "index": "G"
    },
    {
        "contestId": 48,
        "name": "Snow sellers",
        "tags": [
            "greedy",
            "sortings"
        ],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 48,
        "name": "Ivan the Fool VS Gorynych the Dragon",
        "tags": [
            "dp",
            "games",
            "graphs"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 48,
        "name": "Permutations",
        "tags": [
            "greedy"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 48,
        "name": "The Race",
        "tags": [
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 48,
        "name": "Land Lot",
        "tags": [
            "brute force",
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 48,
        "name": "Rock-paper-scissors",
        "tags": [
            "implementation",
            "schedules"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Cannon",
        "tags": [
            "data structures",
            "geometry",
            "sortings"
        ],
        "points": 2500.0,
        "contestId": 47,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Safe",
        "tags": [
            "brute force"
        ],
        "points": 2000.0,
        "contestId": 47,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Crossword",
        "tags": [
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 47,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Coins",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 47,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Triangular numbers",
        "tags": [
            "brute force",
            "math"
        ],
        "points": 500.0,
        "contestId": 47,
        "index": "A"
    },
    {
        "contestId": 46,
        "name": "Emperor's Problem",
        "tags": [
            "geometry"
        ],
        "type": "PROGRAMMING",
        "index": "G"
    },
    {
        "contestId": 46,
        "name": "Hercule Poirot Problem",
        "tags": [
            "dsu",
            "graphs"
        ],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 46,
        "name": "Comb",
        "tags": [
            "data structures",
            "dp"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 46,
        "name": "Parking Lot",
        "tags": [
            "data structures",
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 46,
        "name": "Hamsters and Tigers",
        "tags": [
            "two pointers"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 46,
        "name": "T-shirts from Sponsor",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 46,
        "name": "Ball Game",
        "tags": [
            "brute force",
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "contestId": 45,
        "name": "Planting Trees",
        "tags": [
            "constructive algorithms"
        ],
        "type": "PROGRAMMING",
        "index": "J"
    },
    {
        "contestId": 45,
        "name": "TCMCF+++",
        "tags": [
            "greedy"
        ],
        "type": "PROGRAMMING",
        "index": "I"
    },
    {
        "contestId": 45,
        "name": "Road Problem",
        "tags": [
            "graphs"
        ],
        "type": "PROGRAMMING",
        "index": "H"
    },
    {
        "contestId": 45,
        "name": "Prime Problem",
        "tags": [
            "number theory"
        ],
        "type": "PROGRAMMING",
        "index": "G"
    },
    {
        "contestId": 45,
        "name": "Goats and Wolves",
        "tags": [
            "greedy"
        ],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 45,
        "name": "Director",
        "tags": [
            "constructive algorithms",
            "greedy"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 45,
        "name": "Event Dates",
        "tags": [
            "greedy",
            "meet-in-the-middle",
            "sortings"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 45,
        "name": "Dancing Lessons",
        "tags": [
            "data structures"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 45,
        "name": "School",
        "tags": [
            "dp",
            "dsu"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 45,
        "name": "Codecraft III",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "contestId": 44,
        "name": "Triminoes",
        "tags": [
            "constructive algorithms",
            "greedy"
        ],
        "type": "PROGRAMMING",
        "index": "J"
    },
    {
        "contestId": 44,
        "name": "Toys",
        "tags": [
            "brute force",
            "combinatorics"
        ],
        "type": "PROGRAMMING",
        "index": "I"
    },
    {
        "contestId": 44,
        "name": "Phone Number",
        "tags": [
            "dp"
        ],
        "type": "PROGRAMMING",
        "index": "H"
    },
    {
        "contestId": 44,
        "name": "Shooting Gallery",
        "tags": [
            "data structures",
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "G"
    },
    {
        "contestId": 44,
        "name": "BerPaint",
        "tags": [
            "geometry",
            "graphs"
        ],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 44,
        "name": "Anfisa the Monkey",
        "tags": [
            "dp"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 44,
        "name": "Hyperdrive",
        "tags": [
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 44,
        "name": "Holidays",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 44,
        "name": "Cola",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 44,
        "name": "Indian Summer",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Race",
        "tags": [
            "brute force",
            "implementation",
            "two pointers"
        ],
        "points": 2500.0,
        "contestId": 43,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Journey",
        "tags": [
            "brute force",
            "constructive algorithms",
            "implementation"
        ],
        "points": 2000.0,
        "contestId": 43,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lucky Tickets",
        "tags": [
            "greedy"
        ],
        "points": 1500.0,
        "contestId": 43,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Letter",
        "tags": [
            "implementation",
            "strings"
        ],
        "points": 1000.0,
        "contestId": 43,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Football",
        "tags": [
            "strings"
        ],
        "points": 500.0,
        "contestId": 43,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Baldman and the military",
        "tags": [
            "dfs and similar",
            "graphs"
        ],
        "points": 2500.0,
        "contestId": 42,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Strange town",
        "tags": [
            "constructive algorithms",
            "math"
        ],
        "points": 2000.0,
        "contestId": 42,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Safe cracking",
        "tags": [
            "brute force",
            "constructive algorithms"
        ],
        "points": 1500.0,
        "contestId": 42,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Game of chess unfinished",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 42,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Guilty --- to the kitchen!",
        "tags": [
            "greedy",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 42,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "3-cycles",
        "tags": [
            "constructive algorithms",
            "graphs",
            "greedy"
        ],
        "points": 2500.0,
        "contestId": 41,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Pawn",
        "tags": [
            "dp"
        ],
        "points": 2000.0,
        "contestId": 41,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Email address",
        "tags": [
            "expression parsing",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 41,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Martian Dollar",
        "tags": [
            "brute force"
        ],
        "points": 1000.0,
        "contestId": 41,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Translation",
        "tags": [
            "implementation",
            "strings"
        ],
        "points": 500.0,
        "contestId": 41,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Number Table",
        "tags": [
            "combinatorics"
        ],
        "points": 2500.0,
        "contestId": 40,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Interesting Sequence",
        "tags": [
            "math"
        ],
        "points": 2000.0,
        "contestId": 40,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Berland Square",
        "tags": [
            "math"
        ],
        "points": 1500.0,
        "contestId": 40,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Repaintings",
        "tags": [
            "math"
        ],
        "points": 1000.0,
        "contestId": 40,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Find Color",
        "tags": [
            "constructive algorithms",
            "implementation",
            "math"
        ],
        "points": 500.0,
        "contestId": 40,
        "index": "A"
    },
    {
        "contestId": 39,
        "name": "Testing",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "K"
    },
    {
        "contestId": 39,
        "name": "Spelling Check",
        "tags": [
            "hashing",
            "implementation",
            "strings"
        ],
        "type": "PROGRAMMING",
        "index": "J"
    },
    {
        "contestId": 39,
        "name": "Tram",
        "tags": [],
        "type": "PROGRAMMING",
        "index": "I"
    },
    {
        "contestId": 39,
        "name": "Multiplication Table",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "H"
    },
    {
        "contestId": 39,
        "name": "Inverse Function",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "G"
    },
    {
        "contestId": 39,
        "name": "Pacifist frogs",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 39,
        "name": "What Has Dirichlet Got to Do with That?",
        "tags": [
            "dp",
            "games"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 39,
        "name": "Cubical Planet",
        "tags": [
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 39,
        "name": "Moon Craters",
        "tags": [
            "dp",
            "sortings"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 39,
        "name": "Company Income Growth",
        "tags": [
            "greedy"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 39,
        "name": "C*++ Calculations",
        "tags": [
            "expression parsing",
            "greedy"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "contestId": 38,
        "name": "The Great Marathon",
        "tags": [
            "dp"
        ],
        "type": "PROGRAMMING",
        "index": "H"
    },
    {
        "contestId": 38,
        "name": "Queue",
        "tags": [
            "data structures"
        ],
        "type": "PROGRAMMING",
        "index": "G"
    },
    {
        "contestId": 38,
        "name": "Smart Boy",
        "tags": [
            "dp",
            "games",
            "strings"
        ],
        "type": "PROGRAMMING",
        "index": "F"
    },
    {
        "contestId": 38,
        "name": "Let's Go Rolling!",
        "tags": [
            "dp",
            "sortings"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 38,
        "name": "Vasya the Architect",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 38,
        "name": "Blinds",
        "tags": [
            "brute force"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 38,
        "name": "Chess",
        "tags": [
            "brute force",
            "implementation",
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 38,
        "name": "Army",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Trial for Chief",
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ],
        "points": 2500.0,
        "contestId": 37,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Lesson Timetable",
        "tags": [
            "combinatorics",
            "dp",
            "math"
        ],
        "points": 2000.0,
        "contestId": 37,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Old Berland Language",
        "tags": [
            "data structures",
            "greedy",
            "trees"
        ],
        "points": 1500.0,
        "contestId": 37,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Computer Game",
        "tags": [
            "greedy",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 37,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Towers",
        "tags": [
            "sortings"
        ],
        "points": 500.0,
        "contestId": 37,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Two Paths",
        "tags": [
            "constructive algorithms",
            "dsu",
            "graphs",
            "implementation"
        ],
        "points": 2500.0,
        "contestId": 36,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "New Game with a Chess Piece",
        "tags": [
            "games"
        ],
        "points": 2000.0,
        "contestId": 36,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bowls",
        "tags": [
            "geometry",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 36,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fractal",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 36,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Extra-terrestrial Intelligence",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 36,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Parade",
        "tags": [
            "data structures",
            "sortings"
        ],
        "points": 2500.0,
        "contestId": 35,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Animals",
        "tags": [
            "dp",
            "greedy"
        ],
        "points": 2000.0,
        "contestId": 35,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Fire Again",
        "tags": [
            "brute force",
            "dfs and similar",
            "shortest paths"
        ],
        "points": 1500.0,
        "contestId": 35,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Warehouse",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 35,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Shell Game",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 35,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Collisions",
        "tags": [
            "brute force",
            "implementation",
            "math"
        ],
        "points": 2500.0,
        "contestId": 34,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Road Map",
        "tags": [
            "dfs and similar",
            "graphs"
        ],
        "points": 2000.0,
        "contestId": 34,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Page Numbers",
        "tags": [
            "expression parsing",
            "implementation",
            "sortings",
            "strings"
        ],
        "points": 1500.0,
        "contestId": 34,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sale",
        "tags": [
            "greedy",
            "sortings"
        ],
        "points": 1000.0,
        "contestId": 34,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Reconnaissance 2",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 34,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Helper",
        "tags": [],
        "points": 2500.0,
        "contestId": 33,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Knights",
        "tags": [
            "geometry",
            "graphs",
            "shortest paths",
            "sortings"
        ],
        "points": 2000.0,
        "contestId": 33,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Wonderful Randomized Sum",
        "tags": [
            "greedy"
        ],
        "points": 1500.0,
        "contestId": 33,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "String Problem",
        "tags": [
            "shortest paths"
        ],
        "points": 1000.0,
        "contestId": 33,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "What is for dinner?",
        "tags": [
            "greedy",
            "implementation"
        ],
        "points": 500.0,
        "contestId": 33,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Hide-and-Seek",
        "tags": [
            "geometry",
            "implementation"
        ],
        "points": 2500.0,
        "contestId": 32,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Constellation",
        "tags": [
            "implementation"
        ],
        "points": 2000.0,
        "contestId": 32,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Flea",
        "tags": [
            "math"
        ],
        "points": 1500.0,
        "contestId": 32,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Borze",
        "tags": [
            "expression parsing",
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 32,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Reconnaissance",
        "tags": [
            "brute force"
        ],
        "points": 500.0,
        "contestId": 32,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "TV Game",
        "tags": [
            "dp"
        ],
        "points": 2500.0,
        "contestId": 31,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Chocolate",
        "tags": [
            "dfs and similar",
            "implementation"
        ],
        "points": 2000.0,
        "contestId": 31,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Schedule",
        "tags": [
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 31,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Sysadmin Bob",
        "tags": [
            "strings"
        ],
        "points": 1000.0,
        "contestId": 31,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Worms Evolution",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 31,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tricky and Clever Password",
        "tags": [
            "binary search",
            "constructive algorithms",
            "data structures",
            "greedy",
            "hashing",
            "strings"
        ],
        "points": 2500.0,
        "contestId": 30,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "King's Problem?",
        "tags": [
            "geometry",
            "greedy"
        ],
        "points": 2000.0,
        "contestId": 30,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Shooting Gallery",
        "tags": [
            "dp",
            "probabilities"
        ],
        "points": 1500.0,
        "contestId": 30,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Codeforces World Finals",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 30,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Accounting",
        "tags": [
            "brute force",
            "math"
        ],
        "points": 500.0,
        "contestId": 30,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Quarrel",
        "tags": [
            "graphs",
            "shortest paths"
        ],
        "points": 2500.0,
        "contestId": 29,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ant on the Tree",
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "trees"
        ],
        "points": 2000.0,
        "contestId": 29,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Mail Stamps",
        "tags": [
            "data structures",
            "dfs and similar",
            "graphs",
            "implementation"
        ],
        "points": 1500.0,
        "contestId": 29,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Traffic Lights",
        "tags": [
            "implementation"
        ],
        "points": 1000.0,
        "contestId": 29,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Spit Problem",
        "tags": [
            "brute force"
        ],
        "points": 500.0,
        "contestId": 29,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "DravDe saves the world",
        "tags": [
            "geometry",
            "math"
        ],
        "points": 2500.0,
        "contestId": 28,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Don't fear, DravDe is kind",
        "tags": [
            "binary search",
            "data structures",
            "dp",
            "hashing"
        ],
        "points": 2000.0,
        "contestId": 28,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bath Queue",
        "tags": [
            "combinatorics",
            "dp",
            "probabilities"
        ],
        "points": 1500.0,
        "contestId": 28,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "pSort",
        "tags": [
            "dfs and similar",
            "dsu",
            "graphs"
        ],
        "points": 1000.0,
        "contestId": 28,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Bender Problem",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 28,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Number With The Given Amount Of Divisors",
        "tags": [
            "brute force",
            "dp",
            "number theory"
        ],
        "points": 2500.0,
        "contestId": 27,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Ring Road 2",
        "tags": [
            "2-sat",
            "dfs and similar",
            "dsu",
            "graphs"
        ],
        "points": 2000.0,
        "contestId": 27,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Unordered Subsequence",
        "tags": [
            "constructive algorithms",
            "greedy"
        ],
        "points": 1500.0,
        "contestId": 27,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tournament",
        "tags": [
            "bitmasks",
            "brute force",
            "dfs and similar",
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 27,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Next Test",
        "tags": [
            "implementation",
            "sortings"
        ],
        "points": 500.0,
        "contestId": 27,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Multithreading",
        "tags": [
            "constructive algorithms"
        ],
        "points": 2500.0,
        "contestId": 26,
        "index": "E"
    },
    {
        "type": "PROGRAMMING",
        "name": "Tickets",
        "tags": [
            "combinatorics",
            "probabilities"
        ],
        "points": 2000.0,
        "contestId": 26,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Parquet",
        "tags": [
            "combinatorics",
            "constructive algorithms"
        ],
        "points": 1500.0,
        "contestId": 26,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Regular Bracket Sequence",
        "tags": [
            "greedy"
        ],
        "points": 1000.0,
        "contestId": 26,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Almost Prime",
        "tags": [
            "number theory"
        ],
        "points": 500.0,
        "contestId": 26,
        "index": "A"
    },
    {
        "contestId": 25,
        "name": "Test",
        "tags": [
            "hashing",
            "strings"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 25,
        "name": "Roads not only in Berland",
        "tags": [
            "dsu",
            "graphs",
            "trees"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 25,
        "name": "Roads in Berland",
        "tags": [
            "graphs",
            "shortest paths"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 25,
        "name": "Phone numbers",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 25,
        "name": "IQ test",
        "tags": [
            "brute force"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "contestId": 24,
        "name": "Berland collider",
        "tags": [
            "binary search"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 24,
        "name": "Broken robot",
        "tags": [
            "dp",
            "probabilities"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 24,
        "name": "Sequence of points",
        "tags": [
            "geometry",
            "implementation",
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 24,
        "name": "F1 Champions",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 24,
        "name": "Ring road",
        "tags": [
            "graphs"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "contestId": 23,
        "name": "Tree",
        "tags": [
            "dp"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 23,
        "name": "Tetragon",
        "tags": [
            "geometry",
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 23,
        "name": "Oranges and Apples",
        "tags": [
            "constructive algorithms",
            "sortings"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 23,
        "name": "Party",
        "tags": [
            "constructive algorithms",
            "graphs",
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 23,
        "name": "You're Given a String...",
        "tags": [
            "brute force",
            "greedy"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "contestId": 22,
        "name": "Scheme",
        "tags": [
            "dfs and similar",
            "graphs",
            "trees"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 22,
        "name": "Segments",
        "tags": [
            "greedy",
            "sortings"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 22,
        "name": "System Administrator",
        "tags": [
            "graphs"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 22,
        "name": "Bargaining Table",
        "tags": [
            "brute force",
            "dp"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 22,
        "name": "Second Order Statistics",
        "tags": [
            "brute force"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Traveling Graph",
        "tags": [
            "bitmasks",
            "graph matchings",
            "graphs"
        ],
        "points": 2000.0,
        "contestId": 21,
        "index": "D"
    },
    {
        "type": "PROGRAMMING",
        "name": "Stripe 2",
        "tags": [
            "binary search",
            "dp",
            "sortings"
        ],
        "points": 1500.0,
        "contestId": 21,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Intersection",
        "tags": [
            "implementation",
            "math"
        ],
        "points": 1000.0,
        "contestId": 21,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "Jabber ID",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 21,
        "index": "A"
    },
    {
        "type": "PROGRAMMING",
        "name": "Dijkstra?",
        "tags": [
            "graphs",
            "shortest paths"
        ],
        "points": 1500.0,
        "contestId": 20,
        "index": "C"
    },
    {
        "type": "PROGRAMMING",
        "name": "Equation",
        "tags": [
            "math"
        ],
        "points": 1000.0,
        "contestId": 20,
        "index": "B"
    },
    {
        "type": "PROGRAMMING",
        "name": "BerOS file system",
        "tags": [
            "implementation"
        ],
        "points": 500.0,
        "contestId": 20,
        "index": "A"
    },
    {
        "contestId": 19,
        "name": "Fairy",
        "tags": [
            "dfs and similar",
            "divide and conquer",
            "dsu"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 19,
        "name": "Points",
        "tags": [
            "data structures"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 19,
        "name": "Deletion of Repeats",
        "tags": [
            "greedy",
            "hashing",
            "string suffix structures"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 19,
        "name": "Checkout Assistant",
        "tags": [
            "dp"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 19,
        "name": "World Football Cup",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "contestId": 18,
        "name": "Flag 2",
        "tags": [
            "dp"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 18,
        "name": "Seller Bob",
        "tags": [
            "brute force",
            "dp",
            "greedy"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 18,
        "name": "Stripe",
        "tags": [
            "data structures",
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 18,
        "name": "Platforms",
        "tags": [
            "brute force",
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 18,
        "name": "Triangle",
        "tags": [
            "brute force",
            "geometry"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "contestId": 17,
        "name": "Palisection",
        "tags": [
            "strings"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 17,
        "name": "Notepad",
        "tags": [
            "number theory"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 17,
        "name": "Balance",
        "tags": [
            "dp"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 17,
        "name": "Hierarchy",
        "tags": [
            "dfs and similar",
            "dsu",
            "greedy",
            "shortest paths"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 17,
        "name": "Noldbach problem",
        "tags": [
            "brute force",
            "math",
            "number theory"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "contestId": 16,
        "name": "Fish",
        "tags": [
            "bitmasks",
            "dp",
            "probabilities"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 16,
        "name": "Logging",
        "tags": [
            "implementation",
            "strings"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 16,
        "name": "Monitor",
        "tags": [
            "binary search",
            "number theory"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 16,
        "name": "Burglar and Matches",
        "tags": [
            "greedy",
            "implementation",
            "sortings"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 16,
        "name": "Flag",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "contestId": 15,
        "name": "Triangles",
        "tags": [
            "combinatorics",
            "dp"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 15,
        "name": "Map",
        "tags": [
            "data structures",
            "implementation",
            "sortings"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 15,
        "name": "Industrial Nim",
        "tags": [
            "games"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 15,
        "name": "Laser",
        "tags": [
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 15,
        "name": "Cottage Village",
        "tags": [
            "implementation",
            "sortings"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "contestId": 14,
        "name": "Camels",
        "tags": [
            "dp"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 14,
        "name": "Two Paths",
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "shortest paths",
            "trees",
            "two pointers"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 14,
        "name": "Four Segments",
        "tags": [
            "brute force",
            "constructive algorithms",
            "geometry",
            "implementation",
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 14,
        "name": "Young Photographer",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 14,
        "name": "Letter",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "contestId": 13,
        "name": "Holes",
        "tags": [
            "data structures",
            "dsu"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 13,
        "name": "Triangles",
        "tags": [
            "dp",
            "geometry"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 13,
        "name": "Sequence",
        "tags": [
            "dp",
            "sortings"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 13,
        "name": "Letter A",
        "tags": [
            "geometry",
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 13,
        "name": "Numbers",
        "tags": [
            "implementation",
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "contestId": 12,
        "name": "Start of the session",
        "tags": [
            "constructive algorithms"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 12,
        "name": "Ball",
        "tags": [
            "data structures",
            "sortings"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 12,
        "name": "Fruits",
        "tags": [
            "implementation",
            "sortings"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 12,
        "name": "Correct Solution?",
        "tags": [
            "implementation",
            "sortings"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 12,
        "name": "Super Agent",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "contestId": 11,
        "name": "Forward, march!",
        "tags": [
            "binary search",
            "dp",
            "greedy"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 11,
        "name": "A Simple Task",
        "tags": [
            "bitmasks",
            "dp",
            "graphs"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 11,
        "name": "How Many Squares?",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 11,
        "name": "Jumping Jack",
        "tags": [
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 11,
        "name": "Increasing Sequence",
        "tags": [
            "constructive algorithms",
            "implementation",
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "contestId": 10,
        "name": "Greedy Change",
        "tags": [
            "constructive algorithms"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 10,
        "name": "LCIS",
        "tags": [
            "dp"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 10,
        "name": "Digital Root",
        "tags": [
            "number theory"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 10,
        "name": "Cinema Cashier",
        "tags": [
            "dp",
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 10,
        "name": "Power Consumption Calculation",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "contestId": 9,
        "name": "Interestring graph and Apples",
        "tags": [
            "dfs and similar",
            "dsu",
            "graphs"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 9,
        "name": "How many trees?",
        "tags": [
            "combinatorics",
            "divide and conquer",
            "dp"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 9,
        "name": "Hexadecimal's Numbers",
        "tags": [
            "brute force",
            "implementation",
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 9,
        "name": "Running Student",
        "tags": [
            "brute force",
            "geometry",
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 9,
        "name": "Die Roll",
        "tags": [
            "math",
            "probabilities"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "contestId": 8,
        "name": "Beads",
        "tags": [
            "dp",
            "graphs"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 8,
        "name": "Two Friends",
        "tags": [
            "binary search",
            "geometry"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 8,
        "name": "Looking for Order",
        "tags": [
            "bitmasks",
            "dp"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 8,
        "name": "Obsession with Robots",
        "tags": [
            "constructive algorithms",
            "graphs",
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 8,
        "name": "Train and Peter",
        "tags": [
            "strings"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "contestId": 7,
        "name": "Defining Macros",
        "tags": [
            "dp",
            "expression parsing",
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 7,
        "name": "Palindrome Degree",
        "tags": [
            "hashing",
            "strings"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 7,
        "name": "Line",
        "tags": [
            "math",
            "number theory"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 7,
        "name": "Memory Manager",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 7,
        "name": "Kalevitch and Chess",
        "tags": [
            "brute force",
            "constructive algorithms"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "contestId": 6,
        "name": "Exposition",
        "tags": [
            "binary search",
            "data structures",
            "dsu",
            "trees",
            "two pointers"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 6,
        "name": "Lizards and Basements 2",
        "tags": [
            "brute force",
            "dp"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 6,
        "name": "Alice, Bob and Chocolate",
        "tags": [
            "greedy",
            "two pointers"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 6,
        "name": "President's Office",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 6,
        "name": "Triangle",
        "tags": [
            "brute force",
            "geometry"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "contestId": 5,
        "name": "Bindian Signalizing",
        "tags": [
            "data structures"
        ],
        "type": "PROGRAMMING",
        "index": "E"
    },
    {
        "contestId": 5,
        "name": "Follow Traffic Rules",
        "tags": [
            "implementation",
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 5,
        "name": "Longest Regular Bracket Sequence",
        "tags": [
            "constructive algorithms",
            "data structures",
            "dp",
            "greedy",
            "sortings",
            "strings"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 5,
        "name": "Center Alignment",
        "tags": [
            "implementation",
            "strings"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 5,
        "name": "Chat Servers Outgoing Traffic",
        "tags": [
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "contestId": 4,
        "name": "Mysterious Present",
        "tags": [
            "dp",
            "sortings"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 4,
        "name": "Registration System",
        "tags": [
            "data structures",
            "hashing",
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 4,
        "name": "Before an Exam",
        "tags": [
            "constructive algorithms",
            "greedy"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 4,
        "name": "Watermelon",
        "tags": [
            "brute force",
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "contestId": 3,
        "name": "Least Cost Bracket Sequence",
        "tags": [
            "greedy"
        ],
        "type": "PROGRAMMING",
        "index": "D"
    },
    {
        "contestId": 3,
        "name": "Tic-tac-toe",
        "tags": [
            "brute force",
            "games",
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 3,
        "name": "Lorry",
        "tags": [
            "greedy",
            "sortings"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 3,
        "name": "Shortest path of the king",
        "tags": [
            "greedy",
            "shortest paths"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "contestId": 2,
        "name": "Commentator problem",
        "tags": [
            "geometry"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 2,
        "name": "The least round way",
        "tags": [
            "dp",
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 2,
        "name": "Winner",
        "tags": [
            "hashing",
            "implementation"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    },
    {
        "contestId": 1,
        "name": "Ancient Berland Circus",
        "tags": [
            "geometry",
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "C"
    },
    {
        "contestId": 1,
        "name": "Spreadsheet",
        "tags": [
            "implementation",
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "B"
    },
    {
        "contestId": 1,
        "name": "Theatre Square",
        "tags": [
            "math"
        ],
        "type": "PROGRAMMING",
        "index": "A"
    }
]